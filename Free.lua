local StrToNumber = tonumber;
local Byte = string.byte;
local Char = string.char;
local Sub = string.sub;
local Subg = string.gsub;
local Rep = string.rep;
local Concat = table.concat;
local Insert = table.insert;
local LDExp = math.ldexp;
local GetFEnv = getfenv or function()
	return _ENV;
end;
local Setmetatable = setmetatable;
local PCall = pcall;
local Select = select;
local Unpack = unpack or table.unpack;
local ToNumber = tonumber;
local function VMCall(ByteString, vmenv, ...)
	local DIP = 1;
	local repeatNext;
	ByteString = Subg(Sub(ByteString, 5), "..", function(byte)
		if (Byte(byte, 2) == 79) then
			repeatNext = StrToNumber(Sub(byte, 1, 1));
			return "";
		else
			local a = Char(StrToNumber(byte, 16));
			if repeatNext then
				local b = Rep(a, repeatNext);
				repeatNext = nil;
				return b;
			else
				return a;
			end
		end
	end);
	local function gBit(Bit, Start, End)
		if End then
			local Res = (Bit / (2 ^ (Start - 1))) % (2 ^ (((End - 1) - (Start - 1)) + 1));
			return Res - (Res % 1);
		else
			local Plc = 2 ^ (Start - 1);
			return (((Bit % (Plc + Plc)) >= Plc) and 1) or 0;
		end
	end
	local function gBits8()
		local a = Byte(ByteString, DIP, DIP);
		DIP = DIP + 1;
		return a;
	end
	local function gBits16()
		local a, b = Byte(ByteString, DIP, DIP + 2);
		DIP = DIP + 2;
		return (b * 256) + a;
	end
	local function gBits32()
		local a, b, c, d = Byte(ByteString, DIP, DIP + 3);
		DIP = DIP + 4;
		return (d * 16777216) + (c * 65536) + (b * 256) + a;
	end
	local function gFloat()
		local Left = gBits32();
		local Right = gBits32();
		local IsNormal = 1;
		local Mantissa = (gBit(Right, 1, 20) * (2 ^ 32)) + Left;
		local Exponent = gBit(Right, 21, 31);
		local Sign = ((gBit(Right, 32) == 1) and -1) or 1;
		if (Exponent == 0) then
			if (Mantissa == 0) then
				return Sign * 0;
			else
				Exponent = 1;
				IsNormal = 0;
			end
		elseif (Exponent == 2047) then
			return ((Mantissa == 0) and (Sign * (1 / 0))) or (Sign * NaN);
		end
		return LDExp(Sign, Exponent - 1023) * (IsNormal + (Mantissa / (2 ^ 52)));
	end
	local function gString(Len)
		local Str;
		if not Len then
			Len = gBits32();
			if (Len == 0) then
				return "";
			end
		end
		Str = Sub(ByteString, DIP, (DIP + Len) - 1);
		DIP = DIP + Len;
		local FStr = {};
		for Idx = 1, #Str do
			FStr[Idx] = Char(Byte(Sub(Str, Idx, Idx)));
		end
		return Concat(FStr);
	end
	local gInt = gBits32;
	local function _R(...)
		return {...}, Select("#", ...);
	end
	local function Deserialize()
		local Instrs = {};
		local Functions = {};
		local Lines = {};
		local Chunk = {Instrs,Functions,nil,Lines};
		local ConstCount = gBits32();
		local Consts = {};
		for Idx = 1, ConstCount do
			local Type = gBits8();
			local Cons;
			if (Type == 1) then
				Cons = gBits8() ~= 0;
			elseif (Type == 2) then
				Cons = gFloat();
			elseif (Type == 3) then
				Cons = gString();
			end
			Consts[Idx] = Cons;
		end
		Chunk[3] = gBits8();
		for Idx = 1, gBits32() do
			local Descriptor = gBits8();
			if (gBit(Descriptor, 1, 1) == 0) then
				local Type = gBit(Descriptor, 2, 3);
				local Mask = gBit(Descriptor, 4, 6);
				local Inst = {gBits16(),gBits16(),nil,nil};
				if (Type == 0) then
					Inst[3] = gBits16();
					Inst[4] = gBits16();
				elseif (Type == 1) then
					Inst[3] = gBits32();
				elseif (Type == 2) then
					Inst[3] = gBits32() - (2 ^ 16);
				elseif (Type == 3) then
					Inst[3] = gBits32() - (2 ^ 16);
					Inst[4] = gBits16();
				end
				if (gBit(Mask, 1, 1) == 1) then
					Inst[2] = Consts[Inst[2]];
				end
				if (gBit(Mask, 2, 2) == 1) then
					Inst[3] = Consts[Inst[3]];
				end
				if (gBit(Mask, 3, 3) == 1) then
					Inst[4] = Consts[Inst[4]];
				end
				Instrs[Idx] = Inst;
			end
		end
		for Idx = 1, gBits32() do
			Functions[Idx - 1] = Deserialize();
		end
		return Chunk;
	end
	local function Wrap(Chunk, Upvalues, Env)
		local Instr = Chunk[1];
		local Proto = Chunk[2];
		local Params = Chunk[3];
		return function(...)
			local Instr = Instr;
			local Proto = Proto;
			local Params = Params;
			local _R = _R;
			local VIP = 1;
			local Top = -1;
			local Vararg = {};
			local Args = {...};
			local PCount = Select("#", ...) - 1;
			local Lupvals = {};
			local Stk = {};
			for Idx = 0, PCount do
				if (Idx >= Params) then
					Vararg[Idx - Params] = Args[Idx + 1];
				else
					Stk[Idx] = Args[Idx + 1];
				end
			end
			local Varargsz = (PCount - Params) + 1;
			local Inst;
			local Enum;
			while true do
				Inst = Instr[VIP];
				Enum = Inst[1];
				if (Enum <= 201) then
					if (Enum <= 100) then
						if (Enum <= 49) then
							if (Enum <= 24) then
								if (Enum <= 11) then
									if (Enum <= 5) then
										if (Enum <= 2) then
											if (Enum <= 0) then
												local B;
												local A;
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A]();
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]][Inst[3]] = Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												B = Stk[Inst[3]];
												Stk[A + 1] = B;
												Stk[A] = B[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												if Stk[Inst[2]] then
													VIP = VIP + 1;
												else
													VIP = Inst[3];
												end
											elseif (Enum > 1) then
												local B;
												local A;
												A = Inst[2];
												Stk[A](Unpack(Stk, A + 1, Inst[3]));
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												B = Stk[Inst[3]];
												Stk[A + 1] = B;
												Stk[A] = B[Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											else
												local B;
												local A;
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												Stk[A](Stk[A + 1]);
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3] ~= 0;
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Inst[3] ~= 0;
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Env[Inst[3]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
												VIP = VIP + 1;
												Inst = Instr[VIP];
												A = Inst[2];
												B = Stk[Inst[3]];
												Stk[A + 1] = B;
												Stk[A] = B[Inst[4]];
											end
										elseif (Enum <= 3) then
											local A;
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Stk[A + 1]);
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
										elseif (Enum == 4) then
											local B;
											local T;
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											T = Stk[A];
											B = Inst[3];
											for Idx = 1, B do
												T[Idx] = Stk[A + Idx];
											end
										else
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Stk[A + 1]);
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if Stk[Inst[2]] then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										end
									elseif (Enum <= 8) then
										if (Enum <= 6) then
											local K;
											local B;
											local A;
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
										elseif (Enum > 7) then
											local Edx;
											local Results;
											local B;
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Results = {Stk[A](Stk[A + 1])};
											Edx = 0;
											for Idx = A, Inst[4] do
												Edx = Edx + 1;
												Stk[Idx] = Results[Edx];
											end
											VIP = VIP + 1;
											Inst = Instr[VIP];
											VIP = Inst[3];
										else
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if (Stk[Inst[2]] == Inst[4]) then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										end
									elseif (Enum <= 9) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if not Stk[Inst[2]] then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									elseif (Enum == 10) then
										local Edx;
										local Results;
										local B;
										local A;
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results = {Stk[A](Stk[A + 1])};
										Edx = 0;
										for Idx = A, Inst[4] do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									else
										Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
									end
								elseif (Enum <= 17) then
									if (Enum <= 14) then
										if (Enum <= 12) then
											local B;
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Upvalues[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if not Stk[Inst[2]] then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										elseif (Enum > 13) then
											local B;
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Upvalues[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if not Stk[Inst[2]] then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										else
											local B;
											local A;
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A](Stk[A + 1]);
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
										end
									elseif (Enum <= 15) then
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									elseif (Enum == 16) then
										local A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
									else
										local K;
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									end
								elseif (Enum <= 20) then
									if (Enum <= 18) then
										local Edx;
										local Results, Limit;
										local B;
										local A;
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Stk[A + 1]));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Top));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Stk[A + 1]);
									elseif (Enum == 19) then
										local A;
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									else
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									end
								elseif (Enum <= 22) then
									if (Enum == 21) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									else
										local Edx;
										local Results, Limit;
										local B;
										local A;
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Stk[A + 1]));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Top));
									end
								elseif (Enum == 23) then
									local B;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] == Inst[4]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 36) then
								if (Enum <= 30) then
									if (Enum <= 27) then
										if (Enum <= 25) then
											local Edx;
											local Results;
											local B;
											local A;
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Stk[A + 1]);
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Env[Inst[3]] = Stk[Inst[2]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Results = {Stk[A](Stk[A + 1])};
											Edx = 0;
											for Idx = A, Inst[4] do
												Edx = Edx + 1;
												Stk[Idx] = Results[Edx];
											end
											VIP = VIP + 1;
											Inst = Instr[VIP];
											VIP = Inst[3];
										elseif (Enum == 26) then
											local K;
											local B;
											local A;
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
										else
											local A = Inst[2];
											do
												return Stk[A](Unpack(Stk, A + 1, Inst[3]));
											end
										end
									elseif (Enum <= 28) then
										Stk[Inst[2]] = #Stk[Inst[3]];
									elseif (Enum > 29) then
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if (Stk[Inst[2]] == Inst[4]) then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									else
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									end
								elseif (Enum <= 33) then
									if (Enum <= 31) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									elseif (Enum > 32) then
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									elseif (Stk[Inst[2]] ~= Stk[Inst[4]]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum <= 34) then
									Stk[Inst[2]]();
								elseif (Enum > 35) then
									for Idx = Inst[2], Inst[3] do
										Stk[Idx] = nil;
									end
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 42) then
								if (Enum <= 39) then
									if (Enum <= 37) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									elseif (Enum == 38) then
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									else
										local A = Inst[2];
										local B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									end
								elseif (Enum <= 40) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum == 41) then
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Top));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Stk[Inst[2]] == Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum <= 45) then
								if (Enum <= 43) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum == 44) then
									local A = Inst[2];
									Stk[A](Stk[A + 1]);
								else
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 47) then
								if (Enum > 46) then
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
								else
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								end
							elseif (Enum > 48) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 74) then
							if (Enum <= 61) then
								if (Enum <= 55) then
									if (Enum <= 52) then
										if (Enum <= 50) then
											local K;
											local B;
											local A;
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
										elseif (Enum == 51) then
											local Edx;
											local Results;
											local A;
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Results = {Stk[A](Stk[A + 1])};
											Edx = 0;
											for Idx = A, Inst[4] do
												Edx = Edx + 1;
												Stk[Idx] = Results[Edx];
											end
											VIP = VIP + 1;
											Inst = Instr[VIP];
											VIP = Inst[3];
										else
											local B;
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A]();
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if Stk[Inst[2]] then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										end
									elseif (Enum <= 53) then
										local Edx;
										local Results, Limit;
										local B;
										local A;
										A = Inst[2];
										Stk[A] = Stk[A]();
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Stk[A + 1]));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Top));
									elseif (Enum > 54) then
										local Edx;
										local Results;
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results = {Stk[A](Stk[A + 1])};
										Edx = 0;
										for Idx = A, Inst[4] do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									else
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = #Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
									end
								elseif (Enum <= 58) then
									if (Enum <= 56) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									elseif (Enum == 57) then
										local K;
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									else
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if Stk[Inst[2]] then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									end
								elseif (Enum <= 59) then
									local B;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								elseif (Enum == 60) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 67) then
								if (Enum <= 64) then
									if (Enum <= 62) then
										local Edx;
										local Results, Limit;
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Stk[A + 1]));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Top));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									elseif (Enum == 63) then
										Stk[Inst[2]] = Env[Inst[3]];
									else
										local K;
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									end
								elseif (Enum <= 65) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A]();
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum > 66) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 70) then
								if (Enum <= 68) then
									local B;
									local A;
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3] ~= 0;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3] ~= 0;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
								elseif (Enum == 69) then
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 72) then
								if (Enum == 71) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
								else
									local B;
									local A;
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
								end
							elseif (Enum > 73) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 87) then
							if (Enum <= 80) then
								if (Enum <= 77) then
									if (Enum <= 75) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if not Stk[Inst[2]] then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									elseif (Enum == 76) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									else
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = #Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
									end
								elseif (Enum <= 78) then
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = #Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
								elseif (Enum > 79) then
									local Step;
									local Index;
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Index = Stk[A];
									Step = Stk[A + 2];
									if (Step > 0) then
										if (Index > Stk[A + 1]) then
											VIP = Inst[3];
										else
											Stk[A + 3] = Index;
										end
									elseif (Index < Stk[A + 1]) then
										VIP = Inst[3];
									else
										Stk[A + 3] = Index;
									end
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								end
							elseif (Enum <= 83) then
								if (Enum <= 81) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum > 82) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								else
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] < Inst[4]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 85) then
								if (Enum > 84) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum == 86) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Top));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
							end
						elseif (Enum <= 93) then
							if (Enum <= 90) then
								if (Enum <= 88) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum > 89) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local A = Inst[2];
									local Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									local Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
								end
							elseif (Enum <= 91) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Env[Inst[3]] = Stk[Inst[2]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] ~= Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum == 92) then
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 96) then
							if (Enum <= 94) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum > 95) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 98) then
							if (Enum > 97) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							end
						elseif (Enum > 99) then
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3] ~= 0;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						end
					elseif (Enum <= 150) then
						if (Enum <= 125) then
							if (Enum <= 112) then
								if (Enum <= 106) then
									if (Enum <= 103) then
										if (Enum <= 101) then
											local B;
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A]();
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if Stk[Inst[2]] then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										elseif (Enum > 102) then
											local K;
											local B;
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = {};
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Inst[4];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											do
												return;
											end
										else
											local B;
											local A;
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
										end
									elseif (Enum <= 104) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3] ~= 0;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3] ~= 0;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									elseif (Enum == 105) then
										local Results;
										local Edx;
										local Results, Limit;
										local A;
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Top)));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results = {Stk[A](Unpack(Stk, A + 1, Top))};
										Edx = 0;
										for Idx = A, Inst[4] do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									else
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = #Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									end
								elseif (Enum <= 109) then
									if (Enum <= 107) then
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = #Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
									elseif (Enum > 108) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									else
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									end
								elseif (Enum <= 110) then
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum > 111) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local B;
									local A;
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								end
							elseif (Enum <= 118) then
								if (Enum <= 115) then
									if (Enum <= 113) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A]();
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if Stk[Inst[2]] then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									elseif (Enum == 114) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A]();
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if Stk[Inst[2]] then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									else
										local A = Inst[2];
										local Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
										Top = (Limit + A) - 1;
										local Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
									end
								elseif (Enum <= 116) then
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum == 117) then
									local A;
									local K;
									local B;
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								else
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] < Inst[4]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 121) then
								if (Enum <= 119) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum == 120) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local A = Inst[2];
									do
										return Unpack(Stk, A, Top);
									end
								end
							elseif (Enum <= 123) then
								if (Enum > 122) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Env[Inst[3]] = Stk[Inst[2]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] ~= Inst[4]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum > 124) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local Edx;
								local Results, Limit;
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Top));
							end
						elseif (Enum <= 137) then
							if (Enum <= 131) then
								if (Enum <= 128) then
									if (Enum <= 126) then
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if (Stk[Inst[2]] == Inst[4]) then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									elseif (Enum == 127) then
										local B = Inst[3];
										local K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
									else
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
									end
								elseif (Enum <= 129) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum > 130) then
									Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
								else
									local A = Inst[2];
									do
										return Unpack(Stk, A, A + Inst[3]);
									end
								end
							elseif (Enum <= 134) then
								if (Enum <= 132) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
								elseif (Enum == 133) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local Edx;
									local Results;
									local K;
									local B;
									local A;
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Env[Inst[3]] = Stk[Inst[2]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Env[Inst[3]] = Stk[Inst[2]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Stk[A + 1])};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								end
							elseif (Enum <= 135) then
								local Results;
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Unpack(Stk, A + 1, Top))};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							elseif (Enum == 136) then
								local K;
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								Upvalues[Inst[3]] = Stk[Inst[2]];
							end
						elseif (Enum <= 143) then
							if (Enum <= 140) then
								if (Enum <= 138) then
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Top));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum > 139) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								end
							elseif (Enum <= 141) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							elseif (Enum > 142) then
								local Edx;
								local Results;
								local A;
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Stk[A + 1])};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							else
								local Step;
								local Index;
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Index = Stk[A];
								Step = Stk[A + 2];
								if (Step > 0) then
									if (Index > Stk[A + 1]) then
										VIP = Inst[3];
									else
										Stk[A + 3] = Index;
									end
								elseif (Index < Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							end
						elseif (Enum <= 146) then
							if (Enum <= 144) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							elseif (Enum == 145) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 148) then
							if (Enum > 147) then
								local B;
								local A;
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum > 149) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						end
					elseif (Enum <= 175) then
						if (Enum <= 162) then
							if (Enum <= 156) then
								if (Enum <= 153) then
									if (Enum <= 151) then
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									elseif (Enum == 152) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									else
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									end
								elseif (Enum <= 154) then
									local B;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
								elseif (Enum > 155) then
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = #Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 159) then
								if (Enum <= 157) then
									local Results;
									local Edx;
									local Results, Limit;
									local A;
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Top)));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Unpack(Stk, A + 1, Top))};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								elseif (Enum == 158) then
									local Results;
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Unpack(Stk, A + 1, Top))};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								else
									local Results;
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Unpack(Stk, A + 1, Top))};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								end
							elseif (Enum <= 160) then
								VIP = Inst[3];
							elseif (Enum > 161) then
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] < Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							end
						elseif (Enum <= 168) then
							if (Enum <= 165) then
								if (Enum <= 163) then
									local Edx;
									local Results;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Stk[A + 1])};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								elseif (Enum == 164) then
									local K;
									local B;
									local A;
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
								else
									local A = Inst[2];
									local Results = {Stk[A](Unpack(Stk, A + 1, Top))};
									local Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
								end
							elseif (Enum <= 166) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum > 167) then
								local A = Inst[2];
								local Cls = {};
								for Idx = 1, #Lupvals do
									local List = Lupvals[Idx];
									for Idz = 0, #List do
										local Upv = List[Idz];
										local NStk = Upv[1];
										local DIP = Upv[2];
										if ((NStk == Stk) and (DIP >= A)) then
											Cls[DIP] = NStk[DIP];
											Upv[1] = Cls;
										end
									end
								end
							else
								local Edx;
								local Results;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Env[Inst[3]] = Stk[Inst[2]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Stk[A + 1])};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							end
						elseif (Enum <= 171) then
							if (Enum <= 169) then
								local Results;
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Unpack(Stk, A + 1, Top))};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
							elseif (Enum > 170) then
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 173) then
							if (Enum > 172) then
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] == Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum == 174) then
							local B;
							local A;
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = #Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] == Stk[Inst[4]]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						else
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						end
					elseif (Enum <= 188) then
						if (Enum <= 181) then
							if (Enum <= 178) then
								if (Enum <= 176) then
									local B;
									local A;
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = #Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] == Stk[Inst[4]]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum > 177) then
									local B;
									local A;
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									do
										return Stk[A](Unpack(Stk, A + 1, Inst[3]));
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									do
										return Unpack(Stk, A, Top);
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 179) then
								do
									return;
								end
							elseif (Enum == 180) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 184) then
							if (Enum <= 182) then
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] == Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum > 183) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								Stk[Inst[2]] = Inst[3] ~= 0;
							end
						elseif (Enum <= 186) then
							if (Enum > 185) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] < Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum > 187) then
							local A;
							local K;
							local B;
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
						else
							local Edx;
							local Results;
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results = {Stk[A](Stk[A + 1])};
							Edx = 0;
							for Idx = A, Inst[4] do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							VIP = Inst[3];
						end
					elseif (Enum <= 194) then
						if (Enum <= 191) then
							if (Enum <= 189) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum > 190) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Stk[Inst[2]] == Stk[Inst[4]]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						elseif (Enum <= 192) then
							local Results;
							local Edx;
							local Results, Limit;
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results, Limit = _R(Stk[A](Stk[A + 1]));
							Top = (Limit + A) - 1;
							Edx = 0;
							for Idx = A, Top do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results = {Stk[A](Unpack(Stk, A + 1, Top))};
							Edx = 0;
							for Idx = A, Inst[4] do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							VIP = Inst[3];
						elseif (Enum > 193) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						else
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] == Inst[4]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum <= 197) then
						if (Enum <= 195) then
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						elseif (Enum == 196) then
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if not Stk[Inst[2]] then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						else
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						end
					elseif (Enum <= 199) then
						if (Enum == 198) then
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
						else
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						end
					elseif (Enum > 200) then
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Upvalues[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						if not Stk[Inst[2]] then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					else
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
					end
				elseif (Enum <= 302) then
					if (Enum <= 251) then
						if (Enum <= 226) then
							if (Enum <= 213) then
								if (Enum <= 207) then
									if (Enum <= 204) then
										if (Enum <= 202) then
											local K;
											local B;
											local A;
											A = Inst[2];
											Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Env[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											B = Stk[Inst[3]];
											Stk[A + 1] = B;
											Stk[A] = B[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
										elseif (Enum == 203) then
											local K;
											local B;
											local A;
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Upvalues[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											A = Inst[2];
											Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Upvalues[Inst[3]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Inst[3];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											B = Inst[3];
											K = Stk[B];
											for Idx = B + 1, Inst[4] do
												K = K .. Stk[Idx];
											end
											Stk[Inst[2]] = K;
											VIP = VIP + 1;
											Inst = Instr[VIP];
											if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
												VIP = VIP + 1;
											else
												VIP = Inst[3];
											end
										else
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
											VIP = VIP + 1;
											Inst = Instr[VIP];
											do
												return;
											end
										end
									elseif (Enum <= 205) then
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									elseif (Enum == 206) then
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]] - Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if (Stk[Inst[2]] < Inst[4]) then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									else
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Env[Inst[3]] = Stk[Inst[2]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										if (Stk[Inst[2]] ~= Inst[4]) then
											VIP = VIP + 1;
										else
											VIP = Inst[3];
										end
									end
								elseif (Enum <= 210) then
									if (Enum <= 208) then
										local B;
										local A;
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									elseif (Enum > 209) then
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
									else
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									end
								elseif (Enum <= 211) then
									local B;
									local A;
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								elseif (Enum > 212) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 219) then
								if (Enum <= 216) then
									if (Enum <= 214) then
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
									elseif (Enum > 215) then
										local Step;
										local Index;
										local B;
										local A;
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Index = Stk[A];
										Step = Stk[A + 2];
										if (Step > 0) then
											if (Index > Stk[A + 1]) then
												VIP = Inst[3];
											else
												Stk[A + 3] = Index;
											end
										elseif (Index < Stk[A + 1]) then
											VIP = Inst[3];
										else
											Stk[A + 3] = Index;
										end
									else
										local B;
										local A;
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Upvalues[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										do
											return Stk[A](Unpack(Stk, A + 1, Inst[3]));
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										do
											return Unpack(Stk, A, Top);
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									end
								elseif (Enum <= 217) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
								elseif (Enum > 218) then
									local Edx;
									local Results;
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Env[Inst[3]] = Stk[Inst[2]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Stk[A + 1])};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 222) then
								if (Enum <= 220) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum == 221) then
									local B;
									local A;
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
								else
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								end
							elseif (Enum <= 224) then
								if (Enum == 223) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									Stk[Inst[2]] = Stk[Inst[3]] + Inst[4];
								end
							elseif (Enum == 225) then
								local A = Inst[2];
								local Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Top)));
								Top = (Limit + A) - 1;
								local Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
							else
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
							end
						elseif (Enum <= 238) then
							if (Enum <= 232) then
								if (Enum <= 229) then
									if (Enum <= 227) then
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									elseif (Enum > 228) then
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Stk[A + 1]);
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
									else
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									end
								elseif (Enum <= 230) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum > 231) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								else
									local Results;
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Unpack(Stk, A + 1, Top))};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								end
							elseif (Enum <= 235) then
								if (Enum <= 233) then
									local A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Top));
								elseif (Enum > 234) then
									local K;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local NewProto = Proto[Inst[3]];
									local NewUvals;
									local Indexes = {};
									NewUvals = Setmetatable({}, {__index=function(_, Key)
										local Val = Indexes[Key];
										return Val[1][Val[2]];
									end,__newindex=function(_, Key, Value)
										local Val = Indexes[Key];
										Val[1][Val[2]] = Value;
									end});
									for Idx = 1, Inst[4] do
										VIP = VIP + 1;
										local Mvm = Instr[VIP];
										if (Mvm[1] == 268) then
											Indexes[Idx - 1] = {Stk,Mvm[3]};
										else
											Indexes[Idx - 1] = {Upvalues,Mvm[3]};
										end
										Lupvals[#Lupvals + 1] = Indexes;
									end
									Stk[Inst[2]] = Wrap(NewProto, NewUvals, Env);
								end
							elseif (Enum <= 236) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum > 237) then
								local B;
								local A;
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							end
						elseif (Enum <= 244) then
							if (Enum <= 241) then
								if (Enum <= 239) then
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Top));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum == 240) then
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								else
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								end
							elseif (Enum <= 242) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum == 243) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							else
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
							end
						elseif (Enum <= 247) then
							if (Enum <= 245) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							elseif (Enum > 246) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 249) then
							if (Enum == 248) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum > 250) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						end
					elseif (Enum <= 276) then
						if (Enum <= 263) then
							if (Enum <= 257) then
								if (Enum <= 254) then
									if (Enum <= 252) then
										local A = Inst[2];
										local Results = {Stk[A](Stk[A + 1])};
										local Edx = 0;
										for Idx = A, Inst[4] do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
									elseif (Enum > 253) then
										local Results;
										local Edx;
										local Results, Limit;
										local B;
										local A;
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results, Limit = _R(Stk[A](Stk[A + 1]));
										Top = (Limit + A) - 1;
										Edx = 0;
										for Idx = A, Top do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Results = {Stk[A](Unpack(Stk, A + 1, Top))};
										Edx = 0;
										for Idx = A, Inst[4] do
											Edx = Edx + 1;
											Stk[Idx] = Results[Edx];
										end
										VIP = VIP + 1;
										Inst = Instr[VIP];
										VIP = Inst[3];
									else
										local K;
										local B;
										local A;
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
									end
								elseif (Enum <= 255) then
									do
										return Stk[Inst[2]];
									end
								elseif (Enum > 256) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]]();
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								else
									local B;
									local A;
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								end
							elseif (Enum <= 260) then
								if (Enum <= 258) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum > 259) then
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 261) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							elseif (Enum > 262) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local B;
								local A;
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							end
						elseif (Enum <= 269) then
							if (Enum <= 266) then
								if (Enum <= 264) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								elseif (Enum > 265) then
									local K;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 267) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum == 268) then
								Stk[Inst[2]] = Stk[Inst[3]];
							else
								local A = Inst[2];
								Stk[A] = Stk[A]();
							end
						elseif (Enum <= 272) then
							if (Enum <= 270) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
							elseif (Enum == 271) then
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
							elseif (Stk[Inst[2]] ~= Inst[4]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						elseif (Enum <= 274) then
							if (Enum == 273) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum == 275) then
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
						else
							local A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
						end
					elseif (Enum <= 289) then
						if (Enum <= 282) then
							if (Enum <= 279) then
								if (Enum <= 277) then
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum > 278) then
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 280) then
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum == 281) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 285) then
							if (Enum <= 283) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum == 284) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 287) then
							if (Enum > 286) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local Results;
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Unpack(Stk, A + 1, Top))};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							end
						elseif (Enum > 288) then
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						else
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						end
					elseif (Enum <= 295) then
						if (Enum <= 292) then
							if (Enum <= 290) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum == 291) then
								Stk[Inst[2]] = Wrap(Proto[Inst[3]], nil, Env);
							else
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 293) then
							Stk[Inst[2]][Inst[3]] = Inst[4];
						elseif (Enum == 294) then
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A]();
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if Stk[Inst[2]] then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						else
							local K;
							local B;
							local A;
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
						end
					elseif (Enum <= 298) then
						if (Enum <= 296) then
							Stk[Inst[2]] = {};
						elseif (Enum > 297) then
							local A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
						end
					elseif (Enum <= 300) then
						if (Enum == 299) then
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						end
					elseif (Enum == 301) then
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						if (Stk[Inst[2]] == Inst[4]) then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					else
						local B;
						local A;
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						do
							return;
						end
					end
				elseif (Enum <= 353) then
					if (Enum <= 327) then
						if (Enum <= 314) then
							if (Enum <= 308) then
								if (Enum <= 305) then
									if (Enum <= 303) then
										Env[Inst[3]] = Stk[Inst[2]];
									elseif (Enum > 304) then
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									else
										local K;
										local B;
										local A;
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = {};
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Inst[4];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										B = Inst[3];
										K = Stk[B];
										for Idx = B + 1, Inst[4] do
											K = K .. Stk[Idx];
										end
										Stk[Inst[2]] = K;
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Env[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Inst[3];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										B = Stk[Inst[3]];
										Stk[A + 1] = B;
										Stk[A] = B[Inst[4]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										Stk[Inst[2]] = Stk[Inst[3]];
										VIP = VIP + 1;
										Inst = Instr[VIP];
										A = Inst[2];
										Stk[A](Unpack(Stk, A + 1, Inst[3]));
										VIP = VIP + 1;
										Inst = Instr[VIP];
										do
											return;
										end
									end
								elseif (Enum <= 306) then
									local A = Inst[2];
									local T = Stk[A];
									for Idx = A + 1, Inst[3] do
										Insert(T, Stk[Idx]);
									end
								elseif (Enum > 307) then
									local Edx;
									local Results;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Stk[A + 1])};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								else
									local K;
									local B;
									local A;
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									B = Inst[3];
									K = Stk[B];
									for Idx = B + 1, Inst[4] do
										K = K .. Stk[Idx];
									end
									Stk[Inst[2]] = K;
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
								end
							elseif (Enum <= 311) then
								if (Enum <= 309) then
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								elseif (Enum > 310) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								else
									local A = Inst[2];
									local Step = Stk[A + 2];
									local Index = Stk[A] + Step;
									Stk[A] = Index;
									if (Step > 0) then
										if (Index <= Stk[A + 1]) then
											VIP = Inst[3];
											Stk[A + 3] = Index;
										end
									elseif (Index >= Stk[A + 1]) then
										VIP = Inst[3];
										Stk[A + 3] = Index;
									end
								end
							elseif (Enum <= 312) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum > 313) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
							end
						elseif (Enum <= 320) then
							if (Enum <= 317) then
								if (Enum <= 315) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								elseif (Enum > 316) then
									local B;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
								else
									local Edx;
									local Results, Limit;
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Inst[4];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results, Limit = _R(Stk[A](Stk[A + 1]));
									Top = (Limit + A) - 1;
									Edx = 0;
									for Idx = A, Top do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Top));
								end
							elseif (Enum <= 318) then
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if (Stk[Inst[2]] == Inst[4]) then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							elseif (Enum == 319) then
								local Edx;
								local Results;
								local A;
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Stk[A + 1])};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							else
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum <= 323) then
							if (Enum <= 321) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum > 322) then
								local B;
								local A;
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								do
									return Stk[A](Unpack(Stk, A + 1, Inst[3]));
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								do
									return Unpack(Stk, A, Top);
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							else
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Top));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							end
						elseif (Enum <= 325) then
							if (Enum == 324) then
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							else
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							end
						elseif (Enum == 326) then
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							VIP = Inst[3];
						elseif (Stk[Inst[2]] < Inst[4]) then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					elseif (Enum <= 340) then
						if (Enum <= 333) then
							if (Enum <= 330) then
								if (Enum <= 328) then
									Stk[Inst[2]][Stk[Inst[3]]] = Stk[Inst[4]];
								elseif (Enum > 329) then
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if (Stk[Inst[2]] == Inst[4]) then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								else
									local Edx;
									local Results;
									local A;
									Stk[Inst[2]] = {};
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Results = {Stk[A](Stk[A + 1])};
									Edx = 0;
									for Idx = A, Inst[4] do
										Edx = Edx + 1;
										Stk[Idx] = Results[Edx];
									end
									VIP = VIP + 1;
									Inst = Instr[VIP];
									VIP = Inst[3];
								end
							elseif (Enum <= 331) then
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								do
									return;
								end
							elseif (Enum > 332) then
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 336) then
							if (Enum <= 334) then
								local Results;
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Stk[A + 1]));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results = {Stk[A](Unpack(Stk, A + 1, Top))};
								Edx = 0;
								for Idx = A, Inst[4] do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							elseif (Enum > 335) then
								local Edx;
								local Results, Limit;
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
								Top = (Limit + A) - 1;
								Edx = 0;
								for Idx = A, Top do
									Edx = Edx + 1;
									Stk[Idx] = Results[Edx];
								end
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Top));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
							else
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							end
						elseif (Enum <= 338) then
							if (Enum == 337) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								local A = Inst[2];
								local T = Stk[A];
								local B = Inst[3];
								for Idx = 1, B do
									T[Idx] = Stk[A + Idx];
								end
							end
						elseif (Enum > 339) then
							Stk[Inst[2]] = Inst[3];
						else
							local Step;
							local Index;
							local A;
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Index = Stk[A];
							Step = Stk[A + 2];
							if (Step > 0) then
								if (Index > Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							elseif (Index < Stk[A + 1]) then
								VIP = Inst[3];
							else
								Stk[A + 3] = Index;
							end
						end
					elseif (Enum <= 346) then
						if (Enum <= 343) then
							if (Enum <= 341) then
								Stk[Inst[2]][Stk[Inst[3]]] = Inst[4];
							elseif (Enum > 342) then
								local K;
								local B;
								local A;
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								B = Inst[3];
								K = Stk[B];
								for Idx = B + 1, Inst[4] do
									K = K .. Stk[Idx];
								end
								Stk[Inst[2]] = K;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A]();
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]] * Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 344) then
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						elseif (Enum > 345) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if not Stk[Inst[2]] then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum <= 349) then
						if (Enum <= 347) then
							local B;
							local A;
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							do
								return Stk[A](Unpack(Stk, A + 1, Inst[3]));
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							do
								return Unpack(Stk, A, Top);
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						elseif (Enum > 348) then
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Env[Inst[3]] = Stk[Inst[2]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] ~= Inst[4]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						else
							local A = Inst[2];
							local Index = Stk[A];
							local Step = Stk[A + 2];
							if (Step > 0) then
								if (Index > Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							elseif (Index < Stk[A + 1]) then
								VIP = Inst[3];
							else
								Stk[A + 3] = Index;
							end
						end
					elseif (Enum <= 351) then
						if (Enum > 350) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local Edx;
							local Results, Limit;
							local B;
							local A;
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results, Limit = _R(Stk[A](Stk[A + 1]));
							Top = (Limit + A) - 1;
							Edx = 0;
							for Idx = A, Top do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Top));
						end
					elseif (Enum > 352) then
						local B;
						local A;
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						if Stk[Inst[2]] then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					else
						local A;
						local K;
						local B;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						B = Inst[3];
						K = Stk[B];
						for Idx = B + 1, Inst[4] do
							K = K .. Stk[Idx];
						end
						Stk[Inst[2]] = K;
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						do
							return;
						end
					end
				elseif (Enum <= 378) then
					if (Enum <= 365) then
						if (Enum <= 359) then
							if (Enum <= 356) then
								if (Enum <= 354) then
									local B;
									local A;
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								elseif (Enum == 355) then
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Inst[3];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A](Stk[A + 1]);
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									do
										return;
									end
								else
									local B;
									local A;
									Stk[Inst[2]] = Env[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									B = Stk[Inst[3]];
									Stk[A + 1] = B;
									Stk[A] = B[Inst[4]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									Stk[Inst[2]] = Upvalues[Inst[3]];
									VIP = VIP + 1;
									Inst = Instr[VIP];
									A = Inst[2];
									Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
									VIP = VIP + 1;
									Inst = Instr[VIP];
									if not Stk[Inst[2]] then
										VIP = VIP + 1;
									else
										VIP = Inst[3];
									end
								end
							elseif (Enum <= 357) then
								local B;
								local A;
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								VIP = Inst[3];
							elseif (Enum > 358) then
								local A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Top));
							else
								local A = Inst[2];
								local C = Inst[4];
								local CB = A + 2;
								local Result = {Stk[A](Stk[A + 1], Stk[CB])};
								for Idx = 1, C do
									Stk[CB + Idx] = Result[Idx];
								end
								local R = Result[1];
								if R then
									Stk[CB] = R;
									VIP = Inst[3];
								else
									VIP = VIP + 1;
								end
							end
						elseif (Enum <= 362) then
							if (Enum <= 360) then
								local B;
								local A;
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3] ~= 0;
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
							elseif (Enum > 361) then
								local Step;
								local Index;
								local A;
								Stk[Inst[2]] = {};
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Inst[4];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Index = Stk[A];
								Step = Stk[A + 2];
								if (Step > 0) then
									if (Index > Stk[A + 1]) then
										VIP = Inst[3];
									else
										Stk[A + 3] = Index;
									end
								elseif (Index < Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							else
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Upvalues[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if not Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							end
						elseif (Enum <= 363) then
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						elseif (Enum == 364) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local Edx;
							local Results, Limit;
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3] ~= 0;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results, Limit = _R(Stk[A](Unpack(Stk, A + 1, Inst[3])));
							Top = (Limit + A) - 1;
							Edx = 0;
							for Idx = A, Top do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Top));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]]();
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
						end
					elseif (Enum <= 371) then
						if (Enum <= 368) then
							if (Enum <= 366) then
								local B;
								local A;
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
							elseif (Enum == 367) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
							else
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A](Unpack(Stk, A + 1, Inst[3]));
							end
						elseif (Enum <= 369) then
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
						elseif (Enum > 370) then
							local Edx;
							local Results, Limit;
							local B;
							local A;
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Results, Limit = _R(Stk[A](Stk[A + 1]));
							Top = (Limit + A) - 1;
							Edx = 0;
							for Idx = A, Top do
								Edx = Edx + 1;
								Stk[Idx] = Results[Edx];
							end
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Top));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]]();
							VIP = VIP + 1;
							Inst = Instr[VIP];
							VIP = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if not Stk[Inst[2]] then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum <= 374) then
						if (Enum <= 372) then
							local A;
							local K;
							local B;
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
						elseif (Enum > 373) then
							local B;
							local A;
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3] ~= 0;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3] ~= 0;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
						else
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] == Inst[4]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum <= 376) then
						if (Enum == 375) then
							local Step;
							local Index;
							local A;
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Index = Stk[A];
							Step = Stk[A + 2];
							if (Step > 0) then
								if (Index > Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							elseif (Index < Stk[A + 1]) then
								VIP = Inst[3];
							else
								Stk[A + 3] = Index;
							end
						else
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if not Stk[Inst[2]] then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum > 377) then
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
					else
						local K;
						local B;
						local A;
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						B = Inst[3];
						K = Stk[B];
						for Idx = B + 1, Inst[4] do
							K = K .. Stk[Idx];
						end
						Stk[Inst[2]] = K;
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
					end
				elseif (Enum <= 391) then
					if (Enum <= 384) then
						if (Enum <= 381) then
							if (Enum <= 379) then
								local B;
								local A;
								Env[Inst[3]] = Stk[Inst[2]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Env[Inst[3]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Inst[3];
							elseif (Enum > 380) then
								local B;
								local A;
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								B = Stk[Inst[3]];
								Stk[A + 1] = B;
								Stk[A] = B[Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								A = Inst[2];
								Stk[A] = Stk[A](Stk[A + 1]);
								VIP = VIP + 1;
								Inst = Instr[VIP];
								Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
								VIP = VIP + 1;
								Inst = Instr[VIP];
								if Stk[Inst[2]] then
									VIP = VIP + 1;
								else
									VIP = Inst[3];
								end
							else
								Stk[Inst[2]] = Upvalues[Inst[3]];
							end
						elseif (Enum <= 382) then
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						elseif (Enum > 383) then
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
						else
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
						end
					elseif (Enum <= 387) then
						if (Enum <= 385) then
							local K;
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						elseif (Enum > 386) then
							local B;
							local A;
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
						else
							local B;
							local A;
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
						end
					elseif (Enum <= 389) then
						if (Enum > 388) then
							local B;
							local A;
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Stk[A + 1]);
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						else
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Env[Inst[3]] = Stk[Inst[2]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] ~= Inst[4]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum > 390) then
						local Results;
						local Edx;
						local Results, Limit;
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results, Limit = _R(Stk[A](Stk[A + 1]));
						Top = (Limit + A) - 1;
						Edx = 0;
						for Idx = A, Top do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results = {Stk[A](Unpack(Stk, A + 1, Top))};
						Edx = 0;
						for Idx = A, Inst[4] do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						VIP = Inst[3];
					else
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						do
							return;
						end
					end
				elseif (Enum <= 397) then
					if (Enum <= 394) then
						if (Enum <= 392) then
							local Step;
							local Index;
							local B;
							local A;
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Index = Stk[A];
							Step = Stk[A + 2];
							if (Step > 0) then
								if (Index > Stk[A + 1]) then
									VIP = Inst[3];
								else
									Stk[A + 3] = Index;
								end
							elseif (Index < Stk[A + 1]) then
								VIP = Inst[3];
							else
								Stk[A + 3] = Index;
							end
						elseif (Enum > 393) then
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Inst[4];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = {};
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Env[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							B = Stk[Inst[3]];
							Stk[A + 1] = B;
							Stk[A] = B[Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							do
								return;
							end
						else
							local K;
							local B;
							local A;
							Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Stk[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							A = Inst[2];
							Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Upvalues[Inst[3]];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							Stk[Inst[2]] = Inst[3];
							VIP = VIP + 1;
							Inst = Instr[VIP];
							B = Inst[3];
							K = Stk[B];
							for Idx = B + 1, Inst[4] do
								K = K .. Stk[Idx];
							end
							Stk[Inst[2]] = K;
							VIP = VIP + 1;
							Inst = Instr[VIP];
							if (Stk[Inst[2]] ~= Stk[Inst[4]]) then
								VIP = VIP + 1;
							else
								VIP = Inst[3];
							end
						end
					elseif (Enum <= 395) then
						local B;
						local A;
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					elseif (Enum > 396) then
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Upvalues[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						if not Stk[Inst[2]] then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					else
						local B;
						local A;
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						VIP = Inst[3];
					end
				elseif (Enum <= 400) then
					if (Enum <= 398) then
						local K;
						local B;
						local A;
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						B = Inst[3];
						K = Stk[B];
						for Idx = B + 1, Inst[4] do
							K = K .. Stk[Idx];
						end
						Stk[Inst[2]] = K;
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
					elseif (Enum == 399) then
						local Results;
						local Edx;
						local Results, Limit;
						local B;
						local A;
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results, Limit = _R(Stk[A](Stk[A + 1]));
						Top = (Limit + A) - 1;
						Edx = 0;
						for Idx = A, Top do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results = {Stk[A](Unpack(Stk, A + 1, Top))};
						Edx = 0;
						for Idx = A, Inst[4] do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						VIP = Inst[3];
					else
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Upvalues[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						if not Stk[Inst[2]] then
							VIP = VIP + 1;
						else
							VIP = Inst[3];
						end
					end
				elseif (Enum <= 402) then
					if (Enum > 401) then
						local Edx;
						local Results, Limit;
						local B;
						local A;
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Stk[Inst[4]]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results, Limit = _R(Stk[A](Stk[A + 1]));
						Top = (Limit + A) - 1;
						Edx = 0;
						for Idx = A, Top do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Top));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
					else
						local Edx;
						local Results, Limit;
						local B;
						local A;
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = {};
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Inst[4];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Results, Limit = _R(Stk[A](Stk[A + 1]));
						Top = (Limit + A) - 1;
						Edx = 0;
						for Idx = A, Top do
							Edx = Edx + 1;
							Stk[Idx] = Results[Edx];
						end
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Top));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Env[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Stk[Inst[3]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Stk[A + 1]);
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						B = Stk[Inst[3]];
						Stk[A + 1] = B;
						Stk[A] = B[Inst[4]];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						Stk[Inst[2]] = Inst[3];
						VIP = VIP + 1;
						Inst = Instr[VIP];
						A = Inst[2];
						Stk[A](Unpack(Stk, A + 1, Inst[3]));
					end
				elseif (Enum > 403) then
					local K;
					local B;
					local A;
					Env[Inst[3]] = Stk[Inst[2]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Inst[3];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					Stk[A] = Stk[A](Stk[A + 1]);
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Inst[3];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					B = Inst[3];
					K = Stk[B];
					for Idx = B + 1, Inst[4] do
						K = K .. Stk[Idx];
					end
					Stk[Inst[2]] = K;
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
				else
					local B;
					local A;
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					B = Stk[Inst[3]];
					Stk[A + 1] = B;
					Stk[A] = B[Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Inst[3];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = {};
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]][Inst[3]] = Stk[Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Env[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					B = Stk[Inst[3]];
					Stk[A + 1] = B;
					Stk[A] = B[Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Inst[3];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					Stk[A] = Stk[A](Unpack(Stk, A + 1, Inst[3]));
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]][Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					B = Stk[Inst[3]];
					Stk[A + 1] = B;
					Stk[A] = B[Inst[4]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					Stk[Inst[2]] = Stk[Inst[3]];
					VIP = VIP + 1;
					Inst = Instr[VIP];
					A = Inst[2];
					Stk[A](Unpack(Stk, A + 1, Inst[3]));
					VIP = VIP + 1;
					Inst = Instr[VIP];
					do
						return;
					end
				end
				VIP = VIP + 1;
			end
		end;
	end
	return Wrap(Deserialize(), {}, vmenv)(...);
end
return VMCall("LOL!D63O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403443O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F4564676549592F696E66696E6974657969656C642F6D61737465722F736F7572636503483O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F7848657074632F4B61766F2D55492D4C6962726172792F6D61696E2F736F757263652E6C756103093O004372656174654C6962030A3O004B65792073797374656D03093O004461726B5468656D6503063O004E657754616203043O004D61696E030A3O004E657753656374696F6E030A3O004E657754657874426F7803093O00456E746572206B6579032F3O00456E74657220746865206B6579206865726520746F206761696E20612O63652O7320746F207468652073637269707403093O004E657742752O746F6E03093O00436865636B206B6579034O00031E3O00582D5761726520446973636F7264284B657920696E20646973636F72642903163O0047657420746865206B657920696E20446973636F726403083O006C6F61644D61696E03013O005603093O004E6577546F2O676C6503133O0056616D7069726520492O6D6F7274616C69747903083O004B692O6C20412O6C030E3O005370616D2050756E636820412O6C030C3O0048656172742052697028522903123O00446F6E74204275726E2856616D7069726529030D3O00537570657220462O6564284329030D3O005375706572204865616C284529030C3O00576F6C66204269746528552903103O00462O6564204F6E20596F757273656C6603083O00536E617020412O6C030D3O00576F6C66204269746520412O6C030F3O0052656D6F766520576F6C662D56656E03163O004175746F2072656D6F766520636F6D70756C73696F6E03013O0078030A3O00436F6D70756C73696F6E03233O00546F20436F6D70652O6C204F726967696E616C73207573652061204F726967696E616C030B3O00477261766974792047756E03083O004E65774C6162656C03043O00574F4C4603153O00436F6E74726F6C205475726E284C20616E64204B2903073O00536E617028562903013O005703113O004C2O6F7044656C6574654368612O6E656C03193O005370616D204368612O6E656C2057686F6C652053657276657203083O005075736820412O6C030B3O004C2O6F704368612O6E656C03013O006D03073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503073O004B6579446F776E03073O00436F2O6E65637403013O007103013O007903013O0070030B3O00492O6D6F7274616C697479030E3O00532O65204F74686572205369646503113O005665727661696E20426F6479204C2O6F7003113O0053752O6D6F6E2045787072652O73696F6E03123O004B692O6C2052616E646F6D20506C61796572030F3O004B692O6C2041726F756E6420596F75030B3O004578706C6F646520412O6C030A3O0044656C66616E20412O6C03093O00536C2O657020412O6C030B3O004368612O6E656C20412O6C03113O0044697361626C6520412O6C2052696E677303063O005350452O4C5303173O00436F70792052652O737572616374696F6E205370652O6C03123O00436F7079204C6F6361746F72205370652O6C03143O00436F7079204578706C6F73696F6E205370652O6C031B3O00436F70792056616D702052696E6720456E61626C65205370652O6C031C3O00436F70792056616D702052696E672044697361626C65205370652O6C031C3O00436F707920576F726C662052696E67204D616B696E67205370652O6C03013O004D030A3O00437573746F6D4E616D65030F3O00437573746F6D20436F2O6D616E6473030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E7473030E3O0046696E6446697273744368696C6403063O004D6F6442616E03093O0042616E436C69656E742O033O0042616E030C3O0069646F6E746578706C6F697403093O006C6F67416374696F6E03023O005F4703073O00414E544942414E2O0103073O0044657374726F7903043O0077616974030F3O0072756E206C696B6520612076616D702O033O00617465030F3O0052756E206C696B65206120776F6C66030A3O0072756E20617761792078030C3O0052756E206E6F726D612O6C79030B3O004368616E6765204E616D6503093O005374616B6520412O6C030A3O0052656C6F616420477569030D3O0048696465204E616D6520546167031E3O00462O65642C20536970686F6E20616E64204865616C20596F757253656C6603083O00556E676C6974636803073O005265737061776E030E3O004D6F7274616C205265737061776E03103O004265636F6D6520496E76697369626C65030B3O00496E66205374616D696E61030E3O00436F7079204A6F696E20436F646503173O004175746F205069636B205570205374616B657320657463030B3O00476574205665727661696E03123O00537962696C2053657276657220437261736803013O004F03093O00436865636B20516574030A3O00486F706520436865636B030D3O004E696B6C61757320436865636B030D3O00526562656B616820436865636B03093O004B6F6C20436865636B030A3O0046692O6E20436865636B030C3O00456C696A616820436865636B030D3O0056616C6572696520436865636B030A3O004D61727920436865636B030A3O004E6F726120436865636B03023O00437503213O00506861736D61746F73204D616C6F732049676E697320496E63656E6469736D6F73030B3O0044697361626C6552696E6703153O00506861736D61746F73204963747573206C6163757303043O005075736803113O00496E63656E6469616D6F73206D6F74757303193O0047656D696E6F2044656C66616E20656F74656E20636F726973031B3O00506861736D61746F73204D6F74757320496E63656E6469616D6F7303183O00506861736D61746F7320457870756C736F204D6178696D6103183O00506861736D61746F73204465766F72616D204D6178696D6103133O00417363656E646F2873617920746F207573652903173O00417363656E646F203228636C69636B20746F2075736529030C3O0049676E69732055626971756503113O00506861736D61746F732055706C61636F7803063O00536F6D6E757303013O005403063O00436F736D6963031A3O0054656C65706F727420546F204173747261696C697320522O6F6D03173O0054656C65706F727420546F204C617665617520522O6F6D030C3O0054686520576F6C662044656E030C3O0057697463682054752O6E656C030B3O0048756D616E20537061776E03073O005468652042617203063O0043687572636803063O005374616B6573030C3O0052657320436972636C652032030C3O0052657320436972636C65203103053O00537962696C03013O005003053O004865616C2003053O004275726E2003053O005075736820030A3O00204465616420426F647903103O005768697465204F616B205374616B652003063O00547020746F2003063O00536C2O65702003073O0044656C66616E2003113O004E696B6C617573204D696B61656C736F6E03083O002053656374696F6E030E3O00486F7065204D696B61656C736F6E030E3O00426F2O6E69652042652O6E652O7403043O0042656175030E3O0046692O6E204D696B61656C736F6E03053O004F73636172030E3O004D61736F6E204C6F636B772O6F64030D3O004B6F6C204D696B61656C736F6E03113O00526562656B6168204D696B61656C736F6E03103O00456C696A6168204D696B61656C736F6E030E3O004E6F72612048696C646567617264030D3O0056616C657269652054752O6C65030B3O004D617279204C6F7569736503083O005165747369796168030F3O004672657961204D696B61656C736F6E03013O0043030E3O004E6F6168277320446973636F7264030C3O00446973636F7264204C696E6B03023O00574203083O004B657962696E6473031F3O0049662074727565207468656E204B657962696E64732077692O6C20776F726B030A3O004E65774B657962696E6403093O00556E726167646F2O6C03043O00456E756D03073O004B6579436F646503013O005A03013O005203083O00496E63656E64696103043O005061696E03013O004703053O004F2O736F7803013O0055030E3O004D612O73204E65636B20536E617003073O004578706C6F646503013O005903053O004D6F74757303013O0046030B3O004669726520436972636C6503013O005103083O0052696E67204F2O6603013O004B03073O0052696E67204F6E03013O004C03093O0048656172742052697003013O0042030B3O00452O726F782046656D7573030B3O00536C2O6570205370652O6C03013O004A03123O00446176696E6120426C2O6F642043686F6B6503063O00536970686F6E03013O0058030C3O00496E7669736962696C697479030A3O00546F2O676C65204775692O033O00546162008F082O00126D012O00013O00122O000100023O00202O00010001000300122O000300046O000400016O000100049O0000026O0001000100124O00013O00122O000100023O002027000100010003001254010300054O0073000100034O00E95O00022O000D012O000100020020DE00013O0006001254010200073O001254010300084O002A2O01000300020020270002000100090012540104000A4O002A01020004000200204900030002000B00122O0005000A6O00030005000200202O00040003000C00122O0006000D3O00122O0007000E3O00022301086O001000040008000100202700040003000F001254010600103O001254010700113O000223010800014O001000040008000100202700040003000F001254010600123O001254010700133O000223010800024O00100004000800010006EA00040003000100012O000C016O00127B010400143O00122O000400153O00202O00040004001600122O000600173O00122O000700113O000223010800044O005A01040008000100122O000400153O00202O00040004001600122O000600183O00122O000700113O000223010800054O005A01040008000100122O000400153O00202O00040004001600122O000600193O00122O000700113O000223010800064O005A01040008000100122O000400153O00202O00040004000F00122O0006001A3O00122O000700113O000223010800074O005A01040008000100122O000400153O00202O00040004000F00122O0006001B3O00122O000700113O000223010800084O005A01040008000100122O000400153O00202O00040004000F00122O0006001C3O00122O000700113O000223010800094O005A01040008000100122O000400153O00202O00040004000F00122O0006001D3O00122O000700113O0002230108000A4O005A01040008000100122O000400153O00202O00040004000F00122O0006001E3O00122O000700113O0002230108000B4O005A01040008000100122O000400153O00202O00040004000F00122O0006001F3O00122O000700113O0002230108000C4O005A01040008000100122O000400153O00202O00040004000F00122O000600203O00122O000700113O0002230108000D4O005A01040008000100122O000400153O00202O00040004000F00122O000600213O00122O000700113O0002230108000E4O005A01040008000100122O000400153O00202O00040004000F00122O000600223O00122O000700113O0002230108000F4O005A01040008000100122O000400153O00202O00040004000F00122O000600233O00122O000700243O000223010800104O005A01040008000100122O000400153O00202O00040004000F00122O000600253O00122O000700263O000223010800114O005A01040008000100122O000400153O00202O00040004000F00122O000600273O00122O000700113O000223010800124O005400040008000100122O000400153O00202O00040004002800122O000600296O00040006000100122O000400153O00202O00040004000F00122O0006002A3O00122O000700113O000223010800134O005A01040008000100122O000400153O00202O00040004000F00122O0006002B3O00122O000700113O000223010800144O005A01040008000100122O0004002C3O00202O00040004001600122O0006002D3O00122O000700113O000223010800154O005A01040008000100122O0004002C3O00202O00040004001600122O0006002E3O00122O000700113O000223010800164O005A01040008000100122O0004002C3O00202O00040004001600122O0006002F3O00122O000700113O000223010800174O005A01040008000100122O0004002C3O00202O00040004000C00122O000600303O00122O000700113O000223010800184O0010000400080001001254010400313O000223010500193O0002230106001A3O001280000700023O00202O00070007003200202O00070007003300202O0007000700344O00070002000200202O00070007003500202O0007000700360006EA0009001B000100022O000C012O00044O000C012O00054O0010000700090001001254010700373O0002230108001C3O0002230109001D3O001280000A00023O00202O000A000A003200202O000A000A003300202O000A000A00344O000A0002000200202O000A000A003500202O000A000A00360006EA000C001E000100022O000C012O00074O000C012O00084O0010000A000C0001000223010A001F3O0006EA000B0020000100012O000C012O000A3O001254010C00383O000223010D00213O000223010E00223O001280000F00023O00202O000F000F003200202O000F000F003300202O000F000F00344O000F0002000200202O000F000F003500202O000F000F00360006EA00110023000100022O000C012O000C4O000C012O000D4O0010000F00110001001254010F00393O000223011000243O000223011100253O001280001200023O00202O00120012003200202O00120012003300202O0012001200344O00120002000200202O00120012003500202O0012001200360006EA00140026000100022O000C012O000F4O000C012O00104O005A01120014000100122O0012002C3O00202O00120012000F00122O0014003A3O00122O001500113O000223011600274O005A01120016000100122O0012002C3O00202O00120012000F00122O0014003B3O00122O001500113O000223011600284O005A01120016000100122O0012002C3O00202O00120012000F00122O0014003C3O00122O001500113O000223011600294O005A01120016000100122O0012002C3O00202O00120012000F00122O0014003D3O00122O001500113O0002230116002A4O005A01120016000100122O0012002C3O00202O00120012000F00122O0014003E3O00122O001500113O0002230116002B4O005A01120016000100122O0012002C3O00202O00120012000F00122O0014003F3O00122O001500113O0002230116002C4O005A01120016000100122O0012002C3O00202O00120012000F00122O0014002F3O00122O001500113O0002230116002D4O005A01120016000100122O0012002C3O00202O00120012000F00122O001400403O00122O001500113O0002230116002E4O005A01120016000100122O0012002C3O00202O00120012000F00122O001400413O00122O001500113O0002230116002F4O005A01120016000100122O0012002C3O00202O00120012000F00122O001400423O00122O001500113O000223011600304O005A01120016000100122O0012002C3O00202O00120012000F00122O001400433O00122O001500113O000223011600314O005A01120016000100122O0012002C3O00202O00120012000F00122O001400443O00122O001500113O000223011600324O005400120016000100122O0012002C3O00202O00120012002800122O001400456O00120014000100122O0012002C3O00202O00120012000F00122O001400463O00122O001500113O000223011600334O005A01120016000100122O0012002C3O00202O00120012000F00122O001400473O00122O001500113O000223011600344O005A01120016000100122O0012002C3O00202O00120012000F00122O001400483O00122O001500113O000223011600354O005A01120016000100122O0012002C3O00202O00120012000F00122O001400493O00122O001500113O000223011600364O005A01120016000100122O0012002C3O00202O00120012000F00122O0014004A3O00122O001500113O000223011600374O005A01120016000100122O0012002C3O00202O00120012000F00122O0014004B3O00122O001500113O000223011600384O005A01120016000100122O0012004C3O00202O00120012000C00122O0014004D3O00122O001500113O000223011600394O005A01120016000100122O0012004C3O00202O00120012000F00122O0014004E3O00122O001500113O0002230116003A4O001000120016000100123F001200023O00202700120012004F001254011400504O002A0112001400020020DE0012001200510020AA00120012005200122O001400536O00120014000200122O001300023O00202O00130013004F00122O001500506O00130015000200202O00130013005100202O00130013005200122O001500544O002A01130015000200123F001400023O00202700140014004F001254011600504O002A0114001600020020DE0014001400510020AA00140014005200122O001600556O00140016000200122O001500023O00202O00150015004F00122O001700506O00150017000200202O00150015005100202O00150015005200122O001700564O002A01150017000200123F001600023O00202700160016004F001254011800504O002A0116001800020020DE0016001600510020AA00160016005200122O001800576O00160018000200122O001700023O00202O00170017004F00122O001900506O00170019000200202O00170017005100202O00170017005200122O001900574O002A01170019000200123F001800583O0020DE00180018005900262A001800B32O01005A0004A03O00B32O010006180112009C2O013O0004A03O009C2O0100202700180012005B2O002C001800020001000618011300A02O013O0004A03O00A02O0100202700180013005B2O002C001800020001000618011400A42O013O0004A03O00A42O0100202700180014005B2O002C001800020001000618011500A82O013O0004A03O00A82O0100202700180015005B2O002C001800020001000618011600AC2O013O0004A03O00AC2O0100202700180016005B2O002C001800020001000618011700B02O013O0004A03O00B02O0100202700180017005B2O002C00180002000100123F0018005C4O00220018000100010004A03O00942O0100123F0018004C3O00202700180018000F001254011A005D3O001254011B005E3O000223011C003B4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A005F3O00122O001B00603O000223011C003C4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00613O00122O001B00603O000223011C003D4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00623O00122O001B00113O000223011C003E4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00633O00122O001B00113O000223011C003F4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00643O00122O001B00113O000223011C00404O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00653O00122O001B00113O000223011C00414O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00663O00122O001B00113O000223011C00424O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00673O00122O001B00113O000223011C00434O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00683O00122O001B00113O000223011C00444O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A00693O00122O001B00113O000223011C00454O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006A3O00122O001B00113O000223011C00464O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006B3O00122O001B00113O000223011C00474O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006C3O00122O001B00113O000223011C00484O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006D3O00122O001B00113O000223011C00494O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006E3O00122O001B00113O000223011C004A4O005A0118001C000100122O0018004C3O00202O00180018000F00122O001A006F3O00122O001B00113O000223011C004B4O005A0118001C000100122O001800703O00202O00180018000F00122O001A00713O00122O001B00113O000223011C004C4O005A0118001C000100122O001800703O00202O00180018000F00122O001A00723O00122O001B00113O000223011C004D4O005A0118001C000100122O001800703O00202O00180018000F00122O001A00733O00122O001B00113O000223011C004E4O005A0118001C000100122O001800703O00202O00180018000F00122O001A00743O00122O001B00113O000223011C004F4O005A0118001C000100122O001800703O00202O00180018000F00122O001A00753O00122O001B00113O000223011C00504O005A0118001C000100122O001800703O00202O00180018000F00122O001A00763O00122O001B00113O000223011C00514O005A0118001C000100122O001800703O00202O00180018000F00122O001A00773O00122O001B00113O000223011C00524O005A0118001C000100122O001800703O00202O00180018000F00122O001A00783O00122O001B00113O000223011C00534O005A0118001C000100122O001800703O00202O00180018000F00122O001A00793O00122O001B00113O000223011C00544O005A0118001C000100122O001800703O00202O00180018000F00122O001A007A3O00122O001B00113O000223011C00554O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A007C3O00122O001B007D3O000223011C00564O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A007E3O00122O001B007F3O000223011C00574O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00803O00122O001B00113O000223011C00584O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00813O00122O001B00113O000223011C00594O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00823O00122O001B00113O000223011C005A4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00833O00122O001B00113O000223011C005B4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00843O00122O001B00113O000223011C005C4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00853O00122O001B00113O000223011C005D4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00863O00122O001B00113O000223011C005E4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00873O00122O001B00113O000223011C005F4O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00883O00122O001B00113O000223011C00604O005A0118001C000100122O0018007B3O00202O00180018000F00122O001A00893O00122O001B00113O000223011C00614O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A008B3O00122O001B00113O000223011C00624O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A008C3O00122O001B00113O000223011C00634O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A008D3O00122O001B00113O000223011C00644O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A008E3O00122O001B00113O000223011C00654O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A008F3O00122O001B00113O000223011C00664O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00903O00122O001B00113O000223011C00674O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00913O00122O001B00113O000223011C00684O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00923O00122O001B00113O000223011C00694O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00933O00122O001B00113O000223011C006A4O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00943O00122O001B00113O000223011C006B4O005A0118001C000100122O0018008A3O00202O00180018000F00122O001A00953O00122O001B00113O000223011C006C4O00BF0018001C000100122O001800963O00122O001900973O00202O00190019000F00122O001B00986O001C00186O001B001B001C00122O001C00113O0006EA001D006D000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B00996O001C00186O001B001B001C00122O001C00113O0006EA001D006E000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B009A6O001C00186O001B001B001C00122O001C00113O0006EA001D006F000100012O000C012O00184O00460019001D000100122O001900973O00202O00190019000F00122O001B009A6O001C00183O00122O001D009B6O001B001B001D00122O001C00113O0006EA001D0070000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B009C6O001C00186O001B001B001C00122O001C00113O0006EA001D0071000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B009D6O001C00186O001B001B001C00122O001C00113O0006EA001D0072000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B009E6O001C00186O001B001B001C00122O001C00113O0006EA001D0073000100012O000C012O00184O00810119001D000100122O001900973O00202O00190019000F00122O001B009F6O001C00186O001B001B001C00122O001C00113O0006EA001D0074000100012O000C012O00184O00260019001D000100122O001900A03O00122O001A00973O00202O001A001A00284O001C00193O00122O001D00A16O001C001C001D4O001A001C000100122O001A00973O00202O001A001A000F001254011C00984O000C011D00194O007F001C001C001D001254011D00113O0006EA001E0075000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C00996O001D00196O001C001C001D00122O001D00113O0006EA001E0076000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C009A6O001D00196O001C001C001D00122O001D00113O0006EA001E0077000100012O000C012O00194O0046001A001E000100122O001A00973O00202O001A001A000F00122O001C009A6O001D00193O00122O001E009B6O001C001C001E00122O001D00113O0006EA001E0078000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C009C6O001D00196O001C001C001D00122O001D00113O0006EA001E0079000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C009D6O001D00196O001C001C001D00122O001D00113O0006EA001E007A000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C009E6O001D00196O001C001C001D00122O001D00113O0006EA001E007B000100012O000C012O00194O0081011A001E000100122O001A00973O00202O001A001A000F00122O001C009F6O001D00196O001C001C001D00122O001D00113O0006EA001E007C000100012O000C012O00194O0026001A001E000100122O001A00A23O00122O001B00973O00202O001B001B00284O001D001A3O00122O001E00A16O001D001D001E4O001B001D000100122O001B00973O00202O001B001B000F001254011D00984O000C011E001A4O007F001D001D001E001254011E00113O0006EA001F007D000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D00996O001E001A6O001D001D001E00122O001E00113O0006EA001F007E000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D009A6O001E001A6O001D001D001E00122O001E00113O0006EA001F007F000100012O000C012O001A4O0046001B001F000100122O001B00973O00202O001B001B000F00122O001D009A6O001E001A3O00122O001F009B6O001D001D001F00122O001E00113O0006EA001F0080000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D009C6O001E001A6O001D001D001E00122O001E00113O0006EA001F0081000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D009D6O001E001A6O001D001D001E00122O001E00113O0006EA001F0082000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D009E6O001E001A6O001D001D001E00122O001E00113O0006EA001F0083000100012O000C012O001A4O0081011B001F000100122O001B00973O00202O001B001B000F00122O001D009F6O001E001A6O001D001D001E00122O001E00113O0006EA001F0084000100012O000C012O001A4O0026001B001F000100122O001B00A33O00122O001C00973O00202O001C001C00284O001E001B3O00122O001F00A16O001E001E001F4O001C001E000100122O001C00973O00202O001C001C000F001254011E00984O000C011F001B4O007F001E001E001F001254011F00113O0006EA00200085000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E00996O001F001B6O001E001E001F00122O001F00113O0006EA00200086000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E009A6O001F001B6O001E001E001F00122O001F00113O0006EA00200087000100012O000C012O001B4O0046001C0020000100122O001C00973O00202O001C001C000F00122O001E009A6O001F001B3O00122O0020009B6O001E001E002000122O001F00113O0006EA00200088000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E009C6O001F001B6O001E001E001F00122O001F00113O0006EA00200089000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E009D6O001F001B6O001E001E001F00122O001F00113O0006EA0020008A000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E009E6O001F001B6O001E001E001F00122O001F00113O0006EA0020008B000100012O000C012O001B4O0081011C0020000100122O001C00973O00202O001C001C000F00122O001E009F6O001F001B6O001E001E001F00122O001F00113O0006EA0020008C000100012O000C012O001B4O0026001C0020000100122O001C00A43O00122O001D00973O00202O001D001D00284O001F001C3O00122O002000A16O001F001F00204O001D001F000100122O001D00973O00202O001D001D000F001254011F00984O000C0120001C4O007F001F001F0020001254012000113O0006EA0021008D000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F00996O0020001C6O001F001F002000122O002000113O0006EA0021008E000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F009A6O0020001C6O001F001F002000122O002000113O0006EA0021008F000100012O000C012O001C4O0046001D0021000100122O001D00973O00202O001D001D000F00122O001F009A6O0020001C3O00122O0021009B6O001F001F002100122O002000113O0006EA00210090000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F009C6O0020001C6O001F001F002000122O002000113O0006EA00210091000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F009D6O0020001C6O001F001F002000122O002000113O0006EA00210092000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F009E6O0020001C6O001F001F002000122O002000113O0006EA00210093000100012O000C012O001C4O0081011D0021000100122O001D00973O00202O001D001D000F00122O001F009F6O0020001C6O001F001F002000122O002000113O0006EA00210094000100012O000C012O001C4O0026001D0021000100122O001D00A53O00122O001E00973O00202O001E001E00284O0020001D3O00122O002100A16O0020002000214O001E0020000100122O001E00973O00202O001E001E000F001254012000984O000C0121001D4O007F002000200021001254012100113O0006EA00220095000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O002000996O0021001D6O00200020002100122O002100113O0006EA00220096000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O0020009A6O0021001D6O00200020002100122O002100113O0006EA00220097000100012O000C012O001D4O0046001E0022000100122O001E00973O00202O001E001E000F00122O0020009A6O0021001D3O00122O0022009B6O00200020002200122O002100113O0006EA00220098000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O0020009C6O0021001D6O00200020002100122O002100113O0006EA00220099000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O0020009D6O0021001D6O00200020002100122O002100113O0006EA0022009A000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O0020009E6O0021001D6O00200020002100122O002100113O0006EA0022009B000100012O000C012O001D4O0081011E0022000100122O001E00973O00202O001E001E000F00122O0020009F6O0021001D6O00200020002100122O002100113O0006EA0022009C000100012O000C012O001D4O0026001E0022000100122O001E00A63O00122O001F00973O00202O001F001F00284O0021001E3O00122O002200A16O0021002100224O001F0021000100122O001F00973O00202O001F001F000F001254012100984O000C0122001E4O007F002100210022001254012200113O0006EA0023009D000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O002100996O0022001E6O00210021002200122O002200113O0006EA0023009E000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O0021009A6O0022001E6O00210021002200122O002200113O0006EA0023009F000100012O000C012O001E4O0046001F0023000100122O001F00973O00202O001F001F000F00122O0021009A6O0022001E3O00122O0023009B6O00210021002300122O002200113O0006EA002300A0000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O0021009C6O0022001E6O00210021002200122O002200113O0006EA002300A1000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O0021009D6O0022001E6O00210021002200122O002200113O0006EA002300A2000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O0021009E6O0022001E6O00210021002200122O002200113O0006EA002300A3000100012O000C012O001E4O0081011F0023000100122O001F00973O00202O001F001F000F00122O0021009F6O0022001E6O00210021002200122O002200113O0006EA002300A4000100012O000C012O001E4O0026001F0023000100122O001F00A73O00122O002000973O00202O0020002000284O0022001F3O00122O002300A16O0022002200234O00200022000100122O002000973O00202O00200020000F001254012200984O000C0123001F4O007F002200220023001254012300113O0006EA002400A5000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O002200996O0023001F6O00220022002300122O002300113O0006EA002400A6000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O0022009A6O0023001F6O00220022002300122O002300113O0006EA002400A7000100012O000C012O001F4O004600200024000100122O002000973O00202O00200020000F00122O0022009A6O0023001F3O00122O0024009B6O00220022002400122O002300113O0006EA002400A8000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O0022009C6O0023001F6O00220022002300122O002300113O0006EA002400A9000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O0022009D6O0023001F6O00220022002300122O002300113O0006EA002400AA000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O0022009E6O0023001F6O00220022002300122O002300113O0006EA002400AB000100012O000C012O001F4O008101200024000100122O002000973O00202O00200020000F00122O0022009F6O0023001F6O00220022002300122O002300113O0006EA002400AC000100012O000C012O001F4O002600200024000100122O002000A83O00122O002100973O00202O0021002100284O002300203O00122O002400A16O0023002300244O00210023000100122O002100973O00202O00210021000F001254012300984O000C012400204O007F002300230024001254012400113O0006EA002500AD000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O002300996O002400206O00230023002400122O002400113O0006EA002500AE000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O0023009A6O002400206O00230023002400122O002400113O0006EA002500AF000100012O000C012O00204O004600210025000100122O002100973O00202O00210021000F00122O0023009A6O002400203O00122O0025009B6O00230023002500122O002400113O0006EA002500B0000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O0023009C6O002400206O00230023002400122O002400113O0006EA002500B1000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O0023009D6O002400206O00230023002400122O002400113O0006EA002500B2000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O0023009E6O002400206O00230023002400122O002400113O0006EA002500B3000100012O000C012O00204O008101210025000100122O002100973O00202O00210021000F00122O0023009F6O002400206O00230023002400122O002400113O0006EA002500B4000100012O000C012O00204O002600210025000100122O002100A93O00122O002200973O00202O0022002200284O002400213O00122O002500A16O0024002400254O00220024000100122O002200973O00202O00220022000F001254012400984O000C012500214O007F002400240025001254012500113O0006EA002600B5000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O002400996O002500216O00240024002500122O002500113O0006EA002600B6000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O0024009A6O002500216O00240024002500122O002500113O0006EA002600B7000100012O000C012O00214O004600220026000100122O002200973O00202O00220022000F00122O0024009A6O002500213O00122O0026009B6O00240024002600122O002500113O0006EA002600B8000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O0024009C6O002500216O00240024002500122O002500113O0006EA002600B9000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O0024009D6O002500216O00240024002500122O002500113O0006EA002600BA000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O0024009E6O002500216O00240024002500122O002500113O0006EA002600BB000100012O000C012O00214O008101220026000100122O002200973O00202O00220022000F00122O0024009F6O002500216O00240024002500122O002500113O0006EA002600BC000100012O000C012O00214O002600220026000100122O002200AA3O00122O002300973O00202O0023002300284O002500223O00122O002600A16O0025002500264O00230025000100122O002300973O00202O00230023000F001254012500984O000C012600224O007F002500250026001254012600113O0006EA002700BD000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O002500996O002600226O00250025002600122O002600113O0006EA002700BE000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O0025009A6O002600226O00250025002600122O002600113O0006EA002700BF000100012O000C012O00224O004600230027000100122O002300973O00202O00230023000F00122O0025009A6O002600223O00122O0027009B6O00250025002700122O002600113O0006EA002700C0000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O0025009C6O002600226O00250025002600122O002600113O0006EA002700C1000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O0025009D6O002600226O00250025002600122O002600113O0006EA002700C2000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O0025009E6O002600226O00250025002600122O002600113O0006EA002700C3000100012O000C012O00224O008101230027000100122O002300973O00202O00230023000F00122O0025009F6O002600226O00250025002600122O002600113O0006EA002700C4000100012O000C012O00224O002600230027000100122O002300AB3O00122O002400973O00202O0024002400284O002600233O00122O002700A16O0026002600274O00240026000100122O002400973O00202O00240024000F001254012600984O000C012700234O007F002600260027001254012700113O0006EA002800C5000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O002600996O002700236O00260026002700122O002700113O0006EA002800C6000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O0026009A6O002700236O00260026002700122O002700113O0006EA002800C7000100012O000C012O00234O004600240028000100122O002400973O00202O00240024000F00122O0026009A6O002700233O00122O0028009B6O00260026002800122O002700113O0006EA002800C8000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O0026009C6O002700236O00260026002700122O002700113O0006EA002800C9000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O0026009D6O002700236O00260026002700122O002700113O0006EA002800CA000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O0026009E6O002700236O00260026002700122O002700113O0006EA002800CB000100012O000C012O00234O008101240028000100122O002400973O00202O00240024000F00122O0026009F6O002700236O00260026002700122O002700113O0006EA002800CC000100012O000C012O00234O002600240028000100122O002400AC3O00122O002500973O00202O0025002500284O002700243O00122O002800A16O0027002700284O00250027000100122O002500973O00202O00250025000F001254012700984O000C012800244O007F002700270028001254012800113O0006EA002900CD000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O002700996O002800246O00270027002800122O002800113O0006EA002900CE000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O0027009A6O002800246O00270027002800122O002800113O0006EA002900CF000100012O000C012O00244O004600250029000100122O002500973O00202O00250025000F00122O0027009A6O002800243O00122O0029009B6O00270027002900122O002800113O0006EA002900D0000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O0027009C6O002800246O00270027002800122O002800113O0006EA002900D1000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O0027009D6O002800246O00270027002800122O002800113O0006EA002900D2000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O0027009E6O002800246O00270027002800122O002800113O0006EA002900D3000100012O000C012O00244O008101250029000100122O002500973O00202O00250025000F00122O0027009F6O002800246O00270027002800122O002800113O0006EA002900D4000100012O000C012O00244O002600250029000100122O002500AD3O00122O002600973O00202O0026002600284O002800253O00122O002900A16O0028002800294O00260028000100122O002600973O00202O00260026000F001254012800984O000C012900254O007F002800280029001254012900113O0006EA002A00D5000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O002800996O002900256O00280028002900122O002900113O0006EA002A00D6000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O0028009A6O002900256O00280028002900122O002900113O0006EA002A00D7000100012O000C012O00254O00460026002A000100122O002600973O00202O00260026000F00122O0028009A6O002900253O00122O002A009B6O00280028002A00122O002900113O0006EA002A00D8000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O0028009C6O002900256O00280028002900122O002900113O0006EA002A00D9000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O0028009D6O002900256O00280028002900122O002900113O0006EA002A00DA000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O0028009E6O002900256O00280028002900122O002900113O0006EA002A00DB000100012O000C012O00254O00810126002A000100122O002600973O00202O00260026000F00122O0028009F6O002900256O00280028002900122O002900113O0006EA002A00DC000100012O000C012O00254O00260026002A000100122O002600AE3O00122O002700973O00202O0027002700284O002900263O00122O002A00A16O00290029002A4O00270029000100122O002700973O00202O00270027000F001254012900984O000C012A00264O007F00290029002A001254012A00113O0006EA002B00DD000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O002900996O002A00266O00290029002A00122O002A00113O0006EA002B00DE000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O0029009A6O002A00266O00290029002A00122O002A00113O0006EA002B00DF000100012O000C012O00264O00460027002B000100122O002700973O00202O00270027000F00122O0029009A6O002A00263O00122O002B009B6O00290029002B00122O002A00113O0006EA002B00E0000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O0029009C6O002A00266O00290029002A00122O002A00113O0006EA002B00E1000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O0029009D6O002A00266O00290029002A00122O002A00113O0006EA002B00E2000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O0029009E6O002A00266O00290029002A00122O002A00113O0006EA002B00E3000100012O000C012O00264O00810127002B000100122O002700973O00202O00270027000F00122O0029009F6O002A00266O00290029002A00122O002A00113O0006EA002B00E4000100012O000C012O00264O00260027002B000100122O002700AF3O00122O002800973O00202O0028002800284O002A00273O00122O002B00A16O002A002A002B4O0028002A000100122O002800973O00202O00280028000F001254012A00984O000C012B00274O007F002A002A002B001254012B00113O0006EA002C00E5000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A00996O002B00276O002A002A002B00122O002B00113O0006EA002C00E6000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A009A6O002B00276O002A002A002B00122O002B00113O0006EA002C00E7000100012O000C012O00274O00460028002C000100122O002800973O00202O00280028000F00122O002A009A6O002B00273O00122O002C009B6O002A002A002C00122O002B00113O0006EA002C00E8000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A009C6O002B00276O002A002A002B00122O002B00113O0006EA002C00E9000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A009D6O002B00276O002A002A002B00122O002B00113O0006EA002C00EA000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A009E6O002B00276O002A002A002B00122O002B00113O0006EA002C00EB000100012O000C012O00274O00810128002C000100122O002800973O00202O00280028000F00122O002A009F6O002B00276O002A002A002B00122O002B00113O0006EA002C00EC000100012O000C012O00274O005A0128002C000100122O002800B03O00202O00280028000F00122O002A00B13O00122O002B00113O000223012C00ED4O005A0128002C000100122O002800B03O00202O00280028000F00122O002A00B23O00122O002B00113O000223012C00EE4O005A0128002C000100122O002800B33O00202O00280028001600122O002A00B43O00122O002B00B53O000223012C00EF4O005A0128002C000100122O002800B33O00202O0028002800B600122O002A00B73O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00BA000223012D00F04O005A0128002D000100122O002800B33O00202O0028002800B600122O002A007F3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00BB000223012D00F14O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00BC3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00B0000223012D00F24O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00BD3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00BE000223012D00F34O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00BF3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00C0000223012D00F44O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00C13O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C0097000223012D00F54O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00C23O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00C3000223012D00F64O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00C43O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00C5000223012D00F74O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00C63O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00C7000223012D00F84O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00C83O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00C9000223012D00F94O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00CA3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00CB000223012D00FA4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00CC3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00CD000223012D00FB4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00CE3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C008A000223012D00FC4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00CF3O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00D0000223012D00FD4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00D13O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C004C000223012D00FE4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00D23O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00D3000223012D00FF4O005A0128002D000100122O002800B33O00202O0028002800B600122O002A00D43O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C0015000223012D2O00013O005A0128002D000100122O002800BE3O00202O0028002800B600122O002A00D53O00122O002B00113O00123F002C00B83O0020DE002C002C00B90020DE002C002C00D60006EA002D003O0100012O000C017O00100028002D00012O00B33O00013O0002012O00023O0003023O005F47030A3O00656E74657265644B657901033O00123F000100013O00106C000100024O00B33O00017O00043O0003023O005F47030A3O00656E74657265644B657903103O00585761726546722O6556657273696F6E03083O006C6F61644D61696E00083O00123F3O00013O0020DE5O000200262A3O0007000100030004A03O0007000100123F3O00044O00223O000100010004A03O000700012O00B33O00017O00023O00030C3O00736574636C6970626F617264031D3O00682O7470733A2O2F646973636F72642E2O672F712O754A4E767144337200043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00413O0003083O00546F2O676C65554903043O0067616D6503093O00776F726B7370616365030E3O0046696E6446697273744368696C64030B3O00417374726F56616C75657303073O0044657374726F7903113O00437573746F6D20416E696D6174696F6E7303083O00496E7374616E63652O033O006E657703063O00466F6C64657203043O004E616D65030B3O00537472696E6756616C756503043O004B65797303063O00506172656E74030A3O00362O313236353235363203093O00416E696D6174696F6E030A3O004765745365727669636503093O00576F726B737061636503073O006B6F6C6D6F7665030B3O00416E696D6174696F6E4964030D3O00726278612O73657469643A2O2F030A3O003534313431353639343103083O006D612O737061696E030A3O003534312O32363335393303043O0070757368030A3O00353831353338332O323003063O0064656C66616E030A3O0035343134393032333038030B3O006669726520636972636C65030A3O003437353634302O32393803053O006D6F747573030A3O0034373836313338363539030B3O0053656C6620536970686F6E030A3O003437353634323733373803063O00536970686F6E030A3O0035342O32383539303132030B3O00416820736861206C616E6103073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503113O005265706C69636174656453746F72616765030A3O006C6F6164737472696E6703073O00482O747047657403483O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F7848657074632F4B61766F2D55492D4C6962726172792F6D61696E2F736F757263652E6C756103093O004372656174654C696203153O00582D57617265207C2046722O652056657273696F6E030A3O00426C2O6F645468656D6503063O004E657754616203083O004B657962696E6473030A3O004E657753656374696F6E030E3O005769746368204B657962696E6473030F3O00456E65726779204B657962696E647303073O005769746368657303093O0056616D702F576F6C6603073O0056414D5049524503043O004D69736303093O0054656C65706F727473030D3O00437573746F6D205370652O6C73030E3O004F2O63757069656420436865636B030A3O0041627573652043686172030D3O00537962696C2053656374696F6E03073O00437265646974732O033O00477569000E013O007C016O0020275O00012O002C3O00020001001209012O00023O00206O000300206O000400122O000200058O0002000200064O000C00013O0004A03O000C000100202700013O00062O002C00010002000100123F000100023O00204C2O010001000300202O00010001000400122O000300076O00010003000200062O0001001500013O0004A03O001500010020270002000100062O002C00020002000100123F000200083O0020DE0002000200090012540103000A3O00123F000400034O002A0102000400020030250102000B000500123F000300083O0020DE0003000300090012540104000C3O00123F000500033O0020DE0005000500052O002A0103000500020030030003000B000D00122O000400083O00202O00040004000900122O0005000A6O00040002000200122O000500033O00102O0004000E000500302O0004000B000700122O0005000F3O00122O000600083O0020DE000600060009001254010700104O001401060002000200123F000700023O002027000700070011001254010900124O002A0107000900020020DE00070007000700106C0006000E00070030740106000B001300122O000700156O000800056O00070007000800102O00060014000700122O000700163O00122O000800083O00202O00080008000900122O000900106O00080002000200123F000900023O002027000900090011001254010B00124O002A0109000B00020020DE00090009000700106C0008000E00090030740108000B001700122O000900156O000A00076O00090009000A00102O00080014000900122O000900183O00122O000A00083O00202O000A000A000900122O000B00106O000A0002000200123F000B00023O002027000B000B0011001254010D00124O002A010B000D00020020DE000B000B000700106C000A000E000B003074010A000B001900122O000B00156O000C00096O000B000B000C00102O000A0014000B00122O000B001A3O00122O000C00083O00202O000C000C000900122O000D00106O000C0002000200123F000D00023O002027000D000D0011001254010F00124O002A010D000F00020020DE000D000D000700106C000C000E000D003074010C000B001B00122O000D00156O000E000B6O000D000D000E00102O000C0014000D00122O000D001C3O00122O000E00083O00202O000E000E000900122O000F00106O000E0002000200123F000F00023O002027000F000F0011001254011100124O002A010F001100020020DE000F000F000700106C000E000E000F003074010E000B001D00122O000F00156O0010000D6O000F000F001000102O000E0014000F00122O000F001E3O00122O001000083O00202O00100010000900122O001100106O00100002000200123F001100023O002027001100110011001254011300124O002A0111001300020020DE00110011000700106C0010000E00110030740110000B001F00122O001100156O0012000F6O00110011001200102O00100014001100122O001100203O00122O001200083O00202O00120012000900122O001300106O00120002000200123F001300023O002027001300130011001254011500124O002A0113001500020020DE00130013000700106C0012000E00130030740112000B002100122O001300156O001400116O00130013001400102O00120014001300122O001300223O00122O001400083O00202O00140014000900122O001500106O00140002000200123F001500023O002027001500150011001254011700124O002A0115001700020020DE00150015000700106C0014000E00150030740114000B002300122O001500156O001600136O00150015001600102O00140014001500122O001500243O00122O001600083O00202O00160016000900122O001700106O00160002000200123F001700023O002027001700170011001254011900124O002A0117001900020020DE00170017000700106C0016000E00170030250116000B0025001254011700154O000C011800154O007F00170017001800106C00160014001700123F001700023O0020DE00170017002600206F01170017002700202O00180017002800202O00190018002900202O001A0019002A00122O001B00023O00202O001B001B001100122O001D002B6O001B001D000200122O001C002C3O00122O001D00023O002027001D001D002D001254011F002E4O0073001D001F4O00E9001C3O00022O000D011C000100020020DE001D001C002F001254011E00303O001254011F00314O002A011D001F0002002044011E001D003200122O002000336O001E0020000200202O001F001E003400122O002100356O001F0021000200202O0020001E003400122O002200366O00200022000200202O0021001D0032001254012300374O002A01210023000200204401220021003400122O002400376O00220024000200202O0023001D003200122O002500386O00230025000200202O00240023003400122O002600396O00240026000200202O0025001D00320012540127003A4O002A01250027000200204401260025003400122O0028003A6O00260028000200202O0027001D003200122O0029003B6O00270029000200202O00280027003400122O002A003B6O0028002A000200202O0029001D0032001254012B003C4O002A0129002B0002002044012A0029003400122O002C003C6O002A002C000200202O002B001D003200122O002D003D6O002B002D000200202O002C002B003400122O002E003D6O002C002E000200202O002D001D0032001254012F003E4O002A012D002F0002002044012E002D003400122O0030003F6O002E0030000200202O002F001D003200122O003100406O002F0031000200202O0030002F003400122O003200406O00300032000200202O0031001D0032001254013300414O004F00310033000200202O00320031003400122O003400416O0032003400026O00017O000F3O0003023O005F4703083O00492O4D4F5254414C2O01026O00F03F010003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203093O004275726E496E53756E03073O00436F6E74726F6C030A3O004669726553657276657203063O00756E7061636B03043O007761697401193O00123F000100013O00106C000100023O00123F000100013O0020DE00010001000200262A00010018000100030004A03O001800012O00282O013O00010030DD00010004000500122O000200063O00202O00020002000700122O000400086O00020004000200202O00020002000900202O00020002000A00202O00020002000B00202O00020002000C00202O00020002000D00123F0004000E4O000C010500014O0059000400054O006701023O000100123F0002000F4O00220002000100010004A03O000200012O00B33O00017O001A3O0003023O005F4703083O004865616C5370616D2O0103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465022O0080FF642OCD41030E3O00436861726163746572412O64656403043O0057616974026O00F03F03043O004865616C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03043O0077616974013B3O00123F000100013O00106C000100023O00123F000100013O0020DE00010001000200262A0001003A000100030004A03O003A000100123F000100043O00201E2O010001000500202O00010001000600122O000200073O00122O000300043O00202O00030003000500202O0003000300084O000300046O00023O000400044O003500010020DE000700060009002610010700350001000A0004A03O0035000100062000060035000100010004A03O003500010020DE0007000600090020A200070007000B00202O00070007000C00202O00080001000900202O00080008000B00202O00080008000C4O00070007000800202O00070007000D00262O000700350001000E0004A03O003500010020DE00080006000900063501080025000100010004A03O002500010020DE00080006000F0020270008000800102O00140108000200022O002801093O00020030160009001100124O000A3O000100102O000A0011000800102O00090013000A00122O000A00043O00202O000A000A001400122O000C00156O000A000C000200202O000A000A001600202O000A000A001700202O000A000A001800122O000C00196O000D00096O000C000D6O000A3O000100066601020010000100020004A03O0010000100123F0002001A4O00220002000100010004A03O000200012O00B33O00017O001C3O0003023O005F4703053O0050554E43482O0103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E69747564652O0284FEE471D98945030E3O00436861726163746572412O64656403043O0057616974026O00F03F03053O0050756E6368027O0040010003083O0048756D616E6F6964030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03043O0077616974013D3O00123F000100013O00106C000100023O00123F000100013O0020DE00010001000200262A0001003C000100030004A03O003C000100123F000100043O00201E2O010001000500202O00010001000600122O000200073O00122O000300043O00202O00030003000500202O0003000300084O000300046O00023O000400044O003700010020DE000700060009002610010700370001000A0004A03O0037000100062000060037000100010004A03O003700010020DE0007000600090020A200070007000B00202O00070007000C00202O00080001000900202O00080008000B00202O00080008000C4O00070007000800202O00070007000D00262O000700370001000E0004A03O003700010020DE00080006000900063501080025000100010004A03O002500010020DE00080006000F0020270008000800102O00140108000200022O002801093O00020030250109001100122O0028010A3O0002003025010A001100140020DE000B0008001500106C000A0013000B00106C00090013000A00123F000A00043O00205E010A000A001600122O000C00176O000A000C000200202O000A000A001800202O000A000A001900202O000A000A001A00122O000C001B6O000D00096O000C000D6O000A3O000100066601020010000100020004A03O0010000100123F0002001C4O00220002000100010004A03O000200012O00B33O00017O00083O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0052030A3O00496E707574426567616E03073O00436F2O6E65637400113O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F500043O000700202O0004000400084O000600036O0004000600016O00013O00023O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00153O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D4368617261637465720003043O004E616D6503093O00436861726163746572026O00F03F030B3O005269704F75744865617274027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402353O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003400013O0004A03O003400010020DE0004000300050006180104003400013O0004A03O003400010020DE0004000300050020DE0004000400060006180104003400013O0004A03O0034000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040034000100090004A03O0034000100123F000400013O00209201040004000200122O000500073O00202O00050005000A4O00040004000500202O00040004000B4O00053O000200302O0005000C000D4O00063O000100102O0006000C000400102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O000100122O000600153O00122O000700073O00202O00070007000A4O0006000200012O00B33O00017O00143O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030C3O0057616974466F724368696C6403043O0052696E6703063O0041637469766503053O0056616C75652O0103043O0077616974026O33D33F030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503113O00446F6E74204275726E206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O001285012O00013O00206O000200206O000300202O00013O000400202O00020001000500202O00030001000600122O000500076O00030005000200202O00040003000800302O00040009000A00122O0004000B3O00122O0005000C6O00040002000100122O000400013O00202O00040004000D00122O0006000E6O00040006000200202O00040004000F00122O000600106O00073O000200302O00070011001200302O0007001300144O0004000700016O00017O00083O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0043030A3O00496E707574426567616E03073O00436F2O6E65637400113O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F500043O000700202O0004000400084O000600036O0004000600016O00013O00023O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00153O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D4368617261637465720003043O004E616D6503093O00436861726163746572026O00F03F03043O00462O6564027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402353O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003400013O0004A03O003400010020DE0004000300050006180104003400013O0004A03O003400010020DE0004000300050020DE0004000400060006180104003400013O0004A03O0034000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040034000100090004A03O0034000100123F000400013O00209201040004000200122O000500073O00202O00050005000A4O00040004000500202O00040004000B4O00053O000200302O0005000C000D4O00063O000100102O0006000C000400102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O000100122O000600153O00122O000700073O00202O00070007000A4O0006000200012O00B33O00017O00083O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0045030A3O00496E707574426567616E03073O00436F2O6E65637400113O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F500043O000700202O0004000400084O000600036O0004000600016O00013O00023O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00153O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D4368617261637465720003043O004E616D6503093O00436861726163746572026O00F03F03043O004865616C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402353O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003400013O0004A03O003400010020DE0004000300050006180104003400013O0004A03O003400010020DE0004000300050020DE0004000400060006180104003400013O0004A03O0034000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040034000100090004A03O0034000100123F000400013O00209201040004000200122O000500073O00202O00050005000A4O00040004000500202O00040004000B4O00053O000200302O0005000C000D4O00063O000100102O0006000C000400102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O000100122O000600153O00122O000700073O00202O00070007000A4O0006000200012O00B33O00017O00083O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0055030A3O00496E707574426567616E03073O00436F2O6E65637400113O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F500043O000700202O0004000400084O000600036O0004000600016O00013O00023O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D4368617261637465720003043O004E616D6503093O00436861726163746572026O00F03F03043O0042697465027O00400100030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303083O0057657265776F6C66030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402363O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003500013O0004A03O003500010020DE0004000300050006180104003500013O0004A03O003500010020DE0004000300050020DE0004000400060006180104003500013O0004A03O0035000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040035000100090004A03O0035000100123F000400013O00207F01040004000200122O000500073O00202O00050005000A4O00040004000500202O00040004000B4O00053O000200302O0005000C000D4O00063O000200102O0006000E000400302O0006000C000F00106C0005000E000600123F000600013O00205E01060006001000122O000800116O00060008000200202O00060006001200202O00060006001300202O00060006001400122O000800156O000900056O000800096O00063O000100123F000600163O00123F000700073O0020DE00070007000A2O002C0006000200012O00B33O00017O00103O00026O00F03F03043O00462O6564027O004003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03043O0077616974026O00E03F03043O004865616C00304O003B5O000200304O000100024O00013O000100122O000200043O00202O00020002000500122O000400066O00020004000200202O00020002000700202O00020002000800102O00010001000200106C3O0003000100123F000100043O00205E2O010001000500122O000300096O00010003000200202O00010001000A00202O00010001000B00202O00010001000C00122O0003000D6O00048O000300046O00013O000100123F0001000E3O0012540102000F4O002C0001000200012O003B00013O000200302O0001000100104O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00030003000800102O00020001000300106C00010003000200123F000200043O00205E01020002000500122O000400096O00020004000200202O00020002000A00202O00020002000B00202O00020002000C00122O0004000D6O000500016O000400056O00023O00012O00B33O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465023O00E0CF126341030E3O00436861726163746572412O64656403043O0057616974026O00F03F03083O004E65636B536E6170027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B00323O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O002F00010020DE0006000500060026100106002F000100070004A03O002F00010006200005002F00013O0004A03O002F00010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O0006002F0001000B0004A03O002F00010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200022O002801083O00020030160008000E000F4O00093O000100102O0009000E000700102O00080010000900122O000900013O00202O00090009001100122O000B00126O0009000B000200202O00090009001300202O00090009001400202O00090009001500122O000B00166O000C00086O000B000C6O00093O00010006662O01000A000100020004A03O000A00012O00B33O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465023O00E0CF126341030E3O00436861726163746572412O64656403043O0057616974026O00F03F03043O0042697465027O00400100030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303083O0057657265776F6C66030A3O004669726553657276657203063O00756E7061636B00333O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O003000010020DE00060005000600261001060030000100070004A03O003000010006200005003000013O0004A03O003000010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O000600300001000B0004A03O003000010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200022O002801083O00020030E20008000E000F4O00093O000200302O0009000E001100102O00090010000700102O00080010000900122O000900013O00205E01090009001200122O000B00136O0009000B000200202O00090009001400202O00090009001500202O00090009001600122O000B00176O000C00086O000B000C6O00093O00010006662O01000A000100020004A03O000A00012O00B33O00017O00083O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030C3O0057616974466F724368696C64030D3O0057657265776F6C6656656E6F6D03073O0044657374726F79000B3O00123F3O00013O0020DE5O00020020DE5O00030020DE00013O00040020DE00020001000500200F01030001000600122O000500076O00030005000200202O0004000300084O0004000200012O00B33O00017O00053O0003043O0067616D65030A3O0047657453657276696365030A3O0052756E53657276696365030D3O0052656E6465725374652O70656403073O00436F2O6E65637400093O00123F3O00013O0020275O0002001254010200034O002A012O000200020020DE5O00040020275O000500022301026O00103O000200012O00B33O00013O00013O000C3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203043O004E616D6503093O00576F726B737061636503043O004C697665030F3O0064697361626C654D6F76656D656E7403073O0044657374726F79030C3O0064697361626C654D61676963030F3O0064697361626C6550756E6368696E6703103O0064697361626C65536970686F6E696E67030E3O0064697361626C65462O6564696E6700283O0012433O00013O00206O000200206O000300206O000400122O000100013O00202O00010001000500202O0001000100064O000100013O00202O00010001000700202O0001000100084O00010002000100122O000100013O00202O00010001000500202O0001000100064O000100013O00202O00010001000900202O0001000100084O00010002000100122O000100013O00202O00010001000500202O0001000100064O000100013O00202O00010001000A00202O0001000100084O00010002000100122O000100013O00202O00010001000500202O0001000100064O000100013O00202O00010001000B00202O0001000100084O00010002000100122O000100013O00202O00010001000500202O0001000100064O000100013O00202O00010001000C00202O0001000100084O0001000200016O00017O00113O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0047030A3O00496E707574426567616E03073O00436F2O6E65637403013O005803013O004303013O004A03013O004B03013O004803013O004E03013O004D03013O005403013O005100C33O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F700043O000700202O0004000400084O000600036O00040006000100122O000400013O00202O00040004000200122O000600036O00040006000200122O000500043O00202O00050005000500202O0005000500090006EA00060002000100022O000C012O00044O000C012O00053O000223010700033O0006EA00080004000100022O000C012O00064O000C012O00073O0020F700090004000700202O0009000900084O000B00086O0009000B000100122O000900013O00202O00090009000200122O000B00036O0009000B000200122O000A00043O00202O000A000A000500202O000A000A000A0006EA000B0005000100022O000C012O00094O000C012O000A3O0006EA000C0006000100012O000C012O000B3O0020F7000D0009000700202O000D000D00084O000F000C6O000D000F000100122O000D00013O00202O000D000D000200122O000F00036O000D000F000200122O000E00043O00202O000E000E000500202O000E000E000B0006EA000F0007000100022O000C012O000D4O000C012O000E3O0006EA00100008000100012O000C012O000F3O0020F70011000D000700202O0011001100084O001300106O00110013000100122O001100013O00202O00110011000200122O001300036O00110013000200122O001200043O00202O00120012000500202O0012001200090006EA00130009000100022O000C012O00114O000C012O00123O0002230114000A3O0006EA0015000B000100022O000C012O00134O000C012O00143O0012F0001600013O00202O00160016000200122O001800036O00160018000200122O001700043O00202O00170017000500202O00170017000C0006EA0018000C000100022O000C012O00164O000C012O00173O0002230119000D3O0006EA001A000E000100022O000C012O00184O000C012O00193O0020F7001B0016000700202O001B001B00084O001D001A6O001B001D000100122O001B00013O00202O001B001B000200122O001D00036O001B001D000200122O001C00043O00202O001C001C000500202O001C001C000D0006EA001D000F000100022O000C012O001B4O000C012O001C3O000223011E00103O0006EA001F0011000100022O000C012O001D4O000C012O001E3O0020F70020001B000700202O0020002000084O0022001F6O00200022000100122O002000013O00202O00200020000200122O002200036O00200022000200122O002100043O00202O00210021000500202O0021002100090006EA00220012000100022O000C012O00204O000C012O00213O000223012300133O0006EA00240014000100022O000C012O00224O000C012O00233O0020F700250020000700202O0025002500084O002700246O00250027000100122O002500013O00202O00250025000200122O002700036O00250027000200122O002600043O00202O00260026000500202O00260026000E0006EA00270015000100022O000C012O00254O000C012O00263O0006EA00280016000100012O000C012O00273O0020F700290025000700202O0029002900084O002B00286O0029002B000100122O002900013O00202O00290029000200122O002B00036O0029002B000200122O002A00043O00202O002A002A000500202O002A002A000F0006EA002B0017000100022O000C012O00294O000C012O002A3O0006EA002C0018000100012O000C012O002B3O0020F7002D0029000700202O002D002D00084O002F002C6O002D002F000100122O002D00013O00202O002D002D000200122O002F00036O002D002F000200122O002E00043O00202O002E002E000500202O002E002E00100006EA002F0019000100022O000C012O002D4O000C012O002E3O0006EA0030001A000100012O000C012O002F3O0020DE0031002D00070020270031003100082O000C013300304O001000310033000100123F003100043O0020DE0031003100050020DE0031003100110006EA0032001B000100022O000C012O002D4O000C012O00313O0006EA0033001C000100012O000C012O00323O0020F50034002D000700202O0034003400084O003600336O0034003600016O00013O001D3O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O00476976655374616B6503053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00103O00026O00F03F03053O005374617274027O004003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D65026O002A4003113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O0050756E636853656C6603053O007072696E7401344O00882O013O000200302O0001000100024O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00043O00084O00030003000400102O00020001000300102O00010003000200122O000200013O00122O000300093O00122O000400013O00042O00020033000100123F000600043O00205E01060006000500122O0008000A6O00060008000200202O00060006000B00202O00060006000C00202O00060006000D00122O0008000E6O000900016O000800096O00063O00010012D30006000F6O00073O000100122O000800043O00202O00080008000500122O000A00066O0008000A000200202O00080008000700202O00093O00084O00080008000900102O00070001000800123F000800043O0020F400080008000500122O000A000A6O0008000A000200202O00080008000B00202O00080008000C00202O00090008000D4O000B00066O000C00076O0009000C000100123F000900103O0020DE000A3O00082O002C0009000200010004360102001000012O00B33O00017O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E7403163O00476574506C6179657246726F6D436861726163746572021C4O007C01026O000D0102000100020006180102001B00013O0004A03O001B000100123F000200013O00207D01020002000200202O00020002000300202O0003000200044O00030002000200202O00040003000500062O0004001B00013O0004A03O001B00010020DE0004000300050020DE0004000400060006180104001B00013O0004A03O001B000100123F000400013O0020F600040004000200202O00040004000700202O00060003000500202O0006000600064O00040006000200062O0004001B00013O0004A03O001B00012O007C010500014O000C010600044O002C0005000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03073O0052696E674F2O6603053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03063O00466F2O6C6F7703053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00103O00026O00F03F03053O005374617274027O004003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D65026O002A4003113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O0050756E636853656C6603053O007072696E7401344O00882O013O000200302O0001000100024O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00043O00084O00030003000400102O00020001000300102O00010003000200122O000200013O00122O000300093O00122O000400013O00042O00020033000100123F000600043O00205E01060006000500122O0008000A6O00060008000200202O00060006000B00202O00060006000C00202O00060006000D00122O0008000E6O000900016O000800096O00063O00010012D30006000F6O00073O000100122O000800043O00202O00080008000500122O000A00066O0008000A000200202O00080008000700202O00093O00084O00080008000900102O00070001000800123F000800043O0020F400080008000500122O000A000A6O0008000A000200202O00080008000B00202O00080008000C00202O00090008000D4O000B00066O000C00076O0009000C000100123F000900103O0020DE000A3O00082O002C0009000200010004360102001000012O00B33O00017O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E7403163O00476574506C6179657246726F6D436861726163746572021C4O007C01026O000D0102000100020006180102001B00013O0004A03O001B000100123F000200013O00207D01020002000200202O00020002000300202O0003000200044O00030002000200202O00040003000500062O0004001B00013O0004A03O001B00010020DE0004000300050020DE0004000400060006180104001B00013O0004A03O001B000100123F000400013O0020F600040004000200202O00040004000700202O00060003000500202O0006000600064O00040006000200062O0004001B00013O0004A03O001B00012O007C010500014O000C010600044O002C0005000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00103O00026O00F03F03053O005374617274027O004003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D65026O002A4003113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B030A3O005374616E645374692O6C03053O007072696E7401344O00882O013O000200302O0001000100024O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00043O00084O00030003000400102O00020001000300102O00010003000200122O000200013O00122O000300093O00122O000400013O00042O00020033000100123F000600043O00205E01060006000500122O0008000A6O00060008000200202O00060006000B00202O00060006000C00202O00060006000D00122O0008000E6O000900016O000800096O00063O00010012D30006000F6O00073O000100122O000800043O00202O00080008000500122O000A00066O0008000A000200202O00080008000700202O00093O00084O00080008000900102O00070001000800123F000800043O0020F400080008000500122O000A000A6O0008000A000200202O00080008000B00202O00080008000C00202O00090008000D4O000B00066O000C00076O0009000C000100123F000900103O0020DE000A3O00082O002C0009000200010004360102001000012O00B33O00017O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E7403163O00476574506C6179657246726F6D436861726163746572021C4O007C01026O000D0102000100020006180102001B00013O0004A03O001B000100123F000200013O00207D01020002000200202O00020002000300202O0003000200044O00030002000200202O00040003000500062O0004001B00013O0004A03O001B00010020DE0004000300050020DE0004000400060006180104001B00013O0004A03O001B000100123F000400013O0020F600040004000200202O00040004000700202O00060003000500202O0006000600064O00040006000200062O0004001B00013O0004A03O001B00012O007C010500014O000C010600044O002C0005000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00103O00026O00F03F03053O005374617274027O004003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D65026O002A4003113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O00412O6C6F774D6F766503053O007072696E7401344O00882O013O000200302O0001000100024O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00043O00084O00030003000400102O00020001000300102O00010003000200122O000200013O00122O000300093O00122O000400013O00042O00020033000100123F000600043O00205E01060006000500122O0008000A6O00060008000200202O00060006000B00202O00060006000C00202O00060006000D00122O0008000E6O000900016O000800096O00063O00010012D30006000F6O00073O000100122O000800043O00202O00080008000500122O000A00066O0008000A000200202O00080008000700202O00093O00084O00080008000900102O00070001000800123F000800043O0020F400080008000500122O000A000A6O0008000A000200202O00080008000B00202O00080008000C00202O00090008000D4O000B00066O000C00076O0009000C000100123F000900103O0020DE000A3O00082O002C0009000200010004360102001000012O00B33O00017O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E7403163O00476574506C6179657246726F6D436861726163746572021C4O007C01026O000D0102000100020006180102001B00013O0004A03O001B000100123F000200013O00207D01020002000200202O00020002000300202O0003000200044O00030002000200202O00040003000500062O0004001B00013O0004A03O001B00010020DE0004000300050020DE0004000400060006180104001B00013O0004A03O001B000100123F000400013O0020F600040004000200202O00040004000700202O00060003000500202O0006000600064O00040006000200062O0004001B00013O0004A03O001B00012O007C010500014O000C010600044O002C0005000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00103O00026O00F03F03053O005374617274027O004003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D65026O002A4003113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O0050756E636853656C6603053O007072696E7401344O00882O013O000200302O0001000100024O00023O000100122O000300043O00202O00030003000500122O000500066O00030005000200202O00030003000700202O00043O00084O00030003000400102O00020001000300102O00010003000200122O000200013O00122O000300093O00122O000400013O00042O00020033000100123F000600043O00205E01060006000500122O0008000A6O00060008000200202O00060006000B00202O00060006000C00202O00060006000D00122O0008000E6O000900016O000800096O00063O00010012D30006000F6O00073O000100122O000800043O00202O00080008000500122O000A00066O0008000A000200202O00080008000700202O00093O00084O00080008000900102O00070001000800123F000800043O0020F400080008000500122O000A000A6O0008000A000200202O00080008000B00202O00080008000C00202O00090008000D4O000B00066O000C00076O0009000C000100123F000900103O0020DE000A3O00082O002C0009000200010004360102001000012O00B33O00017O00073O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E7403163O00476574506C6179657246726F6D436861726163746572021C4O007C01026O000D0102000100020006180102001B00013O0004A03O001B000100123F000200013O00207D01020002000200202O00020002000300202O0003000200044O00030002000200202O00040003000500062O0004001B00013O0004A03O001B00010020DE0004000300050020DE0004000400060006180104001B00013O0004A03O001B000100123F000400013O0020F600040004000200202O00040004000700202O00060003000500202O0006000600064O00040006000200062O0004001B00013O0004A03O001B00012O007C010500014O000C010600044O002C0005000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03093O00446F6E7450756E636803053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03053O00536C2O657003053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B030C3O0057657265776F6C665475726E03053O007072696E74024C3O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004004B00013O0004A03O004B00010020DE0004000300050006180104004B00013O0004A03O004B00010020DE0004000300050020DE0004000400060006180104004B00013O0004A03O004B000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O0004004B000100090004A03O004B00012O002801043O00020030120004000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700102O0005000A000600102O0004000C000500122O000500013O00202O00050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100122O000500166O00063O000100122O000700013O00202O00070007000D00122O0009000E6O00070009000200202O00070007000F00122O000800073O00202O0008000800104O00070007000800102O0006000A000700122O000700013O00202O00070007000D00122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B000100122O000800173O00122O000900073O00202O0009000900104O0008000200012O00B33O00017O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D43686172616374657200026O00F03F03053O005374617274027O0040030A3O004765745365727669636503093O00576F726B737061636503043O004C69766503043O004E616D6503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O00436F6D70756C73696F6E030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402373O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003600013O0004A03O003600010020DE0004000300050006180104003600013O0004A03O003600010020DE0004000300050020DE0004000400060006180104003600013O0004A03O0036000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040036000100090004A03O003600012O002801043O00020030820104000A000B4O00053O000100122O000600013O00202O00060006000D00122O0008000E6O00060008000200202O00060006000F00122O000700073O00202O0007000700104O00060006000700106C0005000A000600106C0004000C000500123F000500013O00205E01050005000D00122O000700116O00050007000200202O00050005001200202O00050005001300202O00050005001400122O000700156O000800046O000700086O00053O000100123F000500163O00123F000600073O0020DE0006000600102O002C0005000200012O00B33O00017O00053O00030A3O006C6F6164737472696E6703043O0067616D6503073O00482O747047657403213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F764B4C505542367203213O00682O7470733A2O2F706173746562696E2E636F6D2F7261772F662O5246697A335600113O00126D012O00013O00122O000100023O00202O00010001000300122O000300046O000400016O000100049O0000026O0001000100124O00013O00122O000100023O002027000100010003001254010300054O00B7000400014O0073000100044O00E95O00022O00223O000100012O00B33O00017O00083O0003013O006C03043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503073O004B6579446F776E03073O00436F2O6E65637403013O006B001D3O001254012O00013O0002232O015O000223010200013O001280000300023O00202O00030003000300202O00030003000400202O0003000300054O00030002000200202O00030003000600202O0003000300070006EA00050002000100022O000C017O000C012O00014O0010000300050001001254010300083O000223010400033O000223010500043O001280000600023O00202O00060006000300202O00060006000400202O0006000600054O00060002000200202O00060006000600202O0006000600070006EA00080005000100022O000C012O00034O000C012O00044O00100006000800012O00B33O00013O00063O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O000F3O0003083O004973547970696E6703043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F757365026O00F03F03043O005475726E027O004003083O007475726E4261636B030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303083O0057657265776F6C66030A3O004669726553657276657203063O00756E7061636B011F3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001E000100010004A03O001E00012O007C2O0100014O003500010001000200122O000200023O00202O00020002000300202O00020002000400202O0002000200054O0002000200024O00033O000200302O0003000600074O00043O000100302O00040006000900102O00030008000400122O000400023O00202O00040004000A00122O0006000B6O00040006000200202O00040004000C00202O00040004000D00202O00040004000E00122O0006000F6O000700036O000600076O00043O00012O00B33O00017O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O000E3O0003083O004973547970696E6703043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F757365026O00F03F03043O005475726E027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303083O0057657265776F6C66030A3O004669726553657276657203063O00756E7061636B011F3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001E000100010004A03O001E00012O007C2O0100014O003500010001000200122O000200023O00202O00020002000300202O00020002000400202O0002000200054O0002000200024O00033O000200302O0003000600074O00043O000100302O00040006000700102O00030008000400122O000400023O00202O00040004000900122O0006000A6O00040006000200202O00040004000B00202O00040004000C00202O00040004000D00122O0006000E6O000700036O000600076O00043O00012O00B33O00017O00083O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503043O00456E756D03073O004B6579436F646503013O0056030A3O00496E707574426567616E03073O00436F2O6E65637400113O0012F03O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O0001000100060006EA00023O000100022O000C017O000C012O00013O0006EA00030001000100012O000C012O00023O0020F500043O000700202O0004000400084O000600036O0004000600016O00013O00023O00013O0003093O0049734B6579446F776E00064O005B016O00206O00014O000200018O00029O008O00017O00153O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503063O0054617267657403063O00506172656E742O033O00706C7203163O00476574506C6179657246726F6D4368617261637465720003043O004E616D6503093O00436861726163746572026O00F03F03083O004E65636B536E6170027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O0056616D70697265030A3O004669726553657276657203063O00756E7061636B03053O007072696E7402353O001241000200013O00202O00020002000200202O00020002000300202O0003000200044O0003000200024O00048O00040001000200062O0004003400013O0004A03O003400010020DE0004000300050006180104003400013O0004A03O003400010020DE0004000300050020DE0004000400060006180104003400013O0004A03O0034000100123F000400013O00207A00040004000200202O00040004000800202O00060003000500202O0006000600064O00040006000200122O000400073O00122O000400073O00262O00040034000100090004A03O0034000100123F000400013O00209201040004000200122O000500073O00202O00050005000A4O00040004000500202O00040004000B4O00053O000200302O0005000C000D4O00063O000100102O0006000C000400102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O000100122O000600153O00122O000700073O00202O00070007000A4O0006000200012O00B33O00017O000B3O0003023O005F47030D3O0044656C6574654368612O6E656C2O0103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030C3O0057616974466F724368696C64030A3O004368612O6E656C696E6703073O0044657374726F7903043O007761697401133O00123F000100013O00106C000100023O00123F000100013O0020DE00010001000200262A00010012000100030004A03O0012000100123F000100043O00203O010001000500202O00010001000600202O00020001000700202O00030002000800122O000500096O00030005000200202O00040003000A4O00040002000100122O0004000B6O00040001000100044O000200012O00B33O00017O001B3O0003023O005F4703073O006368612O6E656C2O0103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O0057616974026O00F03F03053O004D61676963027O004003113O00726571756573744368612O6E656C696E67030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B03043O0077616974013C3O00123F000100013O00106C000100023O00123F000100013O0020DE00010001000200262A0001003B000100030004A03O003B000100123F000100043O00201E2O010001000500202O00010001000600122O000200073O00122O000300043O00202O00030003000500202O0003000300084O000300046O00023O000400044O003600010020DE000700060009002610010700360001000A0004A03O0036000100062000060036000100010004A03O003600010020DE0007000600090020A200070007000B00202O00070007000C00202O00080001000900202O00080008000B00202O00080008000C4O00070007000800202O00070007000D00262O000700360001000E0004A03O003600010020DE00080006000900063501080025000100010004A03O002500010020DE00080006000F0020270008000800102O00140108000200022O002801093O00020030E20009001100124O000A3O000200302O000A0011001400102O000A0013000800102O00090013000A00122O000A00043O00205E010A000A001500122O000C00166O000A000C000200202O000A000A001700202O000A000A001800202O000A000A001900122O000C001A6O000D00096O000C000D6O000A3O000100066601020010000100020004A03O0010000100123F0002001B4O00220002000100010004A03O000200012O00B33O00017O00233O0003023O005F4703073O0050757368412O6C030A3O0035342O3238353930313203083O00496E7374616E63652O033O006E657703093O00416E696D6174696F6E030B3O00416E696D6174696F6E4964030D3O00726278612O73657469643A2O2F03043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030D3O004C6F6164416E696D6174696F6E03043O00506C6179030B3O0041646A75737453702O6564026O00F03F03043O0077616974027O00402O0103053O007061697273030A3O00476574506C617965727300030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403043O0050757368030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657201523O00123F000100013O00106C000100023O0012542O0100033O001254010200033O00123F000300043O0020DE000300030005001254010400064O0014010300020002001254010400084O000C010500024O007F00040004000500100601030007000400122O000400093O00202O00040004000A00202O00040004000B00202O00040004000C00202O00040004000D00202O00040004000E4O000600036O00040006000200202O00050004000F2O002C000500020001002027000500040010001254010700114O001000050007000100123F000500123O001254010600134O002C00050002000100123F000500013O0020DE00050005000200262A00050051000100140004A03O0051000100123F000500093O00201E01050005000A00202O00050005000B00122O000600153O00122O000700093O00202O00070007000A00202O0007000700164O000700086O00063O000800044O004C00010020DE000B000A000C002610010B004C000100170004A03O004C0001000620000A004C000100050004A03O004C00010020DE000B000A000C0020A2000B000B001800202O000B000B001900202O000C0005000C00202O000C000C001800202O000C000C00194O000B000B000C00202O000B000B001A00262O000B004C0001001B0004A03O004C00010020DE000C000A000C000635010C003F000100010004A03O003F00010020DE000C000A001C002027000C000C001D2O0014010C00020002001254010D001E4O0028010E3O000100106C000E0011000C00123F000F00093O0020F4000F000F001F00122O001100206O000F0011000200202O000F000F002100202O000F000F002200202O0010000F00234O0012000D6O0013000E6O0010001300010006660106002A000100020004A03O002A000100123F000600124O00220006000100010004A03O001C00012O00B33O00017O00033O0003043O0067616D65030A3O004765745365727669636503073O00506C617965727301083O00126E2O0100013O00202O00010001000200122O000300036O0001000300024O00025O0006EA00033O000100012O000C012O00014O00B33O00013O00013O00063O0003053O007061697273030A3O00476574506C617965727303053O006C6F77657203043O004E616D652O033O00737562026O00F03F01153O00123F000100014O007C01025O0020270002000200022O0059000200034O00A500013O00030004A03O0012000100202700063O00032O00AE00060002000200202O00070005000400202O0007000700034O00070002000200202O00070007000500122O000900066O000A8O0007000A000200062O00060012000100070004A03O001200012O00FF000500023O0006662O010006000100020004A03O000600012O00B33O00017O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O000E3O0003083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503053O004D61676963026O00F03F030A3O00426C2O6F6443686F6B65027O004003043O0067616D65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572011E3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001D000100010004A03O001D00012O007C2O0100014O000D2O01000100020006182O01001D00013O0004A03O001D00010020DE00020001000200202901020002000300202O00020002000400122O000300056O00043O000200302O00040006000700202O00050001000200102O00040008000500122O000500093O00202O00050005000A00122O0007000B6O00050007000200202O00050005000C00202O00050005000D00202O00060005000E4O000800036O000900046O0006000900012O00B33O00017O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O000D3O0003083O004973547970696E67026O00F03F03053O004D61676963027O0040030A3O0046697265436972636C6503093O0043686172616374657203043O0067616D65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B011E3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001D000100010004A03O001D00012O007C2O0100014O000D2O01000100020006182O01001D00013O0004A03O001D00012O002801023O00020030250102000200032O002801033O00020030250103000200050020DE00040001000600106C00030004000400106C00020004000300123F000300073O00205E01030003000800122O000500096O00030005000200202O00030003000A00202O00030003000B00202O00030003000C00122O0005000D6O000600026O000500066O00033O00012O00B33O00017O001C3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903053O00706169727303073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003A3O001287012O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0005000A3O00122O000600013O00202O00060006000200122O0008000B6O00060008000200202O00060006000C4O000600076O00053O000700044O001A00012O001C000A00043O0020E0000A000A000D0020DE000B0009000E2O00480104000A000B00066601050016000100020004A03O0016000100123F0005000F3O00205E0005000500104O00050001000200122O000600123O00202O00060006001300202O00060006001400102O00050011000600102O00050015000400302O00050016001700122O000600043O00202O00060006001800202O00080003001900202O00090003001A00202O00090009001B4O000A00056O0006000A000200062O0006003700013O0004A03O003700012O00B7000700013O0006EA00083O000100012O000C012O00063O00262A000700340001001C0004A03O003400010004A03O003700012O000C010900084O00220009000100010004A03O003100012O00B700076O00FF000700024O00B33O00013O00013O00083O0003053O00706169727303043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200153O00123F3O00013O0012C0000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O000100029O00000200044O001200012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050011000100010004A03O001100012O00B33O00014O00FF000400023O000666012O0009000100020004A03O000900012O00B33O00017O00063O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503073O004B6579446F776E03073O00436F2O6E656374020D3O001280000200013O00202O00020002000200202O00020002000300202O0002000200044O00020002000200202O00020002000500202O0002000200060006EA00043O000100032O000C017O007C017O000C012O00014O00100002000400012O00B33O00013O00013O00033O0003083O004973547970696E6703053O007072696E7403113O00506C61796572206E6F7420666F756E642E01133O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O0012000100010004A03O001200012O007C2O0100014O000D2O01000100020006182O01000F00013O0004A03O000F00012O007C010200024O000C010300014O002C0002000200010004A03O0012000100123F000200023O001254010300034O002C0002000200012O00B33O00017O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00103O0003083O004973547970696E6703043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503053O004D61676963026O00F03F03093O004578706C6F73696F6E027O00402O033O0048697403013O0070030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572011F3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001E000100010004A03O001E00012O007C2O0100014O000D2O010001000200123F000200023O0020C600020002000300202O00020002000400202O0002000200054O00020002000200122O000300066O00043O000200302O00040007000800202O00050002000A00202O00050005000B00102O00040009000500122O000500023O00202O00050005000C00122O0007000D6O00050007000200202O00050005000E00202O00050005000F00202O0006000500104O000800036O000900046O0006000900012O00B33O00017O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O000F3O0003083O004973547970696E6703043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F757365026O00F03F03053O004D61676963027O004003073O00536E6170412O6C030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B011F3O00123F000100013O0006182O01000400013O0004A03O000400012O00B33O00014O007C2O015O0006BE3O001E000100010004A03O001E00012O007C2O0100014O003500010001000200122O000200023O00202O00020002000300202O00020002000400202O0002000200054O0002000200024O00033O000200302O0003000600074O00043O000100302O00040006000900102O00030008000400122O000400023O00202O00040004000A00122O0006000B6O00040006000200202O00040004000C00202O00040004000D00202O00040004000E00122O0006000F6O000700036O000600076O00043O00012O00B33O00017O00093O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00776F726B737061636503043O004C69766503043O004E616D65030B3O00492O6D6F7274616C69747903043O00436F2O6D03073O0044657374726F79000D3O00123F3O00013O0020DE5O00020020DE5O000300123F000100013O0020DE0001000100040020DE0001000100050020DE00023O00062O00712O01000100020020DE0001000100070020DE0001000100080020270001000100092O002C0001000200012O00B33O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030E3O00436861726163746572412O64656403043O005761697403083O00496E7374616E63652O033O006E657703063O00466F6C64657203043O004E616D6503093O00532O6547686F73747303063O00506172656E7403043O0077616974026O33D33F030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503153O00532O65204F746865722053696465206C6F6164656403043O005465787403123O004D616465206279207469736E6F616823302E001D3O00125C3O00013O00206O000200206O000300202O00013O000400062O00010009000100010004A03O000900010020DE00013O00050020270001000100062O00142O010002000200123F000200073O0020DE000200020008001254010300094O00140102000200020030250102000A000B00106C0002000C000100123F0003000D3O00120D0004000E6O00030002000100122O000300013O00202O00030003000F00122O000500106O00030005000200202O00030003001100122O000500126O00063O000200302O0006001300140030250106001500162O00100003000600012O00B33O00017O00143O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203093O00576F726B737061636503043O004C697665030A3O0047657453657276696365030A3O0052756E5365727669636503043O007461736B03043O0077616974027O0040030E3O0046696E6446697273744368696C64030B3O005665727661696E426F647903043O004E616D6503053O004D61676963026O00F03F03113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572003B3O00123F3O00013O0020DE5O00020020DE5O00030020DE00013O000400123F000200013O0020DE0002000200050020DE00020002000600123F000300013O002027000300030007001254010500084O002A0103000500022O00B700045O00123F000500093O0020DE00050005000A0012540106000B4O00140105000200020006180105003A00013O0004A03O003A000100123F000500013O0020DE0005000500020020DE0005000500030020DE00050005000400202700050005000C0012540107000D4O002A0105000700020006350105000C000100010004A03O000C000100123F000500013O0020DE0005000500050020DE00050005000600202700050005000C00123F000700013O0020DE0007000700020020DE0007000700030020DE0007000700040020DE00070007000E2O002A0105000700020006180105000C00013O0004A03O000C00010012540105000F4O002801063O000200302501060010000D00123F000700013O0020DE0007000700020020DE0007000700030020DE00070007000400106C0006000B000700123F000700013O0020F400070007000700122O000900116O00070009000200202O00070007001200202O00070007001300202O0008000700144O000A00056O000B00066O0008000B00010004A03O000C00012O00B33O00017O002F3O0003043O0067616D65030A3O004765745365727669636503093O00576F726B737061636503113O00437573746F6D20416E696D6174696F6E73030B3O00416820736861206C616E6103073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030D3O004C6F6164416E696D6174696F6E03043O00506C6179030B3O0041646A75737453702O6564026O00F03F03043O007761697403053O004D61676963027O004003053O004D6F747573010003113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B03053O006D6F74757303083O006D612O737061696E03073O006B6F6C6D6F7665026O00344003053O007061697273030A3O00476574506C61796572730003043O004865616403083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403093O004578706C6F73696F6E03103O0048756D616E6F6964522O6F745061727403063O00434672616D6503013O0070030A3O00552O706572546F72736F03043O005075736803083O00427265616B4C656703063O0046722O657A65026O00184003193O00476574506C6179696E67416E696D6174696F6E547261636B7303043O0053746F700042012O001291012O00013O00206O000200122O000200038O0002000200206O000400206O000500122O000100013O00202O00010001000600202O00010001000700202O00010001000800202O00010001000900202O00010001000A4O00038O00010003000200202O00020001000B4O00020002000100202O00020001000C00122O0004000D6O00020004000100122O0002000E3O00122O0003000D6O0002000200014O00023O000200302O0002000D000F4O00033O000200302O0003000D001100302O00030010001200102O00020010000300122O000300013O00202O00030003000200122O000500136O00030005000200202O00030003001400202O00030003001500202O00030003001600122O000500176O000600026O000500066O00033O000100122O000300013O00202O00030003000200122O000500036O00030005000200202O00030003000400202O00030003001800122O000400013O00202O00040004000600202O00040004000700202O00040004000800202O00040004000900202O00040004000A4O000600036O00040006000200202O00050004000B4O00050002000100202O00050004000C00122O0007000D6O00050007000100122O0005000E3O00122O0006000D6O00050002000100122O000500013O00202O00050005000200122O000700036O00050007000200202O00050005000400202O00050005001900122O000600013O00202O00060006000600202O00060006000700202O00060006000800202O00060006000900202O00060006000A4O000800056O00060008000200202O00070006000B4O00070002000100202O00070006000C00122O0009000D6O00070009000100123F000700013O00208E00070007000200122O000900036O00070009000200202O00070007000400202O00070007001A00122O000800013O00202O00080008000600202O00080008000700202O00080008000800202O00080008000900202O00080008000A4O000A00076O0008000A000200202O00090008000B4O00090002000100202O00090008000C00122O000B000D6O0009000B000100122O0009000D3O00122O000A001B3O00122O000B000D3O00042O0009002F2O0100123F000D00013O00201E010D000D000600202O000D000D000700122O000E001C3O00122O000F00013O00202O000F000F000600202O000F000F001D4O000F00106O000E3O001000044O009A00010020DE0013001200080026100113009A0001001E0004A03O009A00010006200012009A0001000D0004A03O009A00010020DE0013001200080020A200130013001F00202O00130013002000202O0014000D000800202O00140014001F00202O0014001400204O00130013001400202O00130013002100262O0013009A000100220004A03O009A00010020DE00140012000800063501140086000100010004A03O008600010020DE0014001200230020270014001400242O00140114000200022O002801153O00020030130115000D000F4O00163O000200302O0016000D002500202O00170014002600202O00170017002700202O00170017002800102O00160010001700102O00150010001600122O001600013O00205E01160016000200122O001800136O00160018000200202O00160016001400202O00160016001500202O00160016001600122O001800176O001900156O001800196O00163O0001000666010E0071000100020004A03O0071000100123F000E00013O00201E010E000E000600202O000E000E000700122O000F001C3O00122O001000013O00202O00100010000600202O00100010001D4O001000116O000F3O001100044O00C800010020DE001400130008002610011400C80001001E0004A03O00C80001000620001300C80001000E0004A03O00C800010020DE0014001300080020A200140014002900202O00140014002000202O0015000E000800202O00150015002900202O0015001500204O00140014001500202O00140014002100262O001400C8000100220004A03O00C800010020DE001500130008000635011500BB000100010004A03O00BB00010020DE0015001300230020270015001500242O00140115000200020012540116002A4O002801173O000100106C0017000D001500123F001800013O0020F400180018000200122O001A00136O0018001A000200202O00180018001400202O00180018001500202O0019001800164O001B00166O001C00176O0019001C0001000666010F00A6000100020004A03O00A6000100123F000F00013O00201E010F000F000600202O000F000F000700122O0010001C3O00122O001100013O00202O00110011000600202O00110011001D4O001100126O00103O001200044O00FA00010020DE001500140008002610011500FA0001001E0004A03O00FA0001000620001400FA0001000F0004A03O00FA00010020DE0015001400080020A200150015002900202O00150015002000202O0016000F000800202O00160016002900202O0016001600204O00150015001600202O00150015002100262O001500FA000100220004A03O00FA00010020DE001600140008000635011600E9000100010004A03O00E900010020DE0016001400230020270016001600242O00140116000200022O002801173O00020030E20017000D000F4O00183O000200302O0018000D002B00102O00180010001600102O00170010001800122O001800013O00205E01180018000200122O001A00136O0018001A000200202O00180018001400202O00180018001500202O00180018001600122O001A00176O001B00176O001A001B6O00183O0001000666011000D4000100020004A03O00D4000100123F001000013O00201E01100010000600202O00100010000700122O0011001C3O00122O001200013O00202O00120012000600202O00120012001D4O001200136O00113O001300044O002C2O010020DE0016001500080026100116002C2O01001E0004A03O002C2O010006200015002C2O0100100004A03O002C2O010020DE0016001500080020A200160016002900202O00160016002000202O00170010000800202O00170017002900202O0017001700204O00160016001700202O00160016002100262O0016002C2O0100220004A03O002C2O010020DE0017001500080006350117001B2O0100010004A03O001B2O010020DE0017001500230020270017001700242O00140117000200022O002801183O00020030E20018000D000F4O00193O000200302O0019000D002C00102O00190010001700102O00180010001900122O001900013O00205E01190019000200122O001B00136O0019001B000200202O00190019001400202O00190019001500202O00190019001600122O001B00176O001C00186O001B001C6O00193O0001000666011100062O0100020004A03O00062O0100043601090067000100123F0009000E3O00120A000A002D6O00090002000100122O000900013O00202O00090009000600202O00090009000700202O00090009000800202O00090009000900202O000A0009002E4O000A0002000200122O000B001C6O000C000A6O000B0002000D00044O003F2O010020270010000F002F2O002C001000020001000666010B003D2O0100020004A03O003D2O012O00B33O00017O001B3O0003043O0067616D6503073O00506C617965727303043O006D61746803063O0072616E646F6D026O00F03F030B3O004765744368696C6472656E03053O007072696E7403043O004E616D65030C3O00207761732063686F73656E2103093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503013O0070030B3O004C6F63616C506C617965722O033O006E657703043O0077616974026O00E03F030B3O005061696E496E666C696374027O00400100026O005940030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B003A3O00126A3O00013O00206O000200122O000100033O00202O00010001000400122O000200053O00202O00033O00064O0003000200024O000300036O00010003000200202O00023O00062O00140102000200022O007500020002000100122O000300073O00202O00040002000800122O000500096O0004000400054O00030002000100202O00030002000A00202O00030003000B00202O00030003000C00202O00030003000D00123F000400013O0020DE0004000400020020DE00040004000E0020DE00040004000A0020DE00040004000B00123F0005000C3O0020DE00050005000F2O000C010600034O001401050002000200106C0004000C000500123F000400103O001254010500114O002C0004000200012O002801043O00020030250104000500122O002801053O00020020DE00060002000A00106C00050005000600302501050013001400106C000400130005001254010500053O001254010600153O001254010700053O00045C01050039000100123F000900013O00205E01090009001600122O000B00176O0009000B000200202O00090009001800202O00090009001900202O00090009001A00122O000B001B6O000C00046O000B000C6O00093O00010004360105002D00012O00B33O00017O00183O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465026O005940030E3O00436861726163746572412O64656403043O0057616974026O00F03F030B3O005061696E496E666C696374027O00400100026O004940030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00383O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O003500010020DE00060005000600261001060035000100070004A03O003500010006200005003500013O0004A03O003500010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O000600350001000B0004A03O003500010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200022O002801083O00020030250108000E000F2O002801093O000200106C0009000E000700302501090010001100106C0008001000090012540109000E3O001254010A00123O001254010B000E3O00045C01090035000100123F000D00013O00205E010D000D001300122O000F00146O000D000F000200202O000D000D001500202O000D000D001600202O000D000D001700122O000F00186O001000086O000F00106O000D3O00010004360109002900010006662O01000A000100020004A03O000A00012O00B33O00017O00143O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E69747564650200E0FFA1941A6D42030E3O00436861726163746572412O64656403043O005761697403043O0050757368026O00F03F030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572002F3O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O002C00010020DE0006000500060026100106002C000100070004A03O002C00010006200005002C00013O0004A03O002C00010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O0006002C0001000B0004A03O002C00010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200020012540108000E4O002801093O000100106C0009000F000700123F000A00013O0020F4000A000A001000122O000C00116O000A000C000200202O000A000A001200202O000A000A001300202O000B000A00144O000D00086O000E00096O000B000E00010006662O01000A000100020004A03O000A00012O00B33O00017O00193O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F03093O004578706C6F73696F6E027O004003103O0048756D616E6F6964522O6F745061727403063O00434672616D6503013O0070030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200333O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O003000010020DE00060005000600261001060030000100070004A03O003000010006200005003000013O0004A03O003000010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O000600300001000B0004A03O003000010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200020012540108000E4O00D200093O000200302O0009000F001000202O000A0007001200202O000A000A001300202O000A000A001400102O00090011000A00122O000A00013O0020F4000A000A001500122O000C00166O000A000C000200202O000A000A001700202O000A000A001800202O000B000A00194O000D00086O000E00096O000B000E00010006662O01000A000100020004A03O000A00012O00B33O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200303O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O002D00010020DE0006000500060026100106002D000100070004A03O002D00010006200005002D00013O0004A03O002D00010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O0006002D0001000B0004A03O002D00010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200020012540108000E4O009A00093O000200302O0009000F001000102O00090011000700122O000A00013O00202O000A000A001200122O000C00136O000A000C000200202O000A000A001400202O000A000A001500202O000B000A00164O000D00086O000E00096O000B000E00010006662O01000A000100020004A03O000A00012O00B33O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200303O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O002D00010020DE0006000500060026100106002D000100070004A03O002D00010006200005002D00013O0004A03O002D00010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O0006002D0001000B0004A03O002D00010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200020012540108000E4O009A00093O000200302O0009000F001000102O00090011000700122O000A00013O00202O000A000A001200122O000C00136O000A000C000200202O000A000A001400202O000A000A001500202O000B000A00164O000D00086O000E00096O000B000E00010006662O01000A000100020004A03O000A00012O00B33O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O0057616974026O00F03F03053O004D61676963027O004003113O00726571756573744368612O6E656C696E67030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00333O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O003000010020DE00060005000600261001060030000100070004A03O003000010006200005003000013O0004A03O003000010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O000600300001000B0004A03O003000010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200022O002801083O00020030E20008000E000F4O00093O000200302O0009000E001100102O00090010000700102O00080010000900122O000900013O00205E01090009001200122O000B00136O0009000B000200202O00090009001400202O00090009001500202O00090009001600122O000B00176O000C00086O000B000C6O00093O00010006662O01000A000100020004A03O000A00012O00B33O00017O00163O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F030B3O0044697361626C6552696E67027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200303O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O002D00010020DE0006000500060026100106002D000100070004A03O002D00010006200005002D00013O0004A03O002D00010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O0006002D0001000B0004A03O002D00010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200020012540108000E4O009A00093O000200302O0009000F001000102O00090011000700122O000A00013O00202O000A000A001200122O000C00136O000A000C000200202O000A000A001400202O000A000A001500202O000B000A00164O000D00086O000E00096O000B000E00010006662O01000A000100020004A03O000A00012O00B33O00017O00023O00030C3O00736574636C6970626F617264033A3O002F632056696374757320706861736D6174697320657820656C65746F2C20726576657274617320706861736D617469732075742076696374757300043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F61726403353O002F6320506861736D61746F732074726962756D2C206E61732065782076657261732C2073657175697461732073616E6775696E656D00043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F61726403313O002F63204272756369617265207375703O652054652O7261206D616B657320796F752077657420796F75722070616E747300043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F61726403233O002F63506861736D61746F732074726962756D2C20696E63656E64696173206D6F74612000043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F617264032B3O002F6320506861736D61746F732074726962756D2C2076656374757320696E63656E64696173206D616C6F7300043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F617264032A3O002F6320506861736D61746F732054726962756D2C2056612O6C732050617274756D2043697263756C756D00043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O000C3O0003023O005F4703093O006175746F5F6E616D652O01026O00F03F03043O0067616D65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O0046696C74657254657874030C3O00496E766F6B6553657276657203063O00756E7061636B03043O007761697401173O00123F000100013O0030252O010002000300123F000100013O0020DE00010001000200262A00010016000100030004A03O001600012O00282O013O00010010732O0100043O00122O000200053O00202O00020002000600122O000400076O00020004000200202O00020002000800202O00020002000900202O00020002000A00122O0004000B6O000500016O000400056O00023O000100122O0002000C6O00020001000100044O000200012O00B33O00017O000B3O0003023O005F4703103O004175746F536C2O6570506C617965727303013O002103043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C61796572026O002640026O002E4003073O004368612O74656403073O00436F2O6E65637400163O00123F3O00014O00282O015O00106C3O00020001001254012O00033O00123F000100043O002027000100010005001254010300064O002A2O01000300020020DE0001000100070006EA00023O000100012O000C012O00013O001254010300083O001254010400093O0020DE00050001000A00202700050005000B0006EA00070001000100042O000C012O00034O000C017O000C012O00024O000C012O00044O00100005000700012O00B33O00013O00023O000E3O0003053O006C6F7765722O033O00612O6C03053O00706169727303043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303053O007461626C6503063O00696E7365727403063O006F746865727303043O004E616D6503023O006D652O033O00737562026O00F03F01634O00282O015O00202700023O00012O001401020002000200262A00020016000100020004A03O0016000100123F000300033O0012C0000400043O00202O00040004000500122O000600066O00040006000200202O0004000400074O000400056O00033O000500044O0013000100123F000800083O0020DE0008000800092O000C010900014O000C010A00074O00100008000A00010006660103000E000100020004A03O000E00010004A03O0061000100262A0002002E0001000A0004A03O002E000100123F000300033O0012C0000400043O00202O00040004000500122O000600066O00040006000200202O0004000400074O000400056O00033O000500044O002B00010020DE00080007000B2O007C01095O0020DE00090009000B0006200008002B000100090004A03O002B000100123F000800083O0020DE0008000800092O000C010900014O000C010A00074O00100008000A000100066601030021000100020004A03O002100010004A03O0061000100262A000200460001000C0004A03O0046000100123F000300033O0012C0000400043O00202O00040004000500122O000600066O00040006000200202O0004000400074O000400056O00033O000500044O004300010020DE00080007000B2O007C01095O0020DE00090009000B0006BE00080043000100090004A03O0043000100123F000800083O0020DE0008000800092O000C010900014O000C010A00074O00100008000A000100066601030039000100020004A03O003900010004A03O0061000100123F000300033O0012C0000400043O00202O00040004000500122O000600066O00040006000200202O0004000400074O000400056O00033O000500044O005F00010020DE00080007000B0020B00008000800014O00080002000200202O00080008000D00122O000A000E6O000B8O0008000B000200202O00093O00014O00090002000200062O0008005F000100090004A03O005F000100123F000800083O0020DE0008000800092O000C010900014O000C010A00074O00100008000A00010006660103004F000100020004A03O004F00012O00FF000100024O00B33O00017O00183O0003063O00737472696E672O033O00737562026O00F03F030A3O004175746F536C2O657020030A3O004175746F736C2O657020030A3O006175746F736C2O657020030A3O004155746F736C2O657020030A3O004155544F534C2O455020030A3O004155746F536C2O65702003053O00706169727303023O005F4703103O004175746F536C2O6570506C617965727303043O004E616D652O0103093O00636F726F7574696E6503063O00726573756D6503063O00637265617465030D3O0053746F704175746F536C2O6570030D3O0073746F704175746F736C2O6570030D3O0073746F706175746F736C2O6570030D3O0053546F704175746F536C2O6570030D3O0053544F504155544F534C2O4550030D3O0073746F704175746F536C2O6570010001B13O001240000100013O00202O0001000100024O00025O00122O000300036O00048O0001000400024O000200013O00122O000300046O00020002000300062O00010042000100020004A03O0042000100123F000100013O0020892O01000100024O00025O00122O000300036O00048O0001000400024O000200013O00122O000300056O00020002000300062O00010042000100020004A03O0042000100123F000100013O0020892O01000100024O00025O00122O000300036O00048O0001000400024O000200013O00122O000300066O00020002000300062O00010042000100020004A03O0042000100123F000100013O0020892O01000100024O00025O00122O000300036O00048O0001000400024O000200013O00122O000300076O00020002000300062O00010042000100020004A03O0042000100123F000100013O0020892O01000100024O00025O00122O000300036O00048O0001000400024O000200013O00122O000300086O00020002000300062O00010042000100020004A03O0042000100123F000100013O0020DE0001000100022O000C01025O001254010300034O007C01046O002A2O01000400022O007C010200013O001254010300094O007F0002000200030006BE0001005D000100020004A03O005D000100123F0001000A4O009D000200023O00122O000300013O00202O0003000300024O00048O00055O00202O0005000500034O000300056O00028O00013O000300044O005A000100123F0006000B3O0020DE00060006000C0020DE00070005000D00205501060007000E00123F0006000F3O0020DE00060006001000123F0007000F3O0020DE0007000700110006EA00083O000100012O000C012O00054O0059000700084O006701063O00012O00A800045O0006662O01004D000100020004A03O004D00010004A03O00B0000100123F000100013O0020892O01000100024O00025O00122O000300036O000400036O0001000400024O000200013O00122O000300126O00020002000300062O0001009F000100020004A03O009F000100123F000100013O0020892O01000100024O00025O00122O000300036O000400036O0001000400024O000200013O00122O000300136O00020002000300062O0001009F000100020004A03O009F000100123F000100013O0020892O01000100024O00025O00122O000300036O000400036O0001000400024O000200013O00122O000300146O00020002000300062O0001009F000100020004A03O009F000100123F000100013O0020892O01000100024O00025O00122O000300036O000400036O0001000400024O000200013O00122O000300156O00020002000300062O0001009F000100020004A03O009F000100123F000100013O0020892O01000100024O00025O00122O000300036O000400036O0001000400024O000200013O00122O000300166O00020002000300062O0001009F000100020004A03O009F000100123F000100013O0020DE0001000100022O000C01025O001254010300034O007C010400034O002A2O01000400022O007C010200013O001254010300174O007F0002000200030006BE000100B0000100020004A03O00B0000100123F0001000A4O009D000200023O00122O000300013O00202O0003000300024O00048O000500033O00202O0005000500034O000300056O00028O00013O000300044O00AE000100123F0006000B3O0020DE00060006000C0020DE00070005000D0020550106000700180006662O0100AA000100020004A03O00AA00012O00B33O00013O00013O00133O0003023O005F4703103O004175746F536C2O6570506C617965727303043O004E616D6503043O007461736B03043O0077616974026O001C4003043O0067616D6503093O00576F726B737061636503043O004C697665030E3O0046696E6446697273744368696C6403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200333O00123F3O00013O0020AB5O00024O00015O00202O0001000100038O000100064O003200013O0004A03O0032000100123F3O00043O0020DE5O00050012542O0100064O002C3O0002000100123F3O00013O0020AB5O00024O00015O00202O0001000100038O000100064O003200013O0004A03O0032000100123F3O00073O0020DE5O00080020DE5O00090020275O000A2O007C01025O0020DE0002000200032O002A012O00020002000618012O003200013O0004A03O00320001001254012O000B4O00EE00013O000200302O0001000C000D00122O000200073O00202O00020002000800202O0002000200094O00035O00202O0003000300034O00020002000300102O0001000E000200122O000200073O00202O00020002000F00122O000400106O00020004000200202O00020002001100202O00020002001200202O0003000200134O00058O000600016O00030006000100046O00010004A03O003200010004A05O00012O00B33O00017O000C3O0003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203043O004E616D6503043O005061727403093O00576F726B737061636503043O004C69766503083O00496E7374616E63652O033O006E6577030C3O0057616974466F724368696C6403073O0056616D7069726500193O00123F3O00013O0020275O0002001254010200034O002A012O000200020020DE5O00040020DE5O00050012542O0100063O00123F000200013O0020DE0002000200070020DE0002000200082O0071010200023O001280010300093O00202O00030003000A4O000400016O000500026O00030005000200122O000400013O00202O00040004000700202O0004000400084O000400043O00202O00040004000B001254010600064O002A01040006000200302501040005000C2O00B33O00017O000C3O0003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203043O004E616D6503043O005061727403093O00576F726B737061636503043O004C69766503083O00496E7374616E63652O033O006E6577030C3O0057616974466F724368696C6403083O0057657265776F6C6600193O00123F3O00013O0020275O0002001254010200034O002A012O000200020020DE5O00040020DE5O00050012542O0100063O00123F000200013O0020DE0002000200070020DE0002000200082O0071010200023O001280010300093O00202O00030003000A4O000400016O000500026O00030005000200122O000400013O00202O00040004000700202O0004000400084O000400043O00202O00040004000B001254010600064O002A01040006000200302501040005000C2O00B33O00017O000B3O0003043O0067616D65030A3O004765745365727669636503073O00506C6179657273030B3O004C6F63616C506C6179657203043O004E616D6503093O00576F726B737061636503043O004C697665030C3O0057616974466F724368696C6403073O0056616D7069726503073O0044657374726F7903083O0057657265776F6C6600193O00127A012O00013O00206O000200122O000200038O0002000200206O000400206O000500122O000100013O00202O00010001000600202O0001000100074O000100013O00200F2O010001000800122O000300096O00010003000200202O00010001000A4O00010002000100123F000100013O0020DE0001000100060020DE0001000100072O00712O0100013O00200F2O010001000800122O0003000B6O00010003000200202O00010001000A4O0001000200012O00B33O00017O00033O0003023O005F4703093O006175746F5F6E616D65012O00033O00123F3O00013O003025012O000200032O00B33O00017O00103O0003043O0067616D6503093O00576F726B737061636503043O004C69766503053O007061697273030B3O004765744368696C6472656E03073O00506C617965727303163O00476574506C6179657246726F6D436861726163746572030E3O0046696E6446697273744368696C6403083O0048756D616E6F6964030B3O004C6F63616C506C6179657203083O004F726967696E616C030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005374616B65030A3O004669726553657276657200283O00123F3O00013O0020DE5O00020020DE5O000300123F000100043O00202700023O00052O0059000200034O00A500013O00030004A03O0025000100123F000600013O00206101060006000600202O0006000600074O000800056O00060008000200202O00070005000800122O000900096O00070009000200062O0007002500013O0004A03O0025000100123F000700013O0020DE0007000700060020DE00070007000A0006BE00060019000100070004A03O001900012O00B33O00013O0004A03O002500012O000C010700053O0012540108000B3O00123F000900013O0020F400090009000C00122O000B000D6O0009000B000200202O00090009000E00202O00090009000F00202O000A000900104O000C00076O000D00086O000A000D00010006662O010008000100020004A03O000800012O00B33O00017O000A3O0003043O0067616D6503073O00436F7265477569030E3O0046696E6446697273744368696C6403093O005363722O656E477569026O00F03F026O00084003073O0044657374726F79030A3O006C6F6164737472696E6703073O00482O7470476574034F3O00682O7470733A2O2F7261772E67697468756275736572636F6E74656E742E636F6D2F426F694469616E6472652F5468654C75612F6D61696E2F544845253230464C4F2O5049455354253230464C4F5000173O001209012O00013O00206O000200206O000300122O000200048O0002000200064O000E00013O0004A03O000E00010012542O0100053O001254010200063O001254010300053O00045C2O01000E000100202700053O00072O002C0005000200010004362O01000B000100123F000100083O001242010200013O00202O00020002000900122O0004000A6O000500016O000200056O00013O00024O0001000100016O00017O000A3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203093O00576F726B737061636503043O004C69766503043O0048656164030E3O0046696E6446697273744368696C6403083O00557365726E616D6503073O0044657374726F7900143O0012E33O00013O00206O000200206O000300202O00013O000400122O000200013O00202O00020002000500202O00020002000600202O00030001000700202O00030003000800122O000500094O002A0103000500020006180103001300013O0004A03O001300010020DE00030001000700200F01030003000800122O000500096O00030005000200202O00040003000A4O0004000200012O00B33O00017O00143O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203043O0077616974026O002240030A3O0053656C66536970686F6E027O004003043O00462O656403073O0056616D70697265026O00104003043O004865616C00463O0012503O00013O00206O000200206O000300202O00013O000400122O000200056O00033O000100302O00030006000700122O000400013O00202O00040004000800122O000600096O00040006000200202O00040004000A00202O00040004000B00202O00050004000C4O000700026O000800036O00050008000100122O0005000D3O00122O000600066O00050002000100122O000500063O00122O0006000E3O00122O000700063O00042O0005002300010012540109000F3O00120E010A00013O00202O000A000A000800122O000C00096O000A000C000200202O000A000A000A00202O000A000A000B00202O000B000A000C4O000D00096O000B000D0001000436010500180001001254010500063O001254010600103O001254010700063O00045C010500350001001254010900114O0028010A3O000100106C000A0006000100123F000B00013O0020F4000B000B000800122O000D00096O000B000D000200202O000B000B000A00202O000B000B001200202O000C000B000C4O000E00096O000F000A6O000C000F000100043601050027000100123F0005000D3O001200010600136O00050002000100122O000500146O00063O000100102O00060006000100122O000700013O00202O00070007000800122O000900096O00070009000200202O00070007000A00202O00070007001200202O00080007000C4O000A00056O000B00066O0008000B00016O00017O00193O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O00436861726163746572030E3O00436861726163746572412O64656403043O0057616974030E3O0046696E6446697273744368696C6403063O00416374696E6703073O0044657374726F7903083O0048756D616E6F696403073O00726167646F2O6C03053O0056616C75652O0103043O007461736B03043O00776169740100026O33D33F030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503103O00556E476C69746368206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00383O00125C3O00013O00206O000200206O000300202O00013O000400062O00010009000100010004A03O000900010020DE00013O00050020270001000100062O00142O0100020002002027000200010007001254010400084O002A0102000400020006180102001F00013O0004A03O001F0001002027000200010007001294000400086O00020004000200202O0002000200094O00020002000100122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000A00202O00020002000B00302O0002000C000D00122O0003000E3O00202O00030003000F4O00030001000100302O0002000C001000044O002A000100123F000200013O0020DE0002000200020020DE0002000200030020DE0002000200040020DE00020002000A0020DE00020002000B0030250102000C000D00123F0003000E3O0020DE00030003000F2O00220003000100010030250102000C001000123F0002000F3O00120D000300116O00020002000100122O000200013O00202O00020002001200122O000400136O00020004000200202O00020002001400122O000400156O00053O000200302O0005001600170030250105001800192O00100002000500012O00B33O00017O00063O0003043O0067616D65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O005265737061776E030A3O004669726553657276657200093O00123F3O00013O0020275O0002001254010200034O002A012O000200020020DE5O00040020DE5O000500202700013O00062O002C0001000200012O00B33O00017O000E3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403083O004765744D6F757365030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303073O005265737061776E030A3O004669726553657276657203043O007761697403053O004D6F72706803063O004D6F7274616C001B3O00123F3O00013O0020DE5O00020020DE5O00030020DE00013O00040020DE00020001000500202700033O00062O001401030002000200123F000400013O002027000400040007001254010600084O002A0104000600020020DE0004000400090020DE00040004000A00202700050004000B2O002C00050002000100123F0005000C4O002200050001000100123F000500013O002027000500050007001254010700084O002A0105000700020020DE0005000500090020DE00050005000D00202700060005000B0012540108000E4O00100006000800012O00B33O00017O00203O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00107440026O001CC0025O0090794003043O0077616974026O00E03F03043O004E616D6503043O004865616403083O00416E63686F7265642O01029A5O99C93F0100030B3O00427265616B4A6F696E7473025O003071C0026O000840025O0020674003073O00566563746F7233028O0003053O0064656C6179026O00F03F03063O00697061697273030E3O0047657444657363656E64616E74732O033O0049734103083O00426173655061727403083O0056656C6F63697479030B3O00526F7456656C6F63697479005E3O0012643O00013O00206O000200206O000300122O000100013O00202O00010001000200202O00010001000300202O00010001000400202O00010001000500122O000200063O00202O00020002000700122O000300083O00122O000400093O00122O0005000A6O00020005000200102O00010006000200122O0001000B3O00122O0002000C6O00010002000100122O000100013O00202O00010001000200202O00023O000D4O00010001000200202O00010001000400202O00010001000E00302O0001000F001000122O0001000B3O00122O000200116O00010002000100122O000100013O00202O00010001000200202O00023O000D4O00010001000200202O00010001000400202O00010001000E00302O0001000F001200122O0001000B3O00122O0002000C6O00010002000100202O00013O000400202O0001000100134O00010002000100122O0001000B3O00122O0002000C6O00010002000100122O000100013O00202O00010001000200202O00010001000300202O00010001000400202O00010001000500122O000200063O00202O00020002000700122O000300143O00122O000400153O00122O000500166O00020005000200102O00010006000200122O000100013O00202O00010001000200202O0001000100034O00025O00122O000300173O00202O00030003000700122O000400183O00122O000500183O00122O000600186O00030006000200122O000400193O00122O0005001A3O0006EA00063O000100012O000C012O00024O00100004000600010006350102005D000100010004A03O005D000100123F0004001B3O0020DE00050001000400202700050005001C2O0059000500064O00A500043O00060004A03O005800010020DE00090008001D2O000C010A00083O001254010B001E4O002A0109000B00020006180109005800013O0004A03O005800012O000C010900033O00106C00080020000300106C0008001F00090006660104004F000100020004A03O004F000100123F0004000B4O00220004000100010004A03O004700012O00B33O00013O00018O00034O00B73O00014O00898O00B33O00017O000B3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203043O007461736B03043O0077616974030E3O0046696E6446697273744368696C6403073O005374616D696E612O033O004D617803053O0056616C7565026O00694000153O00123F3O00013O0020DE5O00020020DE5O00030020DE00013O000400123F000200053O0020DE0002000200062O000D0102000100020006180102001400013O0004A03O00140001002027000200010007001254010400084O002A0102000400020006180102000400013O0004A03O00040001002027000200010007001213000400086O00020004000200202O00030002000900302O0002000A000B00044O000400012O00B33O00017O00053O00030C3O00736574636C6970626F617264037C3O000A8O206C6F63616C2054656C65706F727453657276696365203D2067616D653A47657453657276696365282254656C65706F72745365727669636522290A4O2054656C65706F7274536572766963653A54656C65706F7274546F506C616365496E7374616E636528343735343733363335302C2203043O0067616D6503053O004A6F624964031C3O00222C2067616D652E506C61796572732E4C6F63616C506C617965722900083O001260012O00013O00122O000100023O00122O000200033O00202O00020002000400122O000300056O0001000100036O000200016O00017O00103O0003073O00737065616B657203093O0043686172616374657203163O0046696E6446697273744368696C64576869636849734103083O0048756D616E6F696403063O0069706169727303093O00776F726B7370616365030B3O004765744368696C6472656E2O033O00497341030C3O004261636B7061636B4974656D030E3O0046696E6446697273744368696C6403063O0048616E646C6503093O004571756970542O6F6C030D3O0067726162742O6F6C7346756E63030A3O00446973636F2O6E656374030A3O004368696C64412O64656403073O00436F2O6E656374002B3O0012A93O00013O00206O000200206O000300122O000200048O0002000200122O000100053O00122O000200063O00202O0002000200074O000200036O00013O00030004A03O001C000100123F000600013O0020DE0006000600020006180106001C00013O0004A03O001C0001002027000600050008001254010800094O002A0106000800020006180106001C00013O0004A03O001C000100202700060005000A0012540108000B4O002A0106000800020006180106001C00013O0004A03O001C000100202700063O000C2O000C010800054O00100006000800010006662O01000B000100020004A03O000B000100123F0001000D3O0006182O01002400013O0004A03O0024000100123F0001000D3O00202700010001000E2O002C00010002000100123F000100063O0020DE00010001000F00202700010001001000022301036O002A2O010003000200122F2O01000D4O00B33O00013O00013O00093O0003073O00737065616B657203093O004368617261637465722O033O00497341030C3O004261636B7061636B4974656D030E3O0046696E6446697273744368696C6403063O0048616E646C65030C3O0057616974466F724368696C6403083O0048756D616E6F696403093O004571756970542O6F6C01173O00123F000100013O0020DE0001000100020006182O01001600013O0004A03O0016000100202700013O0003001254010300044O002A2O01000300020006182O01001600013O0004A03O0016000100202700013O0005001254010300064O002A2O01000300020006182O01001600013O0004A03O0016000100123F000100013O0020702O010001000200202O00010001000700122O000300086O00010003000200202O0001000100094O00038O0001000300012O00B33O00017O001C3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577026O005140026O001840025O008047C003043O0077616974026O00E03F025O00805AC0026O002240025O00804640026O0080C0026O000840025O00406640025O00607EC0026O001440025O00C06D40025O00F07EC0026O002C40025O001070C0026O003AC0025O008051C0025O00807FC0025O0090704000673O0012C83O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A4O002A2O010004000200106C3O0006000100123F3O000B3O0012542O01000C4O002C3O000200010012C83O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O0002000D3O00122O0003000E3O00122O0004000F4O002A2O010004000200106C3O0006000100123F3O000B3O0012542O01000C4O002C3O000200010012C83O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200103O00122O000300113O00122O000400124O002A2O010004000200106C3O0006000100123F3O000B3O0012542O01000C4O002C3O000200010012C83O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200133O00122O000300143O00122O000400154O002A2O010004000200106C3O0006000100123F3O000B3O0012542O01000C4O002C3O000200010012C83O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200163O00122O000300093O00122O000400174O002A2O010004000200106C3O0006000100123F3O000B3O0012542O01000C4O002C3O0002000100123F3O00013O0020DE5O00020020DE5O00030020DE5O00040020DE5O000500123F000100063O00206B2O010001000700122O000200183O00122O000300193O00122O0004001A6O00010004000200104O0006000100124O000B3O00122O0001000C8O0002000100124O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O0002001B3O00122O000300143O00122O0004001C6O00010004000200104O000600016O00017O00173O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O0057616974026O00F03F030C3O00536972656E496E666C696374027O0040025O00C07240030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O00536972656E030A3O004669726553657276657203063O00756E7061636B00373O0012873O00013O00206O000200206O000300122O000100043O00122O000200013O00202O00020002000200202O0002000200054O000200036O00013O000300044O003400010020DE00060005000600261001060034000100070004A03O003400010006200005003400013O0004A03O003400010020DE0006000500060020A200060006000800202O00060006000900202O00073O000600202O00070007000800202O0007000700094O00060006000700202O00060006000A00262O000600340001000B0004A03O003400010020DE0007000500060006350107001F000100010004A03O001F00010020DE00070005000C00202700070007000D2O00140107000200022O002801083O00020030530108000E000F4O00093O000100102O0009000E000700102O00080010000900122O0009000E3O00122O000A00113O00122O000B000E3O00042O00090034000100123F000D00013O00205E010D000D001200122O000F00136O000D000F000200202O000D000D001400202O000D000D001500202O000D000D001600122O000F00176O001000086O000F00106O000D3O00010004360109002800010006662O01000A000100020004A03O000A00012O00B33O00017O00103O002O033O00526570030A3O004368617261637465727303083O00516574736979616803073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503183O005165747369796168204F2O63757069656420436865636B2103043O005465787403163O005165747369796168206973206E6F742074616B656E2103153O0051657473697961682069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030E3O00486F7065204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503143O00486F7065204F2O63757069656420436865636B2103043O005465787403123O00486F7065206973206E6F742074616B656E2103113O00486F70652069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O004368617261637465727303113O004E696B6C617573204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503173O004E696B6C617573204F2O63757069656420436865636B2103043O005465787403153O004E696B6C617573206973206E6F742074616B656E2103143O004E696B6C6175732069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O004368617261637465727303113O00526562656B6168204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503173O00526562656B6168204F2O63757069656420436865636B2103043O005465787403153O00526562656B6168206973206E6F742074616B656E2103143O00526562656B61682069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030D3O004B6F6C204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503133O004B6F6C204F2O63757069656420436865636B2103043O005465787403113O004B6F6C206973206E6F742074616B656E2103103O004B6F6C2069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030E3O0046692O6E204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503143O0046692O6E204F2O63757069656420436865636B2103043O005465787403123O0046692O6E206973206E6F742074616B656E2103113O0046692O6E2069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O004368617261637465727303103O00456C696A6168204D696B61656C736F6E03073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503163O00456C696A6168204F2O63757069656420436865636B2103043O005465787403143O00456C696A6168206973206E6F742074616B656E2103133O00456C696A61682069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030D3O0056616C657269652054752O6C6503073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503173O0056616C65726965204F2O63757069656420436865636B2103043O005465787403153O0056616C65726965206973206E6F742074616B656E2103143O0056616C657269652069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030B3O004D617279204C6F7569736503073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503143O004D617279204F2O63757069656420436865636B2103043O005465787403123O004D617279206973206E6F742074616B656E2103113O004D6172792069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O002O033O00526570030A3O0043686172616374657273030E3O004E6F72612048696C64656761726403073O0074616B656E427903053O0056616C75650003043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503143O004E6F7261204F2O63757069656420436865636B2103043O005465787403123O004E6F7261206973206E6F742074616B656E2103113O004E6F72612069732074616B656E2062792000203O0012AD3O00013O00206O000200206O000300202O00013O000400202O00020001000500262O00020012000100060004A03O0012000100123F000200073O00208C01020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00302O0005000E000F4O00020005000100044O001F000100123F000200073O0020A400020002000800122O000400096O00020004000200202O00020002000A00122O0004000B6O00053O000200302O0005000C000D00122O000600103O00202O0007000100054O00060006000700102O0005000E00064O0002000500012O00B33O00017O00103O00030C3O00736574636C6970626F61726403213O00506861736D61746F73204D616C6F732049676E697320496E63656E6469736D6F7303063O00506C6179657203073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F03043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503293O00506861736D61746F73204D616C6F732049676E697320496E63656E6469736D6F73206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O0012013O00013O00122O000100028O000200016O00016O000100013O00122O000200033O00202O00020002000400202O00020002000500022301046O001501020004000100122O000200063O00122O000300076O00020002000100122O000200083O00202O00020002000900122O0004000A6O00020004000200202O00020002000B00122O0004000C6O00053O000200302O0005000D000E00302O0005000F00104O0002000500016O00013O00013O001A3O0003063O00737472696E6703053O006C6F77657203043O0066696E6403213O00706861736D61746F73206D616C6F732069676E697320696E63656E6469736D6F7303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F030B3O0044697361626C6552696E67027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572013B3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002003A00013O0004A03O003A000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O003800010020DE00080007000A002610010800380001000B0004A03O0038000100062000070038000100020004A03O003800010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800380001000F0004A03O003800010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O009A000B3O000200302O000B0013001400102O000B0015000900122O000C00053O00202O000C000C001600122O000E00176O000C000E000200202O000C000C001800202O000C000C001900202O000D000C001A4O000F000A6O0010000B6O000D0010000100066601030015000100020004A03O001500012O00B33O00017O00103O00030C3O00736574636C6970626F61726403153O00506861736D61746F73204963747573206C6163757303063O00506C6179657203073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F03043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C65031D3O00506861736D61746F73204963747573206C61637573206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O0012013O00013O00122O000100028O000200016O00016O000100013O00122O000200033O00202O00020002000400202O00020002000500022301046O001501020004000100122O000200063O00122O000300076O00020002000100122O000200083O00202O00020002000900122O0004000A6O00020004000200202O00020002000B00122O0004000C6O00053O000200302O0005000D000E00302O0005000F00104O0002000500016O00013O00013O00183O0003063O00737472696E6703053O006C6F77657203043O0066696E6403153O00706861736D61746F73206963747573206C6163757303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403043O0050757368026O00F03F030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572013A3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002003900013O0004A03O0039000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O003700010020DE00080007000A002610010800370001000B0004A03O0037000100062000070037000100020004A03O003700010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800370001000F0004A03O003700010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O0028010B3O000100106C000B0013000900123F000C00053O0020F4000C000C001400122O000E00156O000C000E000200202O000C000C001600202O000C000C001700202O000D000C00184O000F000A6O0010000B6O000D0010000100066601030015000100020004A03O001500012O00B33O00017O00103O00030C3O00736574636C6970626F61726403113O00496E63656E6469616D6F73206D6F74757303063O00506C6179657203073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F03043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503193O00496E63656E6469616D6F73206D6F747573206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O0012013O00013O00122O000100028O000200016O00016O000100013O00122O000200033O00202O00020002000400202O00020002000500022301046O001501020004000100122O000200063O00122O000300076O00020002000100122O000200083O00202O00020002000900122O0004000A6O00020004000200202O00020002000B00122O0004000C6O00053O000200302O0005000D000E00302O0005000F00104O0002000500016O00013O00013O001D3O0003063O00737472696E6703053O006C6F77657203043O0066696E6403113O00696E63656E6469616D6F73206D6F74757303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465026O003440030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F03093O00466972655370652O6C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203043O007761697403053O004D6F7475730100014B3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002004A00013O0004A03O004A000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O004800010020DE00080007000A002610010800480001000B0004A03O0048000100062000070048000100020004A03O004800010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800480001000F0004A03O004800010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O009A000B3O000200302O000B0013001400102O000B0015000900122O000C00053O00202O000C000C001600122O000E00176O000C000E000200202O000C000C001800202O000C000C001900202O000D000C001A4O000F000A6O0010000B6O000D0010000100123F000D001B4O0022000D00010001001254010D00124O0028010E3O0002003025010E0013001C003025010E0015001D00123F000F00053O0020F4000F000F001600122O001100176O000F0011000200202O000F000F001800202O000F000F001900202O0010000F001A4O0012000D6O0013000E6O00100013000100066601030015000100020004A03O001500012O00B33O00017O00103O00030C3O00736574636C6970626F61726403193O0047656D696E6F2044656C66616E20656F74656E20636F72697303063O00506C6179657203073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F03043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503213O0047656D696E6F2044656C66616E20656F74656E20636F726973206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O0012013O00013O00122O000100028O000200016O00016O000100013O00122O000200033O00202O00020002000400202O00020002000500022301046O001501020004000100122O000200063O00122O000300076O00020002000100122O000200083O00202O00020002000900122O0004000A6O00020004000200202O00020002000B00122O0004000C6O00053O000200302O0005000D000E00302O0005000F00104O0002000500016O00013O00013O001A3O0003063O00737472696E6703053O006C6F77657203043O0066696E6403193O0067656D696E6F2064656C66616E20656F74656E20636F72697303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465026O003440030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572013B3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002003A00013O0004A03O003A000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O003800010020DE00080007000A002610010800380001000B0004A03O0038000100062000070038000100020004A03O003800010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800380001000F0004A03O003800010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O009A000B3O000200302O000B0013001400102O000B0015000900122O000C00053O00202O000C000C001600122O000E00176O000C000E000200202O000C000C001800202O000C000C001900202O000D000C001A4O000F000A6O0010000B6O000D0010000100066601030015000100020004A03O001500012O00B33O00017O00103O00030C3O00736574636C6970626F617264031B3O00506861736D61746F73204D6F74757320496E63656E6469616D6F7303063O00506C6179657203073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F03043O0067616D65030A3O0047657453657276696365030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503233O00506861736D61746F73204D6F74757320496E63656E6469616D6F73206C6F616465642103043O005465787403123O004D616465206279207469736E6F616823302E00183O0012013O00013O00122O000100028O000200016O00016O000100013O00122O000200033O00202O00020002000400202O00020002000500022301046O001501020004000100122O000200063O00122O000300076O00020002000100122O000200083O00202O00020002000900122O0004000A6O00020004000200202O00020002000B00122O0004000C6O00053O000200302O0005000D000E00302O0005000F00104O0002000500016O00013O00013O001A3O0003063O00737472696E6703053O006C6F77657203043O0066696E64031B3O00706861736D61746F73206D6F74757320696E63656E6469616D6F7303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465024O007E842E41030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F030A3O0046697265436972636C65027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572013B3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002003A00013O0004A03O003A000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O003800010020DE00080007000A002610010800380001000B0004A03O0038000100062000070038000100020004A03O003800010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800380001000F0004A03O003800010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O009A000B3O000200302O000B0013001400102O000B0015000900122O000C00053O00202O000C000C001600122O000E00176O000C000E000200202O000C000C001800202O000C000C001900202O000D000C001A4O000F000A6O0010000B6O000D0010000100066601030015000100020004A03O001500012O00B33O00017O000C3O00030C3O00736574636C6970626F61726403183O00506861736D61746F7320457870756C736F204D6178696D6103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503073O004368612O74656403073O00436F2O6E65637400153O0012D93O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O000300030008001254010500094O006801030005000200202O00043O000A4O0004000200024O000500016O000600013O00202O00073O000B00202O00070007000C00022301096O00100007000900012O00B33O00013O00013O00213O0003063O00737472696E6703053O006C6F77657203043O0066696E6403183O00506861736D61746F7320457870756C736F204D6178696D6103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465025O00408F40030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F03093O00466972655370652O6C027O0040026O003440030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203093O004578706C6F73696F6E03103O0048756D616E6F6964522O6F745061727403063O00434672616D6503013O007003043O0050757368026O00494001683O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002006700013O0004A03O0067000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O006500010020DE00080007000A002610010800650001000B0004A03O0065000100062000070065000100020004A03O006500010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800650001000F0004A03O006500010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O006A010B3O000200302O000B0013001400102O000B0015000900122O000C00133O00122O000D00163O00122O000E00133O00042O000C003D000100123F001000053O0020F400100010001700122O001200186O00100012000200202O00100010001900202O00100010001A00202O00110010001B4O0013000A6O0014000B6O001100140001000436010C00320001001254010C00124O0028010D3O0002003025010D0013001C0020DE000E0009001D0020DE000E000E001E0020DE000E000E001F00106C000D0015000E001254010E00133O001254010F00163O001254011000133O00045C010E0053000100123F001200053O0020F400120012001700122O001400186O00120014000200202O00120012001900202O00120012001A00202O00130012001B4O0015000C6O0016000D6O001300160001000436010E00480001001254010E00204O0028010F3O000100106C000F00130009001254011000133O001254011100213O001254011200133O00045C01100065000100123F001400053O0020F400140014001700122O001600186O00140016000200202O00140014001900202O00140014001A00202O00150014001B4O0017000E6O0018000F6O0015001800010004360110005A000100066601030015000100020004A03O001500012O00B33O00017O00163O00030C3O00736574636C6970626F61726403183O00506861736D61746F73204465766F72616D204D6178696D6103043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503013O005903073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C65031F3O00506861736D61746F73204465766F72616D204D6178696D61206C6F6164656403043O005465787403123O004D616465206279207469736E6F616823302E00233O0012683O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O00030003000800122O000500096O00030005000200202O00043O000A4O0004000200024O000500013O00122O0006000B6O000700013O00202O00083O000C00202O00080008000D000223010A6O00150108000A000100122O0008000E3O00122O0009000F6O00080002000100122O000800033O00202O00080008000800122O000A00106O0008000A000200202O00080008001100122O000A00126O000B3O000200302O000B0013001400302O000B001500164O0008000B00016O00013O00013O00153O0003063O00737472696E6703053O006C6F77657203043O0066696E6403183O00706861736D61746F73206465766F72616D206D6178696D61028O00026O002440026O00E03F03053O004D61676963026O00F03F030F3O00416476616E636564496E666C69637403043O0067616D65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203043O007761697403073O00536E6170412O6C026O00234003053O004D6F747573030C3O00496E7669736962696C697479014D3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002004C00013O0004A03O004C0001001254010200053O001254010300063O001254010400073O00045C0102004C0001001254010600084O001700073O000100302O00070009000A00122O0008000B3O00202O00080008000C00122O000A000D6O0008000A000200202O00080008000E00202O00080008000F00202O0009000800104O000B00066O000C00076O0009000C000100122O000900113O00122O000A00076O00090002000100122O000900086O000A3O000100302O000A0009001200122O000B000B3O00202O000B000B000C00122O000D000D6O000B000D000200202O000B000B000E00202O000B000B000F00202O000C000B00104O000E00096O000F000A6O000C000F000100122O000C00113O00122O000D00076O000C0002000100262O0005004B000100130004A03O004B0001001254010C00084O0028010D3O0001003025010D0009001400123F000E000B3O0020F4000E000E000C00122O0010000D6O000E0010000200202O000E000E000E00202O000E000E000F00202O000F000E00104O0011000C6O0012000D6O000F00120001001254010F00084O002801103O000100302501100009001500123F0011000B3O0020F400110011000C00122O0013000D6O00110013000200202O00110011000E00202O00110011000F00202O0012001100104O0014000F6O001500106O0012001500010004360102000F00012O00B33O00017O000D3O00030C3O00736574636C6970626F61726403073O00417363656E646F03043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503013O005903073O004368612O74656403073O00436F2O6E65637400163O0012683O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O00030003000800122O000500096O00030005000200202O00043O000A4O0004000200024O000500013O00122O0006000B6O000700013O00202O00083O000C00202O00080008000D000223010A6O00100008000A00012O00B33O00013O00013O00183O0003063O00737472696E6703053O006C6F77657203043O0066696E6403073O00617363656E646F03043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F696403193O00476574506C6179696E67416E696D6174696F6E547261636B7303053O00706169727303043O0053746F70030A3O00362O313236353235363203083O00496E7374616E63652O033O006E657703093O00416E696D6174696F6E030B3O00416E696D6174696F6E4964030D3O00726278612O73657469643A2O2F030D3O004C6F6164416E696D6174696F6E03043O00506C6179030B3O0041646A75737453702O6564026O00E03F03043O0077616974026O00304001433O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002004200013O0004A03O0042000100123F000200053O00203700020002000600202O00020002000700202O00020002000800202O00020002000900202O00030002000A4O00030002000200122O0004000B6O000500036O00040002000600044O0018000100202700090008000C2O002C00090002000100066601040016000100020004A03O001600010012540104000D3O00123F0005000E3O0020DE00050005000F001254010600104O0014010500020002001254010600124O000C010700044O007F00060006000700100601050011000600122O000600053O00202O00060006000600202O00060006000700202O00060006000800202O00060006000900202O0006000600134O000800056O00060008000200202O0007000600142O002C000700020001002027000700060015001254010900164O001000070009000100123F000700173O00120A000800186O00070002000100122O000700053O00202O00070007000600202O00070007000700202O00070007000800202O00070007000900202O00080007000A4O00080002000200122O0009000B6O000A00086O00090002000B00044O00400001002027000E000D000C2O002C000E000200010006660109003E000100020004A03O003E00012O00B33O00017O00193O00030B3O00416E696D6174696F6E496403093O0035302O37383530373203083O00496E7374616E63652O033O006E657703093O00416E696D6174696F6E030D3O00726278612O73657469643A2O2F03043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030D3O004C6F6164416E696D6174696F6E03043O00506C617903093O0057616C6B53702O6564025O00804640030A3O003534313431353639343103093O00486970486569676874026O00144003043O0077616974026O002440026O00304003193O00476574506C6179696E67416E696D6174696F6E547261636B7303053O00706169727303043O0053746F70027O004000593O0012863O00023O00124O00013O00124O00033O00206O000400122O000100058O0002000200122O000100063O00122O000200016O00010001000200104O0001000100122O000100073O00202O00010001000800202O00010001000900202O00010001000A00202O00010001000B00202O00010001000C4O00038O00010003000200202O00020001000D4O00020002000100122O000200073O00202O00020002000800202O00020002000900202O00020002000A00202O00020002000B00302O0002000E000F00122O000200103O00122O000200013O00122O000200033O00202O00020002000400122O000300056O00020002000200122O000300063O00122O000400016O00030003000400102O00020001000300122O000300073O00202O00030003000800202O00030003000900202O00030003000A00202O00030003000B00202O00030003000C4O000500026O00030005000200202O00040003000D4O00040002000100122O000400073O00202O00040004000800202O00040004000900202O00040004000A00202O00040004000B00302O00040011001200122O000400073O00202O00040004000800202O00040004000900202O00040004000A00202O00040004000B00302O0004000E000F00122O000400133O00122O000500146O00040002000100122O000400073O00202O00040004000800202O00040004000900202O00040004000A00202O00040004000B00302O0004000E001500122O000400073O00202O00040004000800202O00040004000900202O00040004000A00202O00040004000B00202O0005000400164O00050002000200122O000600176O000700056O00060002000800044O00500001002027000B000A00182O002C000B000200010006660106004E000100020004A03O004E000100123F000600073O00204B01060006000800202O00060006000900202O00060006000A00202O00060006000B00302O0006001100196O00017O00153O00030C3O00736574636C6970626F617264030C3O0049676E69732055626971756503043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503073O004368612O74656403073O00436F2O6E65637403043O0077616974026O33D33F030A3O005374617274657247756903073O00536574436F726503103O0053656E644E6F74696669636174696F6E03053O005469746C6503133O0049676E697320556269717565206C6F6164656403043O005465787403123O004D616465206279207469736E6F616823302E00223O0012D93O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O000300030008001254010500094O006801030005000200202O00043O000A4O0004000200024O000500016O000600013O00202O00073O000B00202O00070007000C00022301096O001501070009000100122O0007000D3O00122O0008000E6O00070002000100122O000700033O00202O00070007000800122O0009000F6O00070009000200202O00070007001000122O000900116O000A3O000200302O000A0012001300302O000A001400154O0007000A00016O00013O00013O00263O0003063O00737472696E6703053O006C6F77657203043O0066696E64030C3O0069676E69732075626971756503043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465025O00408F40030E3O00436861726163746572412O64656403043O0057616974030B3O00416E696D6174696F6E4964030A3O003534313439303233303803083O00496E7374616E63652O033O006E657703093O00416E696D6174696F6E030D3O00726278612O73657469643A2O2F03083O0048756D616E6F6964030D3O004C6F6164416E696D6174696F6E03043O00506C617903053O004D61676963026O00F03F03093O00466972655370652O6C027O0040026O003440030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203193O00476574506C6179696E67416E696D6174696F6E547261636B7303043O0053746F7001633O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002006200013O0004A03O0062000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O006000010020DE00080007000A002610010800600001000B0004A03O0060000100062000070060000100020004A03O006000010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800600001000F0004A03O006000010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00133O001294010A00123O00122O000A00143O00202O000A000A001500122O000B00166O000A0002000200122O000B00173O00122O000C00126O000B000B000C00102O000A0012000B00122O000B00053O0020DE000B000B0006002078000B000B000700202O000B000B000A00202O000B000B001800202O000B000B00194O000D000A6O000B000D000200202O000C000B001A4O000C0002000100122O000C001B4O006A010D3O000200302O000D001C001D00102O000D001E000900122O000E001C3O00122O000F001F3O00122O0010001C3O00042O000E0051000100123F001200053O0020F400120012002000122O001400216O00120014000200202O00120012002200202O00120012002300202O0013001200244O0015000C6O0016000D6O001300160001000436010E0046000100123F000E00053O002037000E000E000600202O000E000E000700202O000E000E000A00202O000E000E001800202O000F000E00254O000F0002000200122O001000086O0011000F6O00100002001200044O005E00010020270015001400262O002C0015000200010006660110005C000100020004A03O005C000100066601030015000100020004A03O001500012O00B33O00017O000C3O00030C3O00736574636C6970626F61726403113O00506861736D61746F732055706C61636F7803043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503073O004368612O74656403073O00436F2O6E65637400153O0012D93O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O000300030008001254010500094O006801030005000200202O00043O000A4O0004000200024O000500016O000600013O00202O00073O000B00202O00070007000C00022301096O00100007000900012O00B33O00013O00013O001C3O0003063O00737472696E6703053O006C6F77657203043O0066696E6403113O00706861736D61746F732075706C61636F7803043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465025O00408F4003053O004D61676963026O00F03F03053O004D6F747573027O00400100030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203043O0077616974029A5O99B93F03073O00536E6170412O6C014A3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002004900013O0004A03O0049000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O004700010020DE00080007000A002610010800470001000B0004A03O0047000100062000070047000100020004A03O004700010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800470001000F0004A03O00470001001254010900104O0077010A3O000200302O000A0011001200302O000A0013001400122O000B00113O00122O000C000F3O00122O000D00113O00042O000B0037000100123F000F00053O0020F4000F000F001500122O001100166O000F0011000200202O000F000F001700202O000F000F001800202O0010000F00194O001200096O0013000A6O001000130001000436010B002C000100123F000B001A3O001248000C001B6O000B0002000100122O000B00106O000C3O000100302O000C0011001C00122O000D00053O00202O000D000D001500122O000F00166O000D000F000200202O000D000D001700202O000D000D001800202O000E000D00194O0010000B6O0011000C6O000E0011000100066601030015000100020004A03O001500012O00B33O00017O000C3O00030C3O00736574636C6970626F61726403063O00536F6D6E757303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203083O0048756D616E6F6964030A3O004765745365727669636503103O0055736572496E7075745365727669636503083O004765744D6F75736503073O004368612O74656403073O00436F2O6E65637400153O0012D93O00013O00122O000100028O0002000100124O00033O00206O000400206O000500202O00013O000600202O00020001000700122O000300033O00202O000300030008001254010500094O006801030005000200202O00043O000A4O0004000200024O000500016O000600013O00202O00073O000B00202O00070007000C00022301096O00100007000900012O00B33O00013O00013O001A3O0003063O00737472696E6703053O006C6F77657203043O0066696E6403063O00736F6D6E757303043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203053O007061697273030A3O00476574506C617965727303093O0043686172616374657200030A3O00552O706572546F72736F03083O00506F736974696F6E03093O006D61676E6974756465025O00408F40030E3O00436861726163746572412O64656403043O005761697403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572013B3O001274000100013O00202O0001000100024O00028O00010002000200122O000200013O00202O0002000200034O000300013O00122O000400046O00020004000200062O0002003A00013O0004A03O003A000100123F000200053O00201E01020002000600202O00020002000700122O000300083O00122O000400053O00202O00040004000600202O0004000400094O000400056O00033O000500044O003800010020DE00080007000A002610010800380001000B0004A03O0038000100062000070038000100020004A03O003800010020DE00080007000A0020A200080008000C00202O00080008000D00202O00090002000A00202O00090009000C00202O00090009000D4O00080008000900202O00080008000E00262O000800380001000F0004A03O003800010020DE00090007000A0006350109002A000100010004A03O002A00010020DE0009000700100020270009000900112O0014010900020002001254010A00124O009A000B3O000200302O000B0013001400102O000B0015000900122O000C00053O00202O000C000C001600122O000E00176O000C000E000200202O000C000C001800202O000C000C001900202O000D000C001A4O000F000A6O0010000B6O000D0010000100066601030015000100020004A03O001500012O00B33O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O008077C0025O00C070C0025O0011B3C003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000F3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65030A3O004765745365727669636503093O00576F726B7370616365030E3O0046696E6446697273744368696C64030C3O0041737472616C6973442O6F7203073O0044657374726F792O033O006E6577025O00E077C0026O000840026O0049C000253O00123F3O00013O0020DE5O00020020DE5O00030020DE5O00040020DE5O00050020DE5O000600123F000100013O002027000100010007001254010300084O002A2O01000300020020270001000100090012540103000A4O002A2O01000300020006182O01001800013O0004A03O0018000100123F000100013O002027000100010007001254010300084O002A2O010003000200200F2O010001000900122O0003000A6O00010003000200202O00010001000B4O00010002000100123F000100013O0020DE0001000100020020DE0001000100030020DE0001000100040020DE00010001000500123F000200063O0020DE00020002000C0012540103000D3O0012540104000E3O0012540105000F4O002A01020005000200106C0001000600022O00B33O00017O000F3O0003043O0067616D65030A3O004765745365727669636503093O00576F726B7370616365030E3O0046696E6446697273744368696C64030A3O004C6176656175442O6F7203073O0044657374726F7903073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00C077C0026O000840026O001C40001F3O00123F3O00013O0020275O0002001254010200034O002A012O000200020020275O0004001254010200054O002A012O00020002000618012O001200013O0004A03O0012000100123F3O00013O0020275O0002001254010200034O002A012O0002000200200F014O000400122O000200058O0002000200206O00066O0002000100123F3O00013O0020DE5O00070020DE5O00080020DE5O00090020DE5O000A00123F0001000B3O0020DE00010001000C0012540102000D3O0012540103000E3O0012540104000F4O002A2O010004000200106C3O000B00012O00B33O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577026O007B40026O001C40025O0058844003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00206CC0026O003AC0025O004051C003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00607FC0026O001440025O0050704003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00707FC0026O000840026O004A4003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O003080C0026O001040027O004003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577026O0077C0026O000840026O00554003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00807BC0026O00144003023O002D3003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O000D3O0003043O0067616D6503073O00506C6179657273030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D652O033O006E6577025O00805FC0026O001440027O004003083O0048756D616E6F696403043O0077616974029A5O99B93F00153O001263012O00013O00206O000200206O000300206O000400206O000500122O000100063O00202O00010001000700122O000200083O00122O000300093O00122O0004000A6O00010004000200122O000200013O00202O00020002000200202O00020002000300202O00020002000400202O00020002000B00122O0003000C3O00122O0004000D6O00030002000100104O000600016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C00353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001100202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203043O004865616C03073O0056616D7069726500353O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100302O0006000D000E00122O000700013O00202O00070007000F00122O000900026O00070009000200202O00070007001000202O00070007001100202O0008000700124O000A00056O000B00066O0008000B000100122O000800136O00093O000100102O0009000D000400122O000A00013O00202O000A000A000F00122O000C00026O000A000C000200202O000A000A001000202O000A000A001400202O000B000A00124O000D00086O000E00096O000B000E00016O00017O00143O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F7450617274026O00F03F03053O004D61676963027O004003093O00466972655370652O6C030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500208A00010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A4O00053O000200302O0005000C000D4O00063O000200302O0006000C000F00102O0006000E000400102O0005000E000600122O000600013O00202O00060006001000122O000800026O00060008000200202O00060006001100202O00060006001200202O00060006001300122O000800146O000900056O000800096O00063O00016O00017O00113O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403043O0050757368026O00F03F030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200283O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020F100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000100102O0006000D000400122O000700013O00202O00070007000E00122O000900026O00070009000200202O00070007000F00202O00070007001000202O0008000700114O000A00056O000B00066O0008000B00016O00017O00183O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03053O004D6F747573027O00402O01026O000840030A3O004765745365727669636503093O00576F726B7370616365030B3O006465617468436C6F6E6573030A3O006465617468436C6F6E6503063O004576656E747303053O005769746368030A3O004669726553657276657200333O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500203900010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000300302O0006000D000E00302O0006000F001000122O000700013O00202O00070007001200122O000900136O00070009000200202O00070007001400202O00080002000800122O000900156O0008000800094O00070007000800102O00060011000700122O000700013O00202O00070007001200122O000900026O00070009000200202O00070007001600202O00070007001700202O0008000700184O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503043O0077616974026O00E03F03083O004F726967696E616C030A3O004765745365727669636503063O004576656E747303053O005374616B65030A3O004669726553657276657200323O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202E2O010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O000500013O00202O00050005000700202O00050005000900202O00050005000A00202O00050005000B00202O00060004000B00202O00060006000C00102O0005000C000600122O0005000D3O00122O0006000E6O0005000200014O000500043O00122O0006000F3O00122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O000C3O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65001E3O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O00050020A100010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A0020DE00030003000B00206E00040002000A00202O00050004000B00202O00050005000C00102O0003000C00056O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00133O0003043O0067616D6503113O005265706C69636174656453746F72616765030A3O0043686172616374657273030E3O0046696E6446697273744368696C6403073O0074616B656E427903053O0056616C756503073O00506C617965727303043O004E616D65030B3O004C6F63616C506C6179657203093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403053O004D61676963026O00F03F03103O0054656C656B696E657469634865617274027O0040030A3O004765745365727669636503063O004576656E747303053O005769746368030A3O004669726553657276657200293O001264012O00013O00206O000200206O000300206O00044O00029O000002000200064O000D000100010004A03O000D000100123F3O00013O0020DE5O00020020DE5O00032O007C2O016O0071014O00010020DE00013O000500202500010001000600122O000200013O00202O00020002000700202O00020002000400202O0004000100084O00020004000200122O000300013O00202O00030003000700202O00030003000900202O00030003000A00202O00030003000B00202O00040002000A00122O0005000C6O00063O000200302O0006000D000E00102O0006000F000400122O000700013O00202O00070007001000122O000900026O00070009000200202O00070007001100202O00070007001200202O0008000700134O000A00056O000B00066O0008000B00016O00017O00023O00030C3O00736574636C6970626F61726403093O007469736E6F6168233000043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00023O00030C3O00736574636C6970626F617264031D3O00682O7470733A2O2F646973636F72642E2O672F3536614E35645A32537700043O00123F3O00013O0012542O0100024O002C3O000200012O00B33O00017O00083O002O0103043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503093O00496E20416374697665010E3O00262A3O0008000100010004A03O0008000100123F000100023O0020462O010001000300202O00010001000400202O00010001000500302O00010006000700044O000D000100123F000100023O0020DE0001000100030020DE0001000100040020DE0001000100050030252O01000600082O00B33O00017O000E3O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E67026O00F03F030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E7473030A3O0046612O6C44616D616765030A3O004669726553657276657203063O00756E7061636B00193O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0018000100060004A03O0018000100123F3O00073O000618012O000B00013O0004A03O000B00012O00B33O00014O0028014O0001003025012O0008000800123F000100013O00205E2O010001000900122O0003000A6O00010003000200202O00010001000B00202O00010001000C00202O00010001000D00122O0003000E6O00048O000300046O00013O00012O00B33O00017O00133O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03043O0050757368027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00263O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0025000100060004A03O00250001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002500013O0004A03O002500010020DE00030002000800203901030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000100202O00060002000800102O0005000B000600102O0004000D000500122O000500013O00205E01050005000E00122O0007000F6O00050007000200202O00050005001000202O00050005001100202O00050005001200122O000700136O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503053O004D6167696303093O00466972655370652O6C026O00F03F026O000840030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002C3O0012AD3O00013O00206O000200206O000300206O000400206O000500264O002B000100060004A03O002B0001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002B00013O0004A03O002B00010020DE00030002000800200400030003000900202O00030003000A4O000400023O00122O0005000B6O000600023O00122O0007000C3O00202O0008000200084O0006000200012O00520104000200010012540105000D3O0012540106000E3O0012540107000D3O00045C0105002B000100123F000900013O00205E01090009000F00122O000B00106O0009000B000200202O00090009001100202O00090009001200202O00090009001300122O000B00146O000C00046O000B000C6O00093O00010004360105001F00012O00B33O00013O00023O001E3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903063O0069706169727303073O00506C6179657273030A3O00476574506C617965727303093O0043686172616374657203053O007461626C6503063O00696E73657274030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F4003083O00496E7374616E6365030E3O00497344657363656E64616E744F6600473O001287012O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0005000A3O00122O000600013O00202O00060006000200122O0008000B6O00060008000200202O00060006000C4O000600076O00053O000700044O001E00010020DE000A0009000D000618010A001E00013O0004A03O001E000100123F000A000E3O0020DE000A000A000F2O000C010B00043O0020DE000C0009000D2O0010000A000C000100066601050016000100020004A03O0016000100123F000500103O00205E0005000500114O00050001000200122O000600133O00202O00060006001400202O00060006001500102O00050012000600102O00050016000400302O00050017001800122O000600043O00202O00060006001900202O00080003001A00202O00090003001B00202O00090009001C4O000A00056O0006000A000200062O0006004400013O0004A03O0044000100123F0007000A3O0012C0000800013O00202O00080008000200122O000A000B6O0008000A000200202O00080008000C4O000800096O00073O000900044O004200010020DE000C0006001D002027000C000C001E0020DE000E000B000D2O002A010C000E0002000618010C004200013O0004A03O004200012O00FF000B00023O0006660107003B000100020004A03O003B00012O0024000700074O00FF000700024O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00133O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65030B3O005061696E496E666C696374026O00F03F027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B002B3O0012AD3O00013O00206O000200206O000300206O000400206O000500264O002A000100060004A03O002A0001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002A00013O0004A03O002A00010020DE0003000200080020DE0003000300090020DE00030003000A2O0028010400023O0012540105000B4O0028010600013O0020DE0007000200082O00520106000100012O00520104000200010012540105000C3O0012540106000D3O0012540107000C3O00045C0105002A000100123F000900013O00205E01090009000E00122O000B000F6O0009000B000200202O00090009001000202O00090009001100202O00090009001200122O000B00136O000C00046O000B000C6O00093O00010004360105001E00012O00B33O00013O00023O001C3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903063O0069706169727303073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003A3O001287012O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0005000A3O00122O000600013O00202O00060006000200122O0008000B6O00060008000200202O00060006000C4O000600076O00053O000700044O001A00012O001C000A00043O0020E0000A000A000D0020DE000B0009000E2O00480104000A000B00066601050016000100020004A03O0016000100123F0005000F3O00205E0005000500104O00050001000200122O000600123O00202O00060006001300202O00060006001400102O00050011000600102O00050015000400302O00050016001700122O000600043O00202O00060006001800202O00080003001900202O00090003001A00202O00090009001B4O000A00056O0006000A000200062O0006003700013O0004A03O003700012O00B7000700013O0006EA00083O000100012O000C012O00063O00262A000700340001001C0004A03O003400010004A03O003700012O000C010900084O00220009000100010004A03O003100012O00B700076O00FF000700024O00B33O00013O00013O00083O0003063O0069706169727303043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200153O00123F3O00013O0012C0000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O000100029O00000200044O001200012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050011000100010004A03O001100012O00B33O00014O00FF000400023O000666012O0009000100020004A03O000900012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O004003083O00536E61704E65636B030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F757365026O00F03F03053O004D61676963027O004003073O00536E6170412O6C030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00213O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0020000100060004A03O0020000100123F3O00073O000618012O000B00013O0004A03O000B00012O00B33O00013O00123F3O00013O0020DE5O00080020DE5O00090020275O000A2O0014012O000200022O00282O013O00020030252O01000B000C2O002801023O00010030250102000B000E00106C0001000D000200123F000200013O00205E01020002000F00122O000400106O00020004000200202O00020002001100202O00020002001200202O00020002001300122O000400146O000500016O000400056O00023O00012O00B33O00017O00153O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503053O004D61676963026O00F03F03093O004578706C6F73696F6E027O00402O033O0048697403013O0070030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200213O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0020000100060004A03O0020000100123F3O00073O000618012O000B00013O0004A03O000B00012O00B33O00013O00123F3O00013O0020C65O000800206O000900206O000A6O0002000200122O0001000B6O00023O000200302O0002000C000D00202O00033O000F00202O00030003001000102O0002000E000300122O000300013O00202O00030003001100122O000500126O00030005000200202O00030003001300202O00030003001400202O0004000300154O000600016O000700026O0004000700012O00B33O00017O00153O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F757365026O00F03F03053O004D61676963027O004003053O004D6F7475730100030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00223O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0021000100060004A03O0021000100123F3O00073O000618012O000B00013O0004A03O000B00012O00B33O00013O00123F3O00013O0020DE5O00080020DE5O00090020275O000A2O0014012O000200022O00282O013O00020030252O01000B000C2O002801023O00020030250102000B000E0030250102000D000F00106C0001000D000200123F000200013O00205E01020002001000122O000400116O00020004000200202O00020002001200202O00020002001300202O00020002001400122O000400156O000500016O000400056O00023O00012O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O0040030A3O0046697265436972636C65030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O0040030B3O0044697361626C6552696E67030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O0040030A3O00456E61626C6552696E67030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O004003103O0054656C656B696E657469634865617274030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03053O004D61676963027O004003083O00427265616B4C6567030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE00030002000800203C01030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200302O0005000B000E00202O00060002000800102O0005000D000600102O0004000D000500122O000500013O00202O00050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00133O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503053O004D61676963026O00F03F030A3O00536C2O65705370652O6C027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200243O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0023000100060004A03O00230001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002300013O0004A03O002300010020DE00030002000800202901030003000900202O00030003000A00122O0004000B6O00053O000200302O0005000C000D00202O00060002000800102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O0007000600134O000900046O000A00056O0007000A00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00133O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D6503053O004D61676963026O00F03F030A3O00426C2O6F6443686F6B65027O0040030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657200243O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0023000100060004A03O00230001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002300013O0004A03O002300010020DE00030002000800202901030003000900202O00030003000A00122O0004000B6O00053O000200302O0005000C000D00202O00060002000800102O0005000E000600122O000600013O00202O00060006000F00122O000800106O00060008000200202O00060006001100202O00060006001200202O0007000600134O000900046O000A00056O0007000A00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00143O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703093O0043686172616374657203103O0048756D616E6F6964522O6F745061727403063O00434672616D65026O00F03F03063O00536970686F6E027O004003093O004F2O66656E73697665030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O004669726553657276657203063O00756E7061636B00273O0012AD3O00013O00206O000200206O000300206O000400206O000500264O0026000100060004A03O00260001000223016O0002232O0100013O00123F000200073O0006180102000D00013O0004A03O000D00012O00B33O00014O000C01026O000D0102000100020006180102002600013O0004A03O002600010020DE0003000200080020D600030003000900202O00030003000A4O00043O000200302O0004000B000C4O00053O000200202O00060002000800102O0005000B000600302O0005000D000E00102O0004000D000500122O000500013O00205E01050005000F00122O000700106O00050007000200202O00050005001100202O00050005001200202O00050005001300122O000700146O000800046O000700086O00053O00012O00B33O00013O00023O001D3O0003043O0067616D65030A3O004765745365727669636503103O0055736572496E7075745365727669636503093O00776F726B7370616365030D3O0043752O72656E7443616D65726103103O004765744D6F7573654C6F636174696F6E03123O0056696577706F7274506F696E74546F52617903013O005803013O005903073O00706C617965727303043O006E65787403073O00506C6179657273030A3O00476574506C6179657273026O00F03F03093O00436861726163746572030D3O0052617963617374506172616D732O033O006E6577030A3O0046696C7465725479706503043O00456E756D03113O005261796361737446696C7465725479706503093O0057686974656C697374031A3O0046696C74657244657363656E64616E7473496E7374616E636573030B3O0049676E6F726557617465722O0103073O005261796361737403063O004F726967696E03093O00446972656374696F6E025O00408F40012O003D3O0012A73O00013O00206O000200122O000200038O0002000200122O000100043O00202O00010001000500202O00023O00064O00020002000200202O00030001000700202O00050002000800202O0006000200094O0003000600024O00045O00122O0004000A3O00122O0004000B3O00122O000500013O00202O00050005000200122O0007000C6O00050007000200202O00050005000D4O00050002000600044O001C000100123F0009000A3O00126B000A000A6O000A000A3O00202O000A000A000E00202O000B0008000F4O0009000A000B00066601040016000100020004A03O0016000100123F000400103O0020340004000400114O00040001000200122O000500133O00202O00050005001400202O00050005001500102O00040012000500122O0005000A3O00102O00040016000500302O00040017001800122O000500043O00202O00050005001900202O00070003001A00202O00080003001B00202O00080008001C4O000900046O00050009000200062O0005003A00013O0004A03O003A00012O00B7000600013O0006EA00073O000100012O000C012O00053O00262A000600370001001D0004A03O003700010004A03O003A00012O000C010800074O00220008000100010004A03O003400012O00B700066O00FF000600024O00B33O00013O00013O00083O0003043O006E65787403043O0067616D65030A3O004765745365727669636503073O00506C6179657273030A3O00476574506C617965727303083O00496E7374616E6365030E3O00497344657363656E64616E744F6603093O0043686172616374657200143O0012083O00013O00122O000100023O00202O00010001000300122O000300046O00010003000200202O0001000100054O00010002000200044O001100012O007C01055O00202D00050005000600202O00050005000700202O0007000400084O00050007000200062O00050010000100010004A03O001000012O00B33O00014O00FF000400023O000666012O0008000100020004A03O000800012O00B33O00017O00023O0003063O006970616972733O010C4O008F00015O00122O000200016O00038O00020002000400044O000800010006180106000800013O0004A03O000800010020552O010006000200066601020005000100020004A03O000500012O00FF000100024O00B33O00017O00123O0003043O0067616D6503093O00776F726B7370616365030B3O00417374726F56616C75657303043O004B65797303053O0056616C756503063O0041637469766503083O004973547970696E6703073O00506C6179657273030B3O004C6F63616C506C6179657203083O004765744D6F75736503053O004D61676963026O00F03F030C3O00496E7669736962696C697479030A3O004765745365727669636503113O005265706C69636174656453746F7261676503063O004576656E747303053O005769746368030A3O0046697265536572766572001E3O0012AD3O00013O00206O000200206O000300206O000400206O000500264O001D000100060004A03O001D000100123F3O00073O000618012O000B00013O0004A03O000B00012O00B33O00013O00123F3O00013O0020DE5O00080020DE5O00090020275O000A2O0014012O000200020012542O01000B4O002801023O00010030250102000C000D00123F000300013O0020F400030003000E00122O0005000F6O00030005000200202O00030003001000202O00030003001100202O0004000300124O000600016O000700026O0004000700012O00B33O00017O00013O0003083O00546F2O676C65554900044O007C016O0020275O00012O002C3O000200012O00B33O00017O00", GetFEnv(), ...);